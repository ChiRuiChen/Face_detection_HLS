-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity conv_2d_cl_me_ap_fixed_ap_fixed_16_4_5_3_0_config2_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    data_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_V_empty_n : IN STD_LOGIC;
    data_V_V_read : OUT STD_LOGIC;
    res_V_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_V_full_n : IN STD_LOGIC;
    res_V_V_write : OUT STD_LOGIC );
end;


architecture behav of conv_2d_cl_me_ap_fixed_ap_fixed_16_4_5_3_0_config2_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000001000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000010000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000100000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000001000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000010000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000100000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000001000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000010000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000100000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (23 downto 0) := "000000000001000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (23 downto 0) := "000000000010000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (23 downto 0) := "000000000100000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (23 downto 0) := "000000001000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (23 downto 0) := "000000010000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (23 downto 0) := "000000100000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (23 downto 0) := "000001000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (23 downto 0) := "000010000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (23 downto 0) := "000100000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (23 downto 0) := "001000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (23 downto 0) := "010000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (23 downto 0) := "100000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv16_180 : STD_LOGIC_VECTOR (15 downto 0) := "0000000110000000";
    constant ap_const_lv16_100 : STD_LOGIC_VECTOR (15 downto 0) := "0000000100000000";
    constant ap_const_lv16_FF80 : STD_LOGIC_VECTOR (15 downto 0) := "1111111110000000";
    constant ap_const_lv16_80 : STD_LOGIC_VECTOR (15 downto 0) := "0000000010000000";
    constant ap_const_lv16_FF00 : STD_LOGIC_VECTOR (15 downto 0) := "1111111100000000";
    constant ap_const_lv16_FE80 : STD_LOGIC_VECTOR (15 downto 0) := "1111111010000000";
    constant ap_const_lv16_200 : STD_LOGIC_VECTOR (15 downto 0) := "0000001000000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv64_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv64_5 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000101";
    constant ap_const_lv64_6 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000110";
    constant ap_const_lv64_7 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000111";
    constant ap_const_lv64_8 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000";
    constant ap_const_lv64_9 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001001";
    constant ap_const_lv64_A : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001010";
    constant ap_const_lv64_B : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001011";
    constant ap_const_lv64_C : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001100";
    constant ap_const_lv64_D : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001101";
    constant ap_const_lv64_E : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001110";
    constant ap_const_lv64_F : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001111";
    constant ap_const_lv64_10 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010000";
    constant ap_const_lv64_11 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010001";
    constant ap_const_lv64_12 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010010";
    constant ap_const_lv64_13 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010011";
    constant ap_const_lv64_14 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010100";
    constant ap_const_lv64_15 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010101";
    constant ap_const_lv64_16 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010110";
    constant ap_const_lv64_17 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010111";
    constant ap_const_lv64_18 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011000";
    constant ap_const_lv64_19 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011001";
    constant ap_const_lv64_1A : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011010";
    constant ap_const_lv64_1B : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011011";
    constant ap_const_lv64_1C : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011100";
    constant ap_const_lv64_1D : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011101";
    constant ap_const_lv64_1E : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011110";
    constant ap_const_lv64_1F : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011111";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv11_484 : STD_LOGIC_VECTOR (10 downto 0) := "10010000100";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv5_1B : STD_LOGIC_VECTOR (4 downto 0) := "11011";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111100";
    constant ap_const_lv32_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000001";
    constant ap_const_lv32_42 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000010";
    constant ap_const_lv32_47 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000111";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    constant ap_const_lv32_4D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001101";
    constant ap_const_lv32_4E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001110";
    constant ap_const_lv32_53 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010011";
    constant ap_const_lv32_54 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010100";
    constant ap_const_lv32_59 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011001";
    constant ap_const_lv32_5A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011010";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_65 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100101";
    constant ap_const_lv32_66 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100110";
    constant ap_const_lv32_6B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101011";
    constant ap_const_lv32_6C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101100";
    constant ap_const_lv32_71 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110001";
    constant ap_const_lv32_72 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110010";
    constant ap_const_lv32_77 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110111";
    constant ap_const_lv32_78 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111000";
    constant ap_const_lv32_7D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111101";
    constant ap_const_lv32_7E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111110";
    constant ap_const_lv32_83 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000011";
    constant ap_const_lv32_84 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000100";
    constant ap_const_lv32_89 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001001";
    constant ap_const_lv32_8A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001010";
    constant ap_const_lv32_8F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001111";
    constant ap_const_lv32_90 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010000";
    constant ap_const_lv32_95 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010101";
    constant ap_const_lv32_96 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010110";
    constant ap_const_lv32_9B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011011";
    constant ap_const_lv32_9C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011100";
    constant ap_const_lv32_A1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100001";
    constant ap_const_lv32_A2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100010";
    constant ap_const_lv32_A7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100111";
    constant ap_const_lv32_A8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101000";
    constant ap_const_lv32_AD : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101101";
    constant ap_const_lv32_AE : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101110";
    constant ap_const_lv32_B3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010110011";
    constant ap_const_lv32_B4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010110100";
    constant ap_const_lv32_B9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111001";
    constant ap_const_lv32_BA : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111010";
    constant ap_const_lv32_BE : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111110";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal sX_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal sY_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal pY_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal pX_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal layer_in_V_9_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal layer_in_V_9_ce0 : STD_LOGIC;
    signal layer_in_V_9_we0 : STD_LOGIC;
    signal layer_in_V_9_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal w2_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal w2_V_ce0 : STD_LOGIC;
    signal w2_V_q0 : STD_LOGIC_VECTOR (190 downto 0);
    signal data_V_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal icmp_ln208_fu_1416_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal res_V_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal acc_V_31_0_reg_707 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_V_30_0_reg_720 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_V_29_0_reg_733 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_V_28_0_reg_746 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_V_27_0_reg_759 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_V_26_0_reg_772 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_V_25_0_reg_785 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_V_24_0_reg_798 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_V_23_0_reg_811 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_V_22_0_reg_824 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_V_21_0_reg_837 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_V_20_0_reg_850 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_V_19_0_reg_863 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_V_18_0_reg_876 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_V_17_0_reg_889 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_V_16_0_reg_902 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_V_15_0_reg_915 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_V_14_0_reg_928 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_V_13_0_reg_941 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_V_12_0_reg_954 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_V_11_0_reg_967 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_V_10_0_reg_980 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_V_9_0_reg_993 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_V_8_0_reg_1006 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_V_7_0_reg_1019 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_V_6_0_reg_1032 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_V_5_0_reg_1045 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_V_4_0_reg_1058 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_V_3_0_reg_1071 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_V_2_0_reg_1084 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_V_1_0_reg_1097 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_V_0_0_reg_1110 : STD_LOGIC_VECTOR (15 downto 0);
    signal in_index_reg_1123 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal i_fu_1410_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_reg_2367 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal i1_fu_1422_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_state3 : BOOLEAN;
    signal icmp_ln215_fu_1433_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln215_reg_2380 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1145_ap_ready : STD_LOGIC;
    signal grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1145_ap_done : STD_LOGIC;
    signal icmp_ln215_7_fu_1439_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln215_7_reg_2385 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln215_6_fu_1489_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln215_6_reg_2390 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln336_fu_1495_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln336_reg_2394 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state5_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln336_reg_2394_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln336_reg_2394_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ir_fu_1501_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal layer_in_V_9_load_reg_2413 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln344_fu_1513_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln344_reg_2449 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_96_reg_2454 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_97_reg_2459 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_98_reg_2464 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_99_reg_2469 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_100_reg_2474 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_101_reg_2479 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_102_reg_2484 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_103_reg_2489 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_104_reg_2494 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_105_reg_2499 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_106_reg_2504 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_107_reg_2509 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_108_reg_2514 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_109_reg_2519 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_110_reg_2524 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_111_reg_2529 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_112_reg_2534 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_113_reg_2539 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_114_reg_2544 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_115_reg_2549 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_116_reg_2554 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_117_reg_2559 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_118_reg_2564 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_119_reg_2569 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_120_reg_2574 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_121_reg_2579 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_122_reg_2584 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_123_reg_2589 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_124_reg_2594 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_125_reg_2599 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_126_reg_2604 : STD_LOGIC_VECTOR (4 downto 0);
    signal acc_0_V_fu_1831_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal acc_1_V_fu_1837_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_2_V_fu_1843_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_3_V_fu_1849_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_4_V_fu_1855_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_5_V_fu_1861_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_6_V_fu_1867_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_7_V_fu_1873_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_8_V_fu_1879_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_9_V_fu_1885_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_10_V_fu_1891_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_11_V_fu_1897_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_12_V_fu_1903_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_13_V_fu_1909_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_14_V_fu_1915_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_15_V_fu_1921_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_16_V_fu_1927_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_17_V_fu_1933_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_18_V_fu_1939_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_19_V_fu_1945_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_20_V_fu_1951_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_21_V_fu_1957_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_22_V_fu_1963_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_23_V_fu_1969_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_24_V_fu_1975_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_25_V_fu_1981_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_26_V_fu_1987_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_27_V_fu_1993_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_28_V_fu_1999_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_29_V_fu_2005_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_30_V_fu_2011_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_31_V_fu_2017_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_ic_fu_2029_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal i_ic_reg_2772 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal icmp_ln226_fu_2023_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln237_fu_2040_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln237_reg_2782 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state5 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal tmpdata_V_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmpdata_V_ce0 : STD_LOGIC;
    signal tmpdata_V_we0 : STD_LOGIC;
    signal tmpdata_V_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer_out_i_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal layer_out_i_ce0 : STD_LOGIC;
    signal layer_out_i_we0 : STD_LOGIC;
    signal layer_out_i_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer_out_i_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer_out_i_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal layer_out_i_ce1 : STD_LOGIC;
    signal layer_out_i_we1 : STD_LOGIC;
    signal layer_out_i_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1145_ap_start : STD_LOGIC;
    signal grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1145_ap_idle : STD_LOGIC;
    signal grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1145_data_V_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1145_data_V_ce0 : STD_LOGIC;
    signal grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1145_output_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1145_output_V_ce0 : STD_LOGIC;
    signal grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1145_output_V_we0 : STD_LOGIC;
    signal grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1145_output_V_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1164_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1164_ap_ce : STD_LOGIC;
    signal ap_block_state5_pp0_stage0_iter0_ignore_call8 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter1_ignore_call8 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter2_ignore_call8 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter3_ignore_call8 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp189 : BOOLEAN;
    signal grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1170_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1170_ap_ce : STD_LOGIC;
    signal ap_block_state5_pp0_stage0_iter0_ignore_call10 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter1_ignore_call10 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter2_ignore_call10 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter3_ignore_call10 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp190 : BOOLEAN;
    signal grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1176_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1176_ap_ce : STD_LOGIC;
    signal ap_block_state5_pp0_stage0_iter0_ignore_call12 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter1_ignore_call12 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter2_ignore_call12 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter3_ignore_call12 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp191 : BOOLEAN;
    signal grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1182_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1182_ap_ce : STD_LOGIC;
    signal ap_block_state5_pp0_stage0_iter0_ignore_call14 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter1_ignore_call14 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter2_ignore_call14 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter3_ignore_call14 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp192 : BOOLEAN;
    signal grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1188_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1188_ap_ce : STD_LOGIC;
    signal ap_block_state5_pp0_stage0_iter0_ignore_call16 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter1_ignore_call16 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter2_ignore_call16 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter3_ignore_call16 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp193 : BOOLEAN;
    signal grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1194_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1194_ap_ce : STD_LOGIC;
    signal ap_block_state5_pp0_stage0_iter0_ignore_call18 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter1_ignore_call18 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter2_ignore_call18 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter3_ignore_call18 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp194 : BOOLEAN;
    signal grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1200_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1200_ap_ce : STD_LOGIC;
    signal ap_block_state5_pp0_stage0_iter0_ignore_call20 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter1_ignore_call20 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter2_ignore_call20 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter3_ignore_call20 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp195 : BOOLEAN;
    signal grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1206_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1206_ap_ce : STD_LOGIC;
    signal ap_block_state5_pp0_stage0_iter0_ignore_call22 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter1_ignore_call22 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter2_ignore_call22 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter3_ignore_call22 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp196 : BOOLEAN;
    signal grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1212_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1212_ap_ce : STD_LOGIC;
    signal ap_block_state5_pp0_stage0_iter0_ignore_call24 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter1_ignore_call24 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter2_ignore_call24 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter3_ignore_call24 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp197 : BOOLEAN;
    signal grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1218_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1218_ap_ce : STD_LOGIC;
    signal ap_block_state5_pp0_stage0_iter0_ignore_call26 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter1_ignore_call26 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter2_ignore_call26 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter3_ignore_call26 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp198 : BOOLEAN;
    signal grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1224_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1224_ap_ce : STD_LOGIC;
    signal ap_block_state5_pp0_stage0_iter0_ignore_call28 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter1_ignore_call28 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter2_ignore_call28 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter3_ignore_call28 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp199 : BOOLEAN;
    signal grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1230_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1230_ap_ce : STD_LOGIC;
    signal ap_block_state5_pp0_stage0_iter0_ignore_call30 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter1_ignore_call30 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter2_ignore_call30 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter3_ignore_call30 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp200 : BOOLEAN;
    signal grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1236_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1236_ap_ce : STD_LOGIC;
    signal ap_block_state5_pp0_stage0_iter0_ignore_call32 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter1_ignore_call32 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter2_ignore_call32 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter3_ignore_call32 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp201 : BOOLEAN;
    signal grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1242_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1242_ap_ce : STD_LOGIC;
    signal ap_block_state5_pp0_stage0_iter0_ignore_call34 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter1_ignore_call34 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter2_ignore_call34 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter3_ignore_call34 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp202 : BOOLEAN;
    signal grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1248_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1248_ap_ce : STD_LOGIC;
    signal ap_block_state5_pp0_stage0_iter0_ignore_call36 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter1_ignore_call36 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter2_ignore_call36 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter3_ignore_call36 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp203 : BOOLEAN;
    signal grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1254_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1254_ap_ce : STD_LOGIC;
    signal ap_block_state5_pp0_stage0_iter0_ignore_call38 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter1_ignore_call38 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter2_ignore_call38 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter3_ignore_call38 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp204 : BOOLEAN;
    signal grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1260_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1260_ap_ce : STD_LOGIC;
    signal ap_block_state5_pp0_stage0_iter0_ignore_call40 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter1_ignore_call40 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter2_ignore_call40 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter3_ignore_call40 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp205 : BOOLEAN;
    signal grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1266_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1266_ap_ce : STD_LOGIC;
    signal ap_block_state5_pp0_stage0_iter0_ignore_call42 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter1_ignore_call42 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter2_ignore_call42 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter3_ignore_call42 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp206 : BOOLEAN;
    signal grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1272_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1272_ap_ce : STD_LOGIC;
    signal ap_block_state5_pp0_stage0_iter0_ignore_call44 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter1_ignore_call44 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter2_ignore_call44 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter3_ignore_call44 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp207 : BOOLEAN;
    signal grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1278_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1278_ap_ce : STD_LOGIC;
    signal ap_block_state5_pp0_stage0_iter0_ignore_call46 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter1_ignore_call46 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter2_ignore_call46 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter3_ignore_call46 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp208 : BOOLEAN;
    signal grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1284_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1284_ap_ce : STD_LOGIC;
    signal ap_block_state5_pp0_stage0_iter0_ignore_call48 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter1_ignore_call48 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter2_ignore_call48 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter3_ignore_call48 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp209 : BOOLEAN;
    signal grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1290_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1290_ap_ce : STD_LOGIC;
    signal ap_block_state5_pp0_stage0_iter0_ignore_call50 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter1_ignore_call50 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter2_ignore_call50 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter3_ignore_call50 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp210 : BOOLEAN;
    signal grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1296_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1296_ap_ce : STD_LOGIC;
    signal ap_block_state5_pp0_stage0_iter0_ignore_call52 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter1_ignore_call52 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter2_ignore_call52 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter3_ignore_call52 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp211 : BOOLEAN;
    signal grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1302_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1302_ap_ce : STD_LOGIC;
    signal ap_block_state5_pp0_stage0_iter0_ignore_call54 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter1_ignore_call54 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter2_ignore_call54 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter3_ignore_call54 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp212 : BOOLEAN;
    signal grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1308_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1308_ap_ce : STD_LOGIC;
    signal ap_block_state5_pp0_stage0_iter0_ignore_call56 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter1_ignore_call56 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter2_ignore_call56 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter3_ignore_call56 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp213 : BOOLEAN;
    signal grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1314_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1314_ap_ce : STD_LOGIC;
    signal ap_block_state5_pp0_stage0_iter0_ignore_call58 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter1_ignore_call58 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter2_ignore_call58 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter3_ignore_call58 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp214 : BOOLEAN;
    signal grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1320_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1320_ap_ce : STD_LOGIC;
    signal ap_block_state5_pp0_stage0_iter0_ignore_call60 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter1_ignore_call60 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter2_ignore_call60 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter3_ignore_call60 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp215 : BOOLEAN;
    signal grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1326_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1326_ap_ce : STD_LOGIC;
    signal ap_block_state5_pp0_stage0_iter0_ignore_call62 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter1_ignore_call62 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter2_ignore_call62 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter3_ignore_call62 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp216 : BOOLEAN;
    signal grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1332_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1332_ap_ce : STD_LOGIC;
    signal ap_block_state5_pp0_stage0_iter0_ignore_call64 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter1_ignore_call64 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter2_ignore_call64 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter3_ignore_call64 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp217 : BOOLEAN;
    signal grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1338_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1338_ap_ce : STD_LOGIC;
    signal ap_block_state5_pp0_stage0_iter0_ignore_call66 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter1_ignore_call66 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter2_ignore_call66 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter3_ignore_call66 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp218 : BOOLEAN;
    signal grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1344_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1344_ap_ce : STD_LOGIC;
    signal ap_block_state5_pp0_stage0_iter0_ignore_call68 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter1_ignore_call68 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter2_ignore_call68 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter3_ignore_call68 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp219 : BOOLEAN;
    signal grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1350_w_V : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1350_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1350_ap_ce : STD_LOGIC;
    signal ap_block_state5_pp0_stage0_iter0_ignore_call71 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter1_ignore_call71 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter2_ignore_call71 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter3_ignore_call71 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp221 : BOOLEAN;
    signal i_0_i_reg_685 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal i1_0_i_reg_696 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln206_fu_1404_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_ic_0_i_reg_1134 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1145_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_state3_ignore_call4 : BOOLEAN;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln210_fu_1428_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln344_fu_1507_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln228_fu_2035_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln252_fu_2064_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln245_fu_2105_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln241_fu_2099_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln250_fu_2046_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal pX_6_loc_0_fu_336 : STD_LOGIC_VECTOR (31 downto 0);
    signal sX_6_loc_0_fu_340 : STD_LOGIC_VECTOR (31 downto 0);
    signal pY_6_loc_0_fu_344 : STD_LOGIC_VECTOR (31 downto 0);
    signal sY_6_loc_0_fu_348 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln247_fu_2123_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal tmp_127_fu_1445_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_128_fu_1461_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln215_8_fu_1455_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln215_9_fu_1471_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln215_5_fu_1483_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln215_fu_1477_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln252_fu_2058_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln247_fu_2117_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_1123 : BOOLEAN;
    signal ap_condition_1128 : BOOLEAN;
    signal ap_condition_1142 : BOOLEAN;
    signal ap_condition_1147 : BOOLEAN;

    component cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        data_V_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        data_V_ce0 : OUT STD_LOGIC;
        data_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        output_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        output_V_ce0 : OUT STD_LOGIC;
        output_V_we0 : OUT STD_LOGIC;
        output_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        a_V : IN STD_LOGIC_VECTOR (15 downto 0);
        w_V : IN STD_LOGIC_VECTOR (5 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component conv_2d_cl_me_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_layeibs IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component conv_2d_cl_me_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_w2_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (190 downto 0) );
    end component;


    component conv_2d_cl_me_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_tmpdjbC IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component conv_2d_cl_me_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_layekbM IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (15 downto 0) );
    end component;



begin
    layer_in_V_9_U : component conv_2d_cl_me_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_layeibs
    generic map (
        DataWidth => 16,
        AddressRange => 27,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => layer_in_V_9_address0,
        ce0 => layer_in_V_9_ce0,
        we0 => layer_in_V_9_we0,
        d0 => grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1145_output_V_d0,
        q0 => layer_in_V_9_q0);

    w2_V_U : component conv_2d_cl_me_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_w2_V
    generic map (
        DataWidth => 191,
        AddressRange => 27,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => w2_V_address0,
        ce0 => w2_V_ce0,
        q0 => w2_V_q0);

    tmpdata_V_U : component conv_2d_cl_me_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_tmpdjbC
    generic map (
        DataWidth => 16,
        AddressRange => 3,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => tmpdata_V_address0,
        ce0 => tmpdata_V_ce0,
        we0 => tmpdata_V_we0,
        d0 => data_V_V_dout,
        q0 => tmpdata_V_q0);

    layer_out_i_U : component conv_2d_cl_me_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_layekbM
    generic map (
        DataWidth => 16,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => layer_out_i_address0,
        ce0 => layer_out_i_ce0,
        we0 => layer_out_i_we0,
        d0 => layer_out_i_d0,
        q0 => layer_out_i_q0,
        address1 => layer_out_i_address1,
        ce1 => layer_out_i_ce1,
        we1 => layer_out_i_we1,
        d1 => layer_out_i_d1);

    grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1145 : component cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1145_ap_start,
        ap_done => grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1145_ap_done,
        ap_idle => grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1145_ap_idle,
        ap_ready => grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1145_ap_ready,
        data_V_address0 => grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1145_data_V_address0,
        data_V_ce0 => grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1145_data_V_ce0,
        data_V_q0 => tmpdata_V_q0,
        output_V_address0 => grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1145_output_V_address0,
        output_V_ce0 => grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1145_output_V_ce0,
        output_V_we0 => grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1145_output_V_we0,
        output_V_d0 => grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1145_output_V_d0,
        output_V_q0 => layer_in_V_9_q0);

    grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1164 : component product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => layer_in_V_9_load_reg_2413,
        w_V => trunc_ln344_reg_2449,
        ap_return => grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1164_ap_return,
        ap_ce => grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1164_ap_ce);

    grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1170 : component product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => layer_in_V_9_load_reg_2413,
        w_V => tmp_96_reg_2454,
        ap_return => grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1170_ap_return,
        ap_ce => grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1170_ap_ce);

    grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1176 : component product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => layer_in_V_9_load_reg_2413,
        w_V => tmp_97_reg_2459,
        ap_return => grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1176_ap_return,
        ap_ce => grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1176_ap_ce);

    grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1182 : component product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => layer_in_V_9_load_reg_2413,
        w_V => tmp_98_reg_2464,
        ap_return => grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1182_ap_return,
        ap_ce => grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1182_ap_ce);

    grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1188 : component product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => layer_in_V_9_load_reg_2413,
        w_V => tmp_99_reg_2469,
        ap_return => grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1188_ap_return,
        ap_ce => grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1188_ap_ce);

    grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1194 : component product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => layer_in_V_9_load_reg_2413,
        w_V => tmp_100_reg_2474,
        ap_return => grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1194_ap_return,
        ap_ce => grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1194_ap_ce);

    grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1200 : component product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => layer_in_V_9_load_reg_2413,
        w_V => tmp_101_reg_2479,
        ap_return => grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1200_ap_return,
        ap_ce => grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1200_ap_ce);

    grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1206 : component product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => layer_in_V_9_load_reg_2413,
        w_V => tmp_102_reg_2484,
        ap_return => grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1206_ap_return,
        ap_ce => grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1206_ap_ce);

    grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1212 : component product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => layer_in_V_9_load_reg_2413,
        w_V => tmp_103_reg_2489,
        ap_return => grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1212_ap_return,
        ap_ce => grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1212_ap_ce);

    grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1218 : component product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => layer_in_V_9_load_reg_2413,
        w_V => tmp_104_reg_2494,
        ap_return => grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1218_ap_return,
        ap_ce => grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1218_ap_ce);

    grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1224 : component product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => layer_in_V_9_load_reg_2413,
        w_V => tmp_105_reg_2499,
        ap_return => grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1224_ap_return,
        ap_ce => grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1224_ap_ce);

    grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1230 : component product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => layer_in_V_9_load_reg_2413,
        w_V => tmp_106_reg_2504,
        ap_return => grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1230_ap_return,
        ap_ce => grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1230_ap_ce);

    grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1236 : component product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => layer_in_V_9_load_reg_2413,
        w_V => tmp_107_reg_2509,
        ap_return => grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1236_ap_return,
        ap_ce => grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1236_ap_ce);

    grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1242 : component product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => layer_in_V_9_load_reg_2413,
        w_V => tmp_108_reg_2514,
        ap_return => grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1242_ap_return,
        ap_ce => grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1242_ap_ce);

    grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1248 : component product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => layer_in_V_9_load_reg_2413,
        w_V => tmp_109_reg_2519,
        ap_return => grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1248_ap_return,
        ap_ce => grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1248_ap_ce);

    grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1254 : component product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => layer_in_V_9_load_reg_2413,
        w_V => tmp_110_reg_2524,
        ap_return => grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1254_ap_return,
        ap_ce => grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1254_ap_ce);

    grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1260 : component product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => layer_in_V_9_load_reg_2413,
        w_V => tmp_111_reg_2529,
        ap_return => grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1260_ap_return,
        ap_ce => grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1260_ap_ce);

    grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1266 : component product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => layer_in_V_9_load_reg_2413,
        w_V => tmp_112_reg_2534,
        ap_return => grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1266_ap_return,
        ap_ce => grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1266_ap_ce);

    grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1272 : component product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => layer_in_V_9_load_reg_2413,
        w_V => tmp_113_reg_2539,
        ap_return => grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1272_ap_return,
        ap_ce => grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1272_ap_ce);

    grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1278 : component product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => layer_in_V_9_load_reg_2413,
        w_V => tmp_114_reg_2544,
        ap_return => grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1278_ap_return,
        ap_ce => grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1278_ap_ce);

    grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1284 : component product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => layer_in_V_9_load_reg_2413,
        w_V => tmp_115_reg_2549,
        ap_return => grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1284_ap_return,
        ap_ce => grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1284_ap_ce);

    grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1290 : component product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => layer_in_V_9_load_reg_2413,
        w_V => tmp_116_reg_2554,
        ap_return => grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1290_ap_return,
        ap_ce => grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1290_ap_ce);

    grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1296 : component product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => layer_in_V_9_load_reg_2413,
        w_V => tmp_117_reg_2559,
        ap_return => grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1296_ap_return,
        ap_ce => grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1296_ap_ce);

    grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1302 : component product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => layer_in_V_9_load_reg_2413,
        w_V => tmp_118_reg_2564,
        ap_return => grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1302_ap_return,
        ap_ce => grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1302_ap_ce);

    grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1308 : component product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => layer_in_V_9_load_reg_2413,
        w_V => tmp_119_reg_2569,
        ap_return => grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1308_ap_return,
        ap_ce => grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1308_ap_ce);

    grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1314 : component product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => layer_in_V_9_load_reg_2413,
        w_V => tmp_120_reg_2574,
        ap_return => grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1314_ap_return,
        ap_ce => grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1314_ap_ce);

    grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1320 : component product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => layer_in_V_9_load_reg_2413,
        w_V => tmp_121_reg_2579,
        ap_return => grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1320_ap_return,
        ap_ce => grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1320_ap_ce);

    grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1326 : component product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => layer_in_V_9_load_reg_2413,
        w_V => tmp_122_reg_2584,
        ap_return => grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1326_ap_return,
        ap_ce => grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1326_ap_ce);

    grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1332 : component product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => layer_in_V_9_load_reg_2413,
        w_V => tmp_123_reg_2589,
        ap_return => grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1332_ap_return,
        ap_ce => grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1332_ap_ce);

    grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1338 : component product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => layer_in_V_9_load_reg_2413,
        w_V => tmp_124_reg_2594,
        ap_return => grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1338_ap_return,
        ap_ce => grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1338_ap_ce);

    grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1344 : component product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => layer_in_V_9_load_reg_2413,
        w_V => tmp_125_reg_2599,
        ap_return => grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1344_ap_return,
        ap_ce => grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1344_ap_ce);

    grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1350 : component product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => layer_in_V_9_load_reg_2413,
        w_V => grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1350_w_V,
        ap_return => grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1350_ap_return,
        ap_ce => grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1350_ap_ce);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((icmp_ln206_fu_1404_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_lv1_1 = and_ln215_6_fu_1489_p2) and (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1145_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state5)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state5);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                elsif (((ap_const_lv1_1 = and_ln215_6_fu_1489_p2) and (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1145_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                    ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1145_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1145_ap_start_reg <= ap_const_logic_0;
            else
                if ((not(((icmp_ln208_fu_1416_p2 = ap_const_lv1_0) and (data_V_V_empty_n = ap_const_logic_0))) and (icmp_ln208_fu_1416_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                    grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1145_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1145_ap_ready = ap_const_logic_1)) then 
                    grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1145_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    acc_V_0_0_reg_1110_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln336_reg_2394_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
                acc_V_0_0_reg_1110 <= acc_0_V_fu_1831_p2;
            elsif (((ap_const_lv1_1 = and_ln215_6_fu_1489_p2) and (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1145_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                acc_V_0_0_reg_1110 <= ap_const_lv16_100;
            end if; 
        end if;
    end process;

    acc_V_10_0_reg_980_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln336_reg_2394_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
                acc_V_10_0_reg_980 <= acc_10_V_fu_1891_p2;
            elsif (((ap_const_lv1_1 = and_ln215_6_fu_1489_p2) and (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1145_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                acc_V_10_0_reg_980 <= ap_const_lv16_80;
            end if; 
        end if;
    end process;

    acc_V_11_0_reg_967_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln336_reg_2394_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
                acc_V_11_0_reg_967 <= acc_11_V_fu_1897_p2;
            elsif (((ap_const_lv1_1 = and_ln215_6_fu_1489_p2) and (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1145_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                acc_V_11_0_reg_967 <= ap_const_lv16_80;
            end if; 
        end if;
    end process;

    acc_V_12_0_reg_954_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln336_reg_2394_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
                acc_V_12_0_reg_954 <= acc_12_V_fu_1903_p2;
            elsif (((ap_const_lv1_1 = and_ln215_6_fu_1489_p2) and (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1145_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                acc_V_12_0_reg_954 <= ap_const_lv16_100;
            end if; 
        end if;
    end process;

    acc_V_13_0_reg_941_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln336_reg_2394_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
                acc_V_13_0_reg_941 <= acc_13_V_fu_1909_p2;
            elsif (((ap_const_lv1_1 = and_ln215_6_fu_1489_p2) and (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1145_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                acc_V_13_0_reg_941 <= ap_const_lv16_100;
            end if; 
        end if;
    end process;

    acc_V_14_0_reg_928_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln336_reg_2394_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
                acc_V_14_0_reg_928 <= acc_14_V_fu_1915_p2;
            elsif (((ap_const_lv1_1 = and_ln215_6_fu_1489_p2) and (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1145_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                acc_V_14_0_reg_928 <= ap_const_lv16_100;
            end if; 
        end if;
    end process;

    acc_V_15_0_reg_915_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln336_reg_2394_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
                acc_V_15_0_reg_915 <= acc_15_V_fu_1921_p2;
            elsif (((ap_const_lv1_1 = and_ln215_6_fu_1489_p2) and (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1145_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                acc_V_15_0_reg_915 <= ap_const_lv16_100;
            end if; 
        end if;
    end process;

    acc_V_16_0_reg_902_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln336_reg_2394_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
                acc_V_16_0_reg_902 <= acc_16_V_fu_1927_p2;
            elsif (((ap_const_lv1_1 = and_ln215_6_fu_1489_p2) and (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1145_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                acc_V_16_0_reg_902 <= ap_const_lv16_FF80;
            end if; 
        end if;
    end process;

    acc_V_17_0_reg_889_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln336_reg_2394_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
                acc_V_17_0_reg_889 <= acc_17_V_fu_1933_p2;
            elsif (((ap_const_lv1_1 = and_ln215_6_fu_1489_p2) and (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1145_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                acc_V_17_0_reg_889 <= ap_const_lv16_80;
            end if; 
        end if;
    end process;

    acc_V_18_0_reg_876_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln336_reg_2394_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
                acc_V_18_0_reg_876 <= acc_18_V_fu_1939_p2;
            elsif (((ap_const_lv1_1 = and_ln215_6_fu_1489_p2) and (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1145_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                acc_V_18_0_reg_876 <= ap_const_lv16_80;
            end if; 
        end if;
    end process;

    acc_V_19_0_reg_863_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln336_reg_2394_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
                acc_V_19_0_reg_863 <= acc_19_V_fu_1945_p2;
            elsif (((ap_const_lv1_1 = and_ln215_6_fu_1489_p2) and (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1145_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                acc_V_19_0_reg_863 <= ap_const_lv16_100;
            end if; 
        end if;
    end process;

    acc_V_1_0_reg_1097_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln336_reg_2394_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
                acc_V_1_0_reg_1097 <= acc_1_V_fu_1837_p2;
            elsif (((ap_const_lv1_1 = and_ln215_6_fu_1489_p2) and (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1145_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                acc_V_1_0_reg_1097 <= ap_const_lv16_80;
            end if; 
        end if;
    end process;

    acc_V_20_0_reg_850_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln336_reg_2394_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
                acc_V_20_0_reg_850 <= acc_20_V_fu_1951_p2;
            elsif (((ap_const_lv1_1 = and_ln215_6_fu_1489_p2) and (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1145_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                acc_V_20_0_reg_850 <= ap_const_lv16_80;
            end if; 
        end if;
    end process;

    acc_V_21_0_reg_837_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln336_reg_2394_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
                acc_V_21_0_reg_837 <= acc_21_V_fu_1957_p2;
            elsif (((ap_const_lv1_1 = and_ln215_6_fu_1489_p2) and (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1145_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                acc_V_21_0_reg_837 <= ap_const_lv16_100;
            end if; 
        end if;
    end process;

    acc_V_22_0_reg_824_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln336_reg_2394_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
                acc_V_22_0_reg_824 <= acc_22_V_fu_1963_p2;
            elsif (((ap_const_lv1_1 = and_ln215_6_fu_1489_p2) and (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1145_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                acc_V_22_0_reg_824 <= ap_const_lv16_80;
            end if; 
        end if;
    end process;

    acc_V_23_0_reg_811_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln336_reg_2394_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
                acc_V_23_0_reg_811 <= acc_23_V_fu_1969_p2;
            elsif (((ap_const_lv1_1 = and_ln215_6_fu_1489_p2) and (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1145_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                acc_V_23_0_reg_811 <= ap_const_lv16_100;
            end if; 
        end if;
    end process;

    acc_V_24_0_reg_798_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln336_reg_2394_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
                acc_V_24_0_reg_798 <= acc_24_V_fu_1975_p2;
            elsif (((ap_const_lv1_1 = and_ln215_6_fu_1489_p2) and (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1145_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                acc_V_24_0_reg_798 <= ap_const_lv16_FE80;
            end if; 
        end if;
    end process;

    acc_V_25_0_reg_785_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln336_reg_2394_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
                acc_V_25_0_reg_785 <= acc_25_V_fu_1981_p2;
            elsif (((ap_const_lv1_1 = and_ln215_6_fu_1489_p2) and (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1145_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                acc_V_25_0_reg_785 <= ap_const_lv16_100;
            end if; 
        end if;
    end process;

    acc_V_26_0_reg_772_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln336_reg_2394_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
                acc_V_26_0_reg_772 <= acc_26_V_fu_1987_p2;
            elsif (((ap_const_lv1_1 = and_ln215_6_fu_1489_p2) and (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1145_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                acc_V_26_0_reg_772 <= ap_const_lv16_FF00;
            end if; 
        end if;
    end process;

    acc_V_27_0_reg_759_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln336_reg_2394_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
                acc_V_27_0_reg_759 <= acc_27_V_fu_1993_p2;
            elsif (((ap_const_lv1_1 = and_ln215_6_fu_1489_p2) and (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1145_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                acc_V_27_0_reg_759 <= ap_const_lv16_100;
            end if; 
        end if;
    end process;

    acc_V_28_0_reg_746_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln336_reg_2394_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
                acc_V_28_0_reg_746 <= acc_28_V_fu_1999_p2;
            elsif (((ap_const_lv1_1 = and_ln215_6_fu_1489_p2) and (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1145_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                acc_V_28_0_reg_746 <= ap_const_lv16_80;
            end if; 
        end if;
    end process;

    acc_V_29_0_reg_733_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln336_reg_2394_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
                acc_V_29_0_reg_733 <= acc_29_V_fu_2005_p2;
            elsif (((ap_const_lv1_1 = and_ln215_6_fu_1489_p2) and (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1145_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                acc_V_29_0_reg_733 <= ap_const_lv16_FF80;
            end if; 
        end if;
    end process;

    acc_V_2_0_reg_1084_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln336_reg_2394_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
                acc_V_2_0_reg_1084 <= acc_2_V_fu_1843_p2;
            elsif (((ap_const_lv1_1 = and_ln215_6_fu_1489_p2) and (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1145_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                acc_V_2_0_reg_1084 <= ap_const_lv16_80;
            end if; 
        end if;
    end process;

    acc_V_30_0_reg_720_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln336_reg_2394_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
                acc_V_30_0_reg_720 <= acc_30_V_fu_2011_p2;
            elsif (((ap_const_lv1_1 = and_ln215_6_fu_1489_p2) and (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1145_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                acc_V_30_0_reg_720 <= ap_const_lv16_100;
            end if; 
        end if;
    end process;

    acc_V_31_0_reg_707_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln336_reg_2394_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
                acc_V_31_0_reg_707 <= acc_31_V_fu_2017_p2;
            elsif (((ap_const_lv1_1 = and_ln215_6_fu_1489_p2) and (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1145_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                acc_V_31_0_reg_707 <= ap_const_lv16_180;
            end if; 
        end if;
    end process;

    acc_V_3_0_reg_1071_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln336_reg_2394_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
                acc_V_3_0_reg_1071 <= acc_3_V_fu_1849_p2;
            elsif (((ap_const_lv1_1 = and_ln215_6_fu_1489_p2) and (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1145_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                acc_V_3_0_reg_1071 <= ap_const_lv16_80;
            end if; 
        end if;
    end process;

    acc_V_4_0_reg_1058_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln336_reg_2394_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
                acc_V_4_0_reg_1058 <= acc_4_V_fu_1855_p2;
            elsif (((ap_const_lv1_1 = and_ln215_6_fu_1489_p2) and (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1145_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                acc_V_4_0_reg_1058 <= ap_const_lv16_100;
            end if; 
        end if;
    end process;

    acc_V_5_0_reg_1045_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln336_reg_2394_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
                acc_V_5_0_reg_1045 <= acc_5_V_fu_1861_p2;
            elsif (((ap_const_lv1_1 = and_ln215_6_fu_1489_p2) and (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1145_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                acc_V_5_0_reg_1045 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    acc_V_6_0_reg_1032_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln336_reg_2394_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
                acc_V_6_0_reg_1032 <= acc_6_V_fu_1867_p2;
            elsif (((ap_const_lv1_1 = and_ln215_6_fu_1489_p2) and (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1145_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                acc_V_6_0_reg_1032 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    acc_V_7_0_reg_1019_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln336_reg_2394_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
                acc_V_7_0_reg_1019 <= acc_7_V_fu_1873_p2;
            elsif (((ap_const_lv1_1 = and_ln215_6_fu_1489_p2) and (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1145_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                acc_V_7_0_reg_1019 <= ap_const_lv16_80;
            end if; 
        end if;
    end process;

    acc_V_8_0_reg_1006_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln336_reg_2394_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
                acc_V_8_0_reg_1006 <= acc_8_V_fu_1879_p2;
            elsif (((ap_const_lv1_1 = and_ln215_6_fu_1489_p2) and (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1145_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                acc_V_8_0_reg_1006 <= ap_const_lv16_200;
            end if; 
        end if;
    end process;

    acc_V_9_0_reg_993_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln336_reg_2394_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
                acc_V_9_0_reg_993 <= acc_9_V_fu_1885_p2;
            elsif (((ap_const_lv1_1 = and_ln215_6_fu_1489_p2) and (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1145_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                acc_V_9_0_reg_993 <= ap_const_lv16_200;
            end if; 
        end if;
    end process;

    i1_0_i_reg_696_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln206_fu_1404_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                i1_0_i_reg_696 <= ap_const_lv2_0;
            elsif ((not(((icmp_ln208_fu_1416_p2 = ap_const_lv1_0) and (data_V_V_empty_n = ap_const_logic_0))) and (icmp_ln208_fu_1416_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                i1_0_i_reg_696 <= i1_fu_1422_p2;
            end if; 
        end if;
    end process;

    i_0_i_reg_685_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
                i_0_i_reg_685 <= i_reg_2367;
            elsif ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_0_i_reg_685 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    i_ic_0_i_reg_1134_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((res_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
                i_ic_0_i_reg_1134 <= i_ic_reg_2772;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
                i_ic_0_i_reg_1134 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    in_index_reg_1123_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln336_fu_1495_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                in_index_reg_1123 <= ir_fu_1501_p2;
            elsif (((ap_const_lv1_1 = and_ln215_6_fu_1489_p2) and (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1145_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                in_index_reg_1123 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    pX_4_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state25)) then
                if ((ap_const_boolean_1 = ap_condition_1128)) then 
                    pX_4 <= ap_const_lv32_0;
                elsif ((ap_const_boolean_1 = ap_condition_1123)) then 
                    pX_4 <= add_ln250_fu_2046_p2;
                end if;
            end if; 
        end if;
    end process;

    pX_6_loc_0_fu_336_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln237_reg_2782 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then 
                pX_6_loc_0_fu_336 <= ap_const_lv32_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state25) and (((icmp_ln237_fu_2040_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln215_6_reg_2390)) or ((icmp_ln237_fu_2040_p2 = ap_const_lv1_0) and (icmp_ln226_fu_2023_p2 = ap_const_lv1_1))))) then 
                pX_6_loc_0_fu_336 <= add_ln250_fu_2046_p2;
            elsif ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                pX_6_loc_0_fu_336 <= pX_4;
            end if; 
        end if;
    end process;

    pY_4_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state25)) then
                if ((ap_const_boolean_1 = ap_condition_1147)) then 
                    pY_4 <= ap_const_lv32_0;
                elsif ((ap_const_boolean_1 = ap_condition_1142)) then 
                    pY_4 <= add_ln245_fu_2105_p2;
                end if;
            end if; 
        end if;
    end process;

    pY_6_loc_0_fu_344_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state25) and (((ap_const_lv1_0 = and_ln215_6_reg_2390) and (icmp_ln237_fu_2040_p2 = ap_const_lv1_1) and (icmp_ln241_fu_2099_p2 = ap_const_lv1_1)) or ((icmp_ln237_fu_2040_p2 = ap_const_lv1_1) and (icmp_ln226_fu_2023_p2 = ap_const_lv1_1) and (icmp_ln241_fu_2099_p2 = ap_const_lv1_1))))) then 
                pY_6_loc_0_fu_344 <= ap_const_lv32_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state25) and (((ap_const_lv1_0 = and_ln215_6_reg_2390) and (icmp_ln241_fu_2099_p2 = ap_const_lv1_0) and (icmp_ln237_fu_2040_p2 = ap_const_lv1_1)) or ((icmp_ln241_fu_2099_p2 = ap_const_lv1_0) and (icmp_ln237_fu_2040_p2 = ap_const_lv1_1) and (icmp_ln226_fu_2023_p2 = ap_const_lv1_1))))) then 
                pY_6_loc_0_fu_344 <= add_ln245_fu_2105_p2;
            elsif ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                pY_6_loc_0_fu_344 <= pY_4;
            end if; 
        end if;
    end process;

    sX_4_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state25)) then
                if ((ap_const_boolean_1 = ap_condition_1128)) then 
                    sX_4 <= ap_const_lv32_0;
                elsif ((ap_const_boolean_1 = ap_condition_1123)) then 
                    sX_4 <= select_ln252_fu_2064_p3;
                end if;
            end if; 
        end if;
    end process;

    sX_6_loc_0_fu_340_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln237_reg_2782 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then 
                sX_6_loc_0_fu_340 <= ap_const_lv32_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state25) and (((icmp_ln237_fu_2040_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln215_6_reg_2390)) or ((icmp_ln237_fu_2040_p2 = ap_const_lv1_0) and (icmp_ln226_fu_2023_p2 = ap_const_lv1_1))))) then 
                sX_6_loc_0_fu_340 <= select_ln252_fu_2064_p3;
            elsif ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                sX_6_loc_0_fu_340 <= sX_4;
            end if; 
        end if;
    end process;

    sY_6_loc_0_fu_348_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state25) and (((ap_const_lv1_0 = and_ln215_6_reg_2390) and (icmp_ln237_fu_2040_p2 = ap_const_lv1_1) and (icmp_ln241_fu_2099_p2 = ap_const_lv1_1)) or ((icmp_ln237_fu_2040_p2 = ap_const_lv1_1) and (icmp_ln226_fu_2023_p2 = ap_const_lv1_1) and (icmp_ln241_fu_2099_p2 = ap_const_lv1_1))))) then 
                sY_6_loc_0_fu_348 <= ap_const_lv32_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state25) and (((ap_const_lv1_0 = and_ln215_6_reg_2390) and (icmp_ln241_fu_2099_p2 = ap_const_lv1_0) and (icmp_ln237_fu_2040_p2 = ap_const_lv1_1)) or ((icmp_ln241_fu_2099_p2 = ap_const_lv1_0) and (icmp_ln237_fu_2040_p2 = ap_const_lv1_1) and (icmp_ln226_fu_2023_p2 = ap_const_lv1_1))))) then 
                sY_6_loc_0_fu_348 <= select_ln247_fu_2123_p3;
            elsif ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                sY_6_loc_0_fu_348 <= sY_4;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1145_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                and_ln215_6_reg_2390 <= and_ln215_6_fu_1489_p2;
                icmp_ln215_7_reg_2385 <= icmp_ln215_7_fu_1439_p2;
                icmp_ln215_reg_2380 <= icmp_ln215_fu_1433_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln215_6_reg_2390) and (ap_const_logic_1 = ap_CS_fsm_state25))) then
                i_ic_reg_2772 <= i_ic_fu_2029_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_reg_2367 <= i_fu_1410_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state25) and ((ap_const_lv1_0 = and_ln215_6_reg_2390) or (icmp_ln226_fu_2023_p2 = ap_const_lv1_1)))) then
                icmp_ln237_reg_2782 <= icmp_ln237_fu_2040_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln336_reg_2394 <= icmp_ln336_fu_1495_p2;
                icmp_ln336_reg_2394_pp0_iter1_reg <= icmp_ln336_reg_2394;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                icmp_ln336_reg_2394_pp0_iter2_reg <= icmp_ln336_reg_2394_pp0_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln336_reg_2394 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                layer_in_V_9_load_reg_2413 <= layer_in_V_9_q0;
                tmp_100_reg_2474 <= w2_V_q0(35 downto 30);
                tmp_101_reg_2479 <= w2_V_q0(41 downto 36);
                tmp_102_reg_2484 <= w2_V_q0(47 downto 42);
                tmp_103_reg_2489 <= w2_V_q0(53 downto 48);
                tmp_104_reg_2494 <= w2_V_q0(59 downto 54);
                tmp_105_reg_2499 <= w2_V_q0(65 downto 60);
                tmp_106_reg_2504 <= w2_V_q0(71 downto 66);
                tmp_107_reg_2509 <= w2_V_q0(77 downto 72);
                tmp_108_reg_2514 <= w2_V_q0(83 downto 78);
                tmp_109_reg_2519 <= w2_V_q0(89 downto 84);
                tmp_110_reg_2524 <= w2_V_q0(95 downto 90);
                tmp_111_reg_2529 <= w2_V_q0(101 downto 96);
                tmp_112_reg_2534 <= w2_V_q0(107 downto 102);
                tmp_113_reg_2539 <= w2_V_q0(113 downto 108);
                tmp_114_reg_2544 <= w2_V_q0(119 downto 114);
                tmp_115_reg_2549 <= w2_V_q0(125 downto 120);
                tmp_116_reg_2554 <= w2_V_q0(131 downto 126);
                tmp_117_reg_2559 <= w2_V_q0(137 downto 132);
                tmp_118_reg_2564 <= w2_V_q0(143 downto 138);
                tmp_119_reg_2569 <= w2_V_q0(149 downto 144);
                tmp_120_reg_2574 <= w2_V_q0(155 downto 150);
                tmp_121_reg_2579 <= w2_V_q0(161 downto 156);
                tmp_122_reg_2584 <= w2_V_q0(167 downto 162);
                tmp_123_reg_2589 <= w2_V_q0(173 downto 168);
                tmp_124_reg_2594 <= w2_V_q0(179 downto 174);
                tmp_125_reg_2599 <= w2_V_q0(185 downto 180);
                tmp_126_reg_2604 <= w2_V_q0(190 downto 186);
                tmp_96_reg_2454 <= w2_V_q0(11 downto 6);
                tmp_97_reg_2459 <= w2_V_q0(17 downto 12);
                tmp_98_reg_2464 <= w2_V_q0(23 downto 18);
                tmp_99_reg_2469 <= w2_V_q0(29 downto 24);
                trunc_ln344_reg_2449 <= trunc_ln344_fu_1513_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln237_reg_2782 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then
                sY_4 <= sY_6_loc_0_fu_348;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, data_V_V_empty_n, res_V_V_full_n, ap_CS_fsm_state3, icmp_ln208_fu_1416_p2, ap_CS_fsm_state26, ap_CS_fsm_state2, ap_CS_fsm_state4, grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1145_ap_done, and_ln215_6_fu_1489_p2, and_ln215_6_reg_2390, icmp_ln336_fu_1495_p2, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter3, ap_CS_fsm_state25, icmp_ln226_fu_2023_p2, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, icmp_ln206_fu_1404_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln206_fu_1404_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if ((not(((icmp_ln208_fu_1416_p2 = ap_const_lv1_0) and (data_V_V_empty_n = ap_const_logic_0))) and (icmp_ln208_fu_1416_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                elsif ((not(((icmp_ln208_fu_1416_p2 = ap_const_lv1_0) and (data_V_V_empty_n = ap_const_logic_0))) and (icmp_ln208_fu_1416_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if (((ap_const_lv1_1 = and_ln215_6_fu_1489_p2) and (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1145_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_const_lv1_0 = and_ln215_6_fu_1489_p2) and (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1145_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state25;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln336_fu_1495_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and not(((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln336_fu_1495_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state25) and ((ap_const_lv1_0 = and_ln215_6_reg_2390) or (icmp_ln226_fu_2023_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state27;
                else
                    ap_NS_fsm <= ap_ST_fsm_state26;
                end if;
            when ap_ST_fsm_state26 => 
                if (((res_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then
                    ap_NS_fsm <= ap_ST_fsm_state25;
                else
                    ap_NS_fsm <= ap_ST_fsm_state26;
                end if;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    acc_0_V_fu_1831_p2 <= std_logic_vector(unsigned(acc_V_0_0_reg_1110) + unsigned(grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1164_ap_return));
    acc_10_V_fu_1891_p2 <= std_logic_vector(unsigned(acc_V_10_0_reg_980) + unsigned(grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1224_ap_return));
    acc_11_V_fu_1897_p2 <= std_logic_vector(unsigned(acc_V_11_0_reg_967) + unsigned(grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1230_ap_return));
    acc_12_V_fu_1903_p2 <= std_logic_vector(unsigned(acc_V_12_0_reg_954) + unsigned(grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1236_ap_return));
    acc_13_V_fu_1909_p2 <= std_logic_vector(unsigned(acc_V_13_0_reg_941) + unsigned(grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1242_ap_return));
    acc_14_V_fu_1915_p2 <= std_logic_vector(unsigned(acc_V_14_0_reg_928) + unsigned(grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1248_ap_return));
    acc_15_V_fu_1921_p2 <= std_logic_vector(unsigned(acc_V_15_0_reg_915) + unsigned(grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1254_ap_return));
    acc_16_V_fu_1927_p2 <= std_logic_vector(unsigned(acc_V_16_0_reg_902) + unsigned(grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1260_ap_return));
    acc_17_V_fu_1933_p2 <= std_logic_vector(unsigned(acc_V_17_0_reg_889) + unsigned(grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1266_ap_return));
    acc_18_V_fu_1939_p2 <= std_logic_vector(unsigned(acc_V_18_0_reg_876) + unsigned(grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1272_ap_return));
    acc_19_V_fu_1945_p2 <= std_logic_vector(unsigned(acc_V_19_0_reg_863) + unsigned(grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1278_ap_return));
    acc_1_V_fu_1837_p2 <= std_logic_vector(unsigned(acc_V_1_0_reg_1097) + unsigned(grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1170_ap_return));
    acc_20_V_fu_1951_p2 <= std_logic_vector(unsigned(acc_V_20_0_reg_850) + unsigned(grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1284_ap_return));
    acc_21_V_fu_1957_p2 <= std_logic_vector(unsigned(acc_V_21_0_reg_837) + unsigned(grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1290_ap_return));
    acc_22_V_fu_1963_p2 <= std_logic_vector(unsigned(acc_V_22_0_reg_824) + unsigned(grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1296_ap_return));
    acc_23_V_fu_1969_p2 <= std_logic_vector(unsigned(acc_V_23_0_reg_811) + unsigned(grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1302_ap_return));
    acc_24_V_fu_1975_p2 <= std_logic_vector(unsigned(acc_V_24_0_reg_798) + unsigned(grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1308_ap_return));
    acc_25_V_fu_1981_p2 <= std_logic_vector(unsigned(acc_V_25_0_reg_785) + unsigned(grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1314_ap_return));
    acc_26_V_fu_1987_p2 <= std_logic_vector(unsigned(acc_V_26_0_reg_772) + unsigned(grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1320_ap_return));
    acc_27_V_fu_1993_p2 <= std_logic_vector(unsigned(acc_V_27_0_reg_759) + unsigned(grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1326_ap_return));
    acc_28_V_fu_1999_p2 <= std_logic_vector(unsigned(acc_V_28_0_reg_746) + unsigned(grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1332_ap_return));
    acc_29_V_fu_2005_p2 <= std_logic_vector(unsigned(acc_V_29_0_reg_733) + unsigned(grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1338_ap_return));
    acc_2_V_fu_1843_p2 <= std_logic_vector(unsigned(acc_V_2_0_reg_1084) + unsigned(grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1176_ap_return));
    acc_30_V_fu_2011_p2 <= std_logic_vector(unsigned(acc_V_30_0_reg_720) + unsigned(grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1344_ap_return));
    acc_31_V_fu_2017_p2 <= std_logic_vector(unsigned(acc_V_31_0_reg_707) + unsigned(grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1350_ap_return));
    acc_3_V_fu_1849_p2 <= std_logic_vector(unsigned(acc_V_3_0_reg_1071) + unsigned(grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1182_ap_return));
    acc_4_V_fu_1855_p2 <= std_logic_vector(unsigned(acc_V_4_0_reg_1058) + unsigned(grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1188_ap_return));
    acc_5_V_fu_1861_p2 <= std_logic_vector(unsigned(acc_V_5_0_reg_1045) + unsigned(grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1194_ap_return));
    acc_6_V_fu_1867_p2 <= std_logic_vector(unsigned(acc_V_6_0_reg_1032) + unsigned(grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1200_ap_return));
    acc_7_V_fu_1873_p2 <= std_logic_vector(unsigned(acc_V_7_0_reg_1019) + unsigned(grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1206_ap_return));
    acc_8_V_fu_1879_p2 <= std_logic_vector(unsigned(acc_V_8_0_reg_1006) + unsigned(grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1212_ap_return));
    acc_9_V_fu_1885_p2 <= std_logic_vector(unsigned(acc_V_9_0_reg_993) + unsigned(grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1218_ap_return));
    add_ln245_fu_2105_p2 <= std_logic_vector(unsigned(pY_6_loc_0_fu_344) + unsigned(ap_const_lv32_1));
    add_ln247_fu_2117_p2 <= std_logic_vector(unsigned(sY_6_loc_0_fu_348) + unsigned(ap_const_lv32_1));
    add_ln250_fu_2046_p2 <= std_logic_vector(unsigned(pX_6_loc_0_fu_336) + unsigned(ap_const_lv32_1));
    add_ln252_fu_2058_p2 <= std_logic_vector(unsigned(sX_6_loc_0_fu_340) + unsigned(ap_const_lv32_1));
    and_ln215_5_fu_1483_p2 <= (icmp_ln215_9_fu_1471_p2 and icmp_ln215_8_fu_1455_p2);
    and_ln215_6_fu_1489_p2 <= (and_ln215_fu_1477_p2 and and_ln215_5_fu_1483_p2);
    and_ln215_fu_1477_p2 <= (icmp_ln215_fu_1433_p2 and icmp_ln215_7_fu_1439_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(4);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(6);
    ap_CS_fsm_state11 <= ap_CS_fsm(7);
    ap_CS_fsm_state12 <= ap_CS_fsm(8);
    ap_CS_fsm_state13 <= ap_CS_fsm(9);
    ap_CS_fsm_state14 <= ap_CS_fsm(10);
    ap_CS_fsm_state15 <= ap_CS_fsm(11);
    ap_CS_fsm_state16 <= ap_CS_fsm(12);
    ap_CS_fsm_state17 <= ap_CS_fsm(13);
    ap_CS_fsm_state18 <= ap_CS_fsm(14);
    ap_CS_fsm_state19 <= ap_CS_fsm(15);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(16);
    ap_CS_fsm_state21 <= ap_CS_fsm(17);
    ap_CS_fsm_state22 <= ap_CS_fsm(18);
    ap_CS_fsm_state23 <= ap_CS_fsm(19);
    ap_CS_fsm_state24 <= ap_CS_fsm(20);
    ap_CS_fsm_state25 <= ap_CS_fsm(21);
    ap_CS_fsm_state26 <= ap_CS_fsm(22);
    ap_CS_fsm_state27 <= ap_CS_fsm(23);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state9 <= ap_CS_fsm(5);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001_ignoreCallOp189 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001_ignoreCallOp190 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001_ignoreCallOp191 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001_ignoreCallOp192 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001_ignoreCallOp193 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001_ignoreCallOp194 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001_ignoreCallOp195 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001_ignoreCallOp196 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001_ignoreCallOp197 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001_ignoreCallOp198 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001_ignoreCallOp199 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001_ignoreCallOp200 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001_ignoreCallOp201 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001_ignoreCallOp202 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001_ignoreCallOp203 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001_ignoreCallOp204 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001_ignoreCallOp205 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001_ignoreCallOp206 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001_ignoreCallOp207 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001_ignoreCallOp208 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001_ignoreCallOp209 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001_ignoreCallOp210 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001_ignoreCallOp211 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001_ignoreCallOp212 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001_ignoreCallOp213 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001_ignoreCallOp214 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001_ignoreCallOp215 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001_ignoreCallOp216 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001_ignoreCallOp217 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001_ignoreCallOp218 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001_ignoreCallOp219 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001_ignoreCallOp221 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0));
    end process;


    ap_block_state3_assign_proc : process(data_V_V_empty_n, icmp_ln208_fu_1416_p2)
    begin
                ap_block_state3 <= ((icmp_ln208_fu_1416_p2 = ap_const_lv1_0) and (data_V_V_empty_n = ap_const_logic_0));
    end process;


    ap_block_state3_ignore_call4_assign_proc : process(data_V_V_empty_n, icmp_ln208_fu_1416_p2)
    begin
                ap_block_state3_ignore_call4 <= ((icmp_ln208_fu_1416_p2 = ap_const_lv1_0) and (data_V_V_empty_n = ap_const_logic_0));
    end process;

        ap_block_state5_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter0_ignore_call10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter0_ignore_call12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter0_ignore_call14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter0_ignore_call16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter0_ignore_call18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter0_ignore_call20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter0_ignore_call22 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter0_ignore_call24 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter0_ignore_call26 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter0_ignore_call28 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter0_ignore_call30 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter0_ignore_call32 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter0_ignore_call34 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter0_ignore_call36 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter0_ignore_call38 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter0_ignore_call40 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter0_ignore_call42 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter0_ignore_call44 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter0_ignore_call46 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter0_ignore_call48 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter0_ignore_call50 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter0_ignore_call52 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter0_ignore_call54 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter0_ignore_call56 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter0_ignore_call58 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter0_ignore_call60 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter0_ignore_call62 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter0_ignore_call64 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter0_ignore_call66 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter0_ignore_call68 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter0_ignore_call71 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter0_ignore_call8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter1_ignore_call10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter1_ignore_call12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter1_ignore_call14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter1_ignore_call16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter1_ignore_call18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter1_ignore_call20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter1_ignore_call22 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter1_ignore_call24 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter1_ignore_call26 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter1_ignore_call28 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter1_ignore_call30 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter1_ignore_call32 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter1_ignore_call34 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter1_ignore_call36 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter1_ignore_call38 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter1_ignore_call40 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter1_ignore_call42 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter1_ignore_call44 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter1_ignore_call46 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter1_ignore_call48 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter1_ignore_call50 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter1_ignore_call52 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter1_ignore_call54 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter1_ignore_call56 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter1_ignore_call58 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter1_ignore_call60 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter1_ignore_call62 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter1_ignore_call64 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter1_ignore_call66 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter1_ignore_call68 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter1_ignore_call71 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter1_ignore_call8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter2_ignore_call10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter2_ignore_call12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter2_ignore_call14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter2_ignore_call16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter2_ignore_call18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter2_ignore_call20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter2_ignore_call22 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter2_ignore_call24 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter2_ignore_call26 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter2_ignore_call28 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter2_ignore_call30 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter2_ignore_call32 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter2_ignore_call34 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter2_ignore_call36 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter2_ignore_call38 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter2_ignore_call40 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter2_ignore_call42 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter2_ignore_call44 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter2_ignore_call46 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter2_ignore_call48 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter2_ignore_call50 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter2_ignore_call52 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter2_ignore_call54 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter2_ignore_call56 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter2_ignore_call58 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter2_ignore_call60 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter2_ignore_call62 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter2_ignore_call64 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter2_ignore_call66 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter2_ignore_call68 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter2_ignore_call71 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter2_ignore_call8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter3_ignore_call10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter3_ignore_call12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter3_ignore_call14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter3_ignore_call16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter3_ignore_call18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter3_ignore_call20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter3_ignore_call22 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter3_ignore_call24 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter3_ignore_call26 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter3_ignore_call28 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter3_ignore_call30 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter3_ignore_call32 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter3_ignore_call34 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter3_ignore_call36 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter3_ignore_call38 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter3_ignore_call40 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter3_ignore_call42 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter3_ignore_call44 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter3_ignore_call46 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter3_ignore_call48 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter3_ignore_call50 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter3_ignore_call52 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter3_ignore_call54 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter3_ignore_call56 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter3_ignore_call58 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter3_ignore_call60 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter3_ignore_call62 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter3_ignore_call64 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter3_ignore_call66 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter3_ignore_call68 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter3_ignore_call71 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter3_ignore_call8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_1123_assign_proc : process(and_ln215_6_reg_2390, icmp_ln226_fu_2023_p2, icmp_ln237_fu_2040_p2)
    begin
                ap_condition_1123 <= (((icmp_ln237_fu_2040_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln215_6_reg_2390)) or ((icmp_ln237_fu_2040_p2 = ap_const_lv1_0) and (icmp_ln226_fu_2023_p2 = ap_const_lv1_1)));
    end process;


    ap_condition_1128_assign_proc : process(and_ln215_6_reg_2390, icmp_ln226_fu_2023_p2, icmp_ln237_fu_2040_p2)
    begin
                ap_condition_1128 <= (((ap_const_lv1_0 = and_ln215_6_reg_2390) and (icmp_ln237_fu_2040_p2 = ap_const_lv1_1)) or ((icmp_ln237_fu_2040_p2 = ap_const_lv1_1) and (icmp_ln226_fu_2023_p2 = ap_const_lv1_1)));
    end process;


    ap_condition_1142_assign_proc : process(and_ln215_6_reg_2390, icmp_ln226_fu_2023_p2, icmp_ln237_fu_2040_p2, icmp_ln241_fu_2099_p2)
    begin
                ap_condition_1142 <= (((ap_const_lv1_0 = and_ln215_6_reg_2390) and (icmp_ln241_fu_2099_p2 = ap_const_lv1_0) and (icmp_ln237_fu_2040_p2 = ap_const_lv1_1)) or ((icmp_ln241_fu_2099_p2 = ap_const_lv1_0) and (icmp_ln237_fu_2040_p2 = ap_const_lv1_1) and (icmp_ln226_fu_2023_p2 = ap_const_lv1_1)));
    end process;


    ap_condition_1147_assign_proc : process(and_ln215_6_reg_2390, icmp_ln226_fu_2023_p2, icmp_ln237_fu_2040_p2, icmp_ln241_fu_2099_p2)
    begin
                ap_condition_1147 <= (((ap_const_lv1_0 = and_ln215_6_reg_2390) and (icmp_ln237_fu_2040_p2 = ap_const_lv1_1) and (icmp_ln241_fu_2099_p2 = ap_const_lv1_1)) or ((icmp_ln237_fu_2040_p2 = ap_const_lv1_1) and (icmp_ln226_fu_2023_p2 = ap_const_lv1_1) and (icmp_ln241_fu_2099_p2 = ap_const_lv1_1)));
    end process;


    ap_condition_pp0_exit_iter0_state5_assign_proc : process(icmp_ln336_fu_1495_p2)
    begin
        if ((icmp_ln336_fu_1495_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state5 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state2, icmp_ln206_fu_1404_p2)
    begin
        if (((icmp_ln206_fu_1404_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;

    data_V_V_blk_n_assign_proc : process(data_V_V_empty_n, ap_CS_fsm_state3, icmp_ln208_fu_1416_p2)
    begin
        if (((icmp_ln208_fu_1416_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            data_V_V_blk_n <= data_V_V_empty_n;
        else 
            data_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_V_read_assign_proc : process(data_V_V_empty_n, ap_CS_fsm_state3, icmp_ln208_fu_1416_p2)
    begin
        if ((not(((icmp_ln208_fu_1416_p2 = ap_const_lv1_0) and (data_V_V_empty_n = ap_const_logic_0))) and (icmp_ln208_fu_1416_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            data_V_V_read <= ap_const_logic_1;
        else 
            data_V_V_read <= ap_const_logic_0;
        end if; 
    end process;

    grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1145_ap_start <= grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1145_ap_start_reg;

    grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1164_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp189)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp189) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1164_ap_ce <= ap_const_logic_1;
        else 
            grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1164_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1170_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp190)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp190) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1170_ap_ce <= ap_const_logic_1;
        else 
            grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1170_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1176_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp191)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp191) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1176_ap_ce <= ap_const_logic_1;
        else 
            grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1176_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1182_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp192)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp192) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1182_ap_ce <= ap_const_logic_1;
        else 
            grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1182_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1188_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp193)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp193) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1188_ap_ce <= ap_const_logic_1;
        else 
            grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1188_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1194_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp194)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp194) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1194_ap_ce <= ap_const_logic_1;
        else 
            grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1194_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1200_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp195)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp195) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1200_ap_ce <= ap_const_logic_1;
        else 
            grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1200_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1206_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp196)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp196) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1206_ap_ce <= ap_const_logic_1;
        else 
            grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1206_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1212_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp197)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp197) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1212_ap_ce <= ap_const_logic_1;
        else 
            grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1212_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1218_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp198)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp198) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1218_ap_ce <= ap_const_logic_1;
        else 
            grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1218_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1224_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp199)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp199) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1224_ap_ce <= ap_const_logic_1;
        else 
            grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1224_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1230_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp200)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp200) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1230_ap_ce <= ap_const_logic_1;
        else 
            grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1230_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1236_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp201)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp201) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1236_ap_ce <= ap_const_logic_1;
        else 
            grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1236_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1242_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp202)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp202) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1242_ap_ce <= ap_const_logic_1;
        else 
            grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1242_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1248_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp203)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp203) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1248_ap_ce <= ap_const_logic_1;
        else 
            grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1248_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1254_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp204)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp204) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1254_ap_ce <= ap_const_logic_1;
        else 
            grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1254_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1260_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp205)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp205) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1260_ap_ce <= ap_const_logic_1;
        else 
            grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1260_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1266_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp206)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp206) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1266_ap_ce <= ap_const_logic_1;
        else 
            grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1266_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1272_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp207)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp207) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1272_ap_ce <= ap_const_logic_1;
        else 
            grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1272_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1278_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp208)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp208) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1278_ap_ce <= ap_const_logic_1;
        else 
            grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1278_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1284_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp209)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp209) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1284_ap_ce <= ap_const_logic_1;
        else 
            grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1284_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1290_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp210)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp210) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1290_ap_ce <= ap_const_logic_1;
        else 
            grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1290_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1296_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp211)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp211) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1296_ap_ce <= ap_const_logic_1;
        else 
            grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1296_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1302_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp212)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp212) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1302_ap_ce <= ap_const_logic_1;
        else 
            grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1302_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1308_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp213)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp213) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1308_ap_ce <= ap_const_logic_1;
        else 
            grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1308_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1314_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp214)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp214) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1314_ap_ce <= ap_const_logic_1;
        else 
            grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1314_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1320_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp215)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp215) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1320_ap_ce <= ap_const_logic_1;
        else 
            grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1320_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1326_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp216)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp216) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1326_ap_ce <= ap_const_logic_1;
        else 
            grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1326_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1332_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp217)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp217) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1332_ap_ce <= ap_const_logic_1;
        else 
            grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1332_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1338_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp218)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp218) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1338_ap_ce <= ap_const_logic_1;
        else 
            grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1338_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1344_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp219)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp219) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1344_ap_ce <= ap_const_logic_1;
        else 
            grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1344_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1350_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp221)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp221) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1350_ap_ce <= ap_const_logic_1;
        else 
            grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1350_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

        grp_product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_fu_1350_w_V <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_126_reg_2604),6));

    i1_fu_1422_p2 <= std_logic_vector(unsigned(i1_0_i_reg_696) + unsigned(ap_const_lv2_1));
    i_fu_1410_p2 <= std_logic_vector(unsigned(i_0_i_reg_685) + unsigned(ap_const_lv11_1));
    i_ic_fu_2029_p2 <= std_logic_vector(unsigned(i_ic_0_i_reg_1134) + unsigned(ap_const_lv6_1));
    icmp_ln206_fu_1404_p2 <= "1" when (i_0_i_reg_685 = ap_const_lv11_484) else "0";
    icmp_ln208_fu_1416_p2 <= "1" when (i1_0_i_reg_696 = ap_const_lv2_3) else "0";
    icmp_ln215_7_fu_1439_p2 <= "1" when (sY_6_loc_0_fu_348 = ap_const_lv32_2) else "0";
    icmp_ln215_8_fu_1455_p2 <= "1" when (signed(tmp_127_fu_1445_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln215_9_fu_1471_p2 <= "1" when (signed(tmp_128_fu_1461_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln215_fu_1433_p2 <= "1" when (sX_6_loc_0_fu_340 = ap_const_lv32_2) else "0";
    icmp_ln226_fu_2023_p2 <= "1" when (i_ic_0_i_reg_1134 = ap_const_lv6_20) else "0";
    icmp_ln237_fu_2040_p2 <= "1" when (pX_6_loc_0_fu_336 = ap_const_lv32_21) else "0";
    icmp_ln241_fu_2099_p2 <= "1" when (pY_6_loc_0_fu_344 = ap_const_lv32_21) else "0";
    icmp_ln336_fu_1495_p2 <= "1" when (in_index_reg_1123 = ap_const_lv5_1B) else "0";

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln206_fu_1404_p2)
    begin
        if (((icmp_ln206_fu_1404_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ir_fu_1501_p2 <= std_logic_vector(unsigned(in_index_reg_1123) + unsigned(ap_const_lv5_1));

    layer_in_V_9_address0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1145_output_V_address0, ap_block_pp0_stage0, zext_ln344_fu_1507_p1)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            layer_in_V_9_address0 <= zext_ln344_fu_1507_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            layer_in_V_9_address0 <= grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1145_output_V_address0;
        else 
            layer_in_V_9_address0 <= "XXXXX";
        end if; 
    end process;


    layer_in_V_9_ce0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1145_output_V_ce0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer_in_V_9_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            layer_in_V_9_ce0 <= grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1145_output_V_ce0;
        else 
            layer_in_V_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    layer_in_V_9_we0_assign_proc : process(ap_CS_fsm_state4, grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1145_output_V_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            layer_in_V_9_we0 <= grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1145_output_V_we0;
        else 
            layer_in_V_9_we0 <= ap_const_logic_0;
        end if; 
    end process;


    layer_out_i_address0_assign_proc : process(ap_CS_fsm_state25, ap_CS_fsm_state24, zext_ln228_fu_2035_p1, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            layer_out_i_address0 <= zext_ln228_fu_2035_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            layer_out_i_address0 <= ap_const_lv64_1E(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            layer_out_i_address0 <= ap_const_lv64_1C(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            layer_out_i_address0 <= ap_const_lv64_1A(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            layer_out_i_address0 <= ap_const_lv64_18(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            layer_out_i_address0 <= ap_const_lv64_16(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            layer_out_i_address0 <= ap_const_lv64_14(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            layer_out_i_address0 <= ap_const_lv64_12(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            layer_out_i_address0 <= ap_const_lv64_10(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            layer_out_i_address0 <= ap_const_lv64_E(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            layer_out_i_address0 <= ap_const_lv64_C(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            layer_out_i_address0 <= ap_const_lv64_A(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            layer_out_i_address0 <= ap_const_lv64_8(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            layer_out_i_address0 <= ap_const_lv64_6(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            layer_out_i_address0 <= ap_const_lv64_4(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            layer_out_i_address0 <= ap_const_lv64_2(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            layer_out_i_address0 <= ap_const_lv64_0(5 - 1 downto 0);
        else 
            layer_out_i_address0 <= "XXXXX";
        end if; 
    end process;


    layer_out_i_address1_assign_proc : process(ap_CS_fsm_state24, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            layer_out_i_address1 <= ap_const_lv64_1F(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            layer_out_i_address1 <= ap_const_lv64_1D(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            layer_out_i_address1 <= ap_const_lv64_1B(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            layer_out_i_address1 <= ap_const_lv64_19(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            layer_out_i_address1 <= ap_const_lv64_17(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            layer_out_i_address1 <= ap_const_lv64_15(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            layer_out_i_address1 <= ap_const_lv64_13(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            layer_out_i_address1 <= ap_const_lv64_11(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            layer_out_i_address1 <= ap_const_lv64_F(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            layer_out_i_address1 <= ap_const_lv64_D(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            layer_out_i_address1 <= ap_const_lv64_B(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            layer_out_i_address1 <= ap_const_lv64_9(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            layer_out_i_address1 <= ap_const_lv64_7(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            layer_out_i_address1 <= ap_const_lv64_5(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            layer_out_i_address1 <= ap_const_lv64_3(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            layer_out_i_address1 <= ap_const_lv64_1(5 - 1 downto 0);
        else 
            layer_out_i_address1 <= "XXXXX";
        end if; 
    end process;


    layer_out_i_ce0_assign_proc : process(ap_CS_fsm_state25, ap_CS_fsm_state24, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            layer_out_i_ce0 <= ap_const_logic_1;
        else 
            layer_out_i_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    layer_out_i_ce1_assign_proc : process(ap_CS_fsm_state24, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            layer_out_i_ce1 <= ap_const_logic_1;
        else 
            layer_out_i_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    layer_out_i_d0_assign_proc : process(acc_V_30_0_reg_720, acc_V_28_0_reg_746, acc_V_26_0_reg_772, acc_V_24_0_reg_798, acc_V_22_0_reg_824, acc_V_20_0_reg_850, acc_V_18_0_reg_876, acc_V_16_0_reg_902, acc_V_14_0_reg_928, acc_V_12_0_reg_954, acc_V_10_0_reg_980, acc_V_8_0_reg_1006, acc_V_6_0_reg_1032, acc_V_4_0_reg_1058, acc_V_2_0_reg_1084, acc_V_0_0_reg_1110, ap_CS_fsm_state24, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            layer_out_i_d0 <= acc_V_30_0_reg_720;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            layer_out_i_d0 <= acc_V_28_0_reg_746;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            layer_out_i_d0 <= acc_V_26_0_reg_772;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            layer_out_i_d0 <= acc_V_24_0_reg_798;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            layer_out_i_d0 <= acc_V_22_0_reg_824;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            layer_out_i_d0 <= acc_V_20_0_reg_850;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            layer_out_i_d0 <= acc_V_18_0_reg_876;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            layer_out_i_d0 <= acc_V_16_0_reg_902;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            layer_out_i_d0 <= acc_V_14_0_reg_928;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            layer_out_i_d0 <= acc_V_12_0_reg_954;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            layer_out_i_d0 <= acc_V_10_0_reg_980;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            layer_out_i_d0 <= acc_V_8_0_reg_1006;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            layer_out_i_d0 <= acc_V_6_0_reg_1032;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            layer_out_i_d0 <= acc_V_4_0_reg_1058;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            layer_out_i_d0 <= acc_V_2_0_reg_1084;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            layer_out_i_d0 <= acc_V_0_0_reg_1110;
        else 
            layer_out_i_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    layer_out_i_d1_assign_proc : process(acc_V_31_0_reg_707, acc_V_29_0_reg_733, acc_V_27_0_reg_759, acc_V_25_0_reg_785, acc_V_23_0_reg_811, acc_V_21_0_reg_837, acc_V_19_0_reg_863, acc_V_17_0_reg_889, acc_V_15_0_reg_915, acc_V_13_0_reg_941, acc_V_11_0_reg_967, acc_V_9_0_reg_993, acc_V_7_0_reg_1019, acc_V_5_0_reg_1045, acc_V_3_0_reg_1071, acc_V_1_0_reg_1097, ap_CS_fsm_state24, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            layer_out_i_d1 <= acc_V_31_0_reg_707;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            layer_out_i_d1 <= acc_V_29_0_reg_733;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            layer_out_i_d1 <= acc_V_27_0_reg_759;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            layer_out_i_d1 <= acc_V_25_0_reg_785;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            layer_out_i_d1 <= acc_V_23_0_reg_811;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            layer_out_i_d1 <= acc_V_21_0_reg_837;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            layer_out_i_d1 <= acc_V_19_0_reg_863;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            layer_out_i_d1 <= acc_V_17_0_reg_889;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            layer_out_i_d1 <= acc_V_15_0_reg_915;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            layer_out_i_d1 <= acc_V_13_0_reg_941;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            layer_out_i_d1 <= acc_V_11_0_reg_967;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            layer_out_i_d1 <= acc_V_9_0_reg_993;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            layer_out_i_d1 <= acc_V_7_0_reg_1019;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            layer_out_i_d1 <= acc_V_5_0_reg_1045;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            layer_out_i_d1 <= acc_V_3_0_reg_1071;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            layer_out_i_d1 <= acc_V_1_0_reg_1097;
        else 
            layer_out_i_d1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    layer_out_i_we0_assign_proc : process(ap_CS_fsm_state24, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            layer_out_i_we0 <= ap_const_logic_1;
        else 
            layer_out_i_we0 <= ap_const_logic_0;
        end if; 
    end process;


    layer_out_i_we1_assign_proc : process(ap_CS_fsm_state24, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            layer_out_i_we1 <= ap_const_logic_1;
        else 
            layer_out_i_we1 <= ap_const_logic_0;
        end if; 
    end process;


    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;


    res_V_V_blk_n_assign_proc : process(res_V_V_full_n, ap_CS_fsm_state26)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            res_V_V_blk_n <= res_V_V_full_n;
        else 
            res_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_V_din <= layer_out_i_q0;

    res_V_V_write_assign_proc : process(res_V_V_full_n, ap_CS_fsm_state26)
    begin
        if (((res_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
            res_V_V_write <= ap_const_logic_1;
        else 
            res_V_V_write <= ap_const_logic_0;
        end if; 
    end process;

    select_ln247_fu_2123_p3 <= 
        ap_const_lv32_2 when (icmp_ln215_7_reg_2385(0) = '1') else 
        add_ln247_fu_2117_p2;
    select_ln252_fu_2064_p3 <= 
        ap_const_lv32_2 when (icmp_ln215_reg_2380(0) = '1') else 
        add_ln252_fu_2058_p2;
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp_127_fu_1445_p4 <= pY_6_loc_0_fu_344(31 downto 1);
    tmp_128_fu_1461_p4 <= pX_6_loc_0_fu_336(31 downto 1);

    tmpdata_V_address0_assign_proc : process(ap_CS_fsm_state3, icmp_ln208_fu_1416_p2, ap_CS_fsm_state4, grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1145_data_V_address0, zext_ln210_fu_1428_p1)
    begin
        if (((icmp_ln208_fu_1416_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            tmpdata_V_address0 <= zext_ln210_fu_1428_p1(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            tmpdata_V_address0 <= grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1145_data_V_address0;
        else 
            tmpdata_V_address0 <= "XX";
        end if; 
    end process;


    tmpdata_V_ce0_assign_proc : process(data_V_V_empty_n, ap_CS_fsm_state3, icmp_ln208_fu_1416_p2, ap_CS_fsm_state4, grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1145_data_V_ce0)
    begin
        if ((not(((icmp_ln208_fu_1416_p2 = ap_const_lv1_0) and (data_V_V_empty_n = ap_const_logic_0))) and (icmp_ln208_fu_1416_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            tmpdata_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            tmpdata_V_ce0 <= grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1145_data_V_ce0;
        else 
            tmpdata_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    tmpdata_V_we0_assign_proc : process(data_V_V_empty_n, ap_CS_fsm_state3, icmp_ln208_fu_1416_p2)
    begin
        if ((not(((icmp_ln208_fu_1416_p2 = ap_const_lv1_0) and (data_V_V_empty_n = ap_const_logic_0))) and (icmp_ln208_fu_1416_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            tmpdata_V_we0 <= ap_const_logic_1;
        else 
            tmpdata_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    trunc_ln344_fu_1513_p1 <= w2_V_q0(6 - 1 downto 0);
    w2_V_address0 <= zext_ln344_fu_1507_p1(5 - 1 downto 0);

    w2_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            w2_V_ce0 <= ap_const_logic_1;
        else 
            w2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln210_fu_1428_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i1_0_i_reg_696),64));
    zext_ln228_fu_2035_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_ic_0_i_reg_1134),64));
    zext_ln344_fu_1507_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(in_index_reg_1123),64));
end behav;
