// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s (
        ap_clk,
        ap_rst,
        a_V,
        w_V,
        ap_return,
        ap_ce
);


input   ap_clk;
input   ap_rst;
input  [15:0] a_V;
input  [5:0] w_V;
output  [15:0] ap_return;
input   ap_ce;

reg[15:0] ap_return;

wire  signed [20:0] r_V_fu_43_p2;
reg  signed [20:0] r_V_reg_49;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire    ap_block_pp0_stage0;
reg    ap_ce_reg;
reg   [15:0] ap_return_int_reg;

myproject_mul_mul_16s_6s_21_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 21 ))
myproject_mul_mul_16s_6s_21_1_0_U10(
    .din0(a_V),
    .din1(w_V),
    .dout(r_V_fu_43_p2)
);

always @ (posedge ap_clk) begin
    ap_ce_reg <= ap_ce;
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce_reg)) begin
        ap_return_int_reg <= {{r_V_reg_49[20:5]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        r_V_reg_49 <= r_V_fu_43_p2;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return = ap_return_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return = {{r_V_reg_49[20:5]}};
    end
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

endmodule //product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s
