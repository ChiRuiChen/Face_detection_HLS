// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_HH_
#define _product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "myproject_mul_mul_16s_6s_21_1_0.h"

namespace ap_rtl {

struct product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s : public sc_module {
    // Port declarations 6
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_lv<16> > a_V;
    sc_in< sc_lv<6> > w_V;
    sc_out< sc_lv<16> > ap_return;
    sc_in< sc_logic > ap_ce;


    // Module declarations
    product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s(sc_module_name name);
    SC_HAS_PROCESS(product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s);

    ~product_dense_ap_fixed_ap_fixed_ap_fixed_16_4_5_3_0_s();

    sc_trace_file* mVcdFile;

    myproject_mul_mul_16s_6s_21_1_0<1,1,16,6,21>* myproject_mul_mul_16s_6s_21_1_0_U10;
    sc_signal< sc_lv<21> > r_V_fu_43_p2;
    sc_signal< sc_lv<21> > r_V_reg_49;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_logic > ap_ce_reg;
    sc_signal< sc_lv<16> > ap_return_int_reg;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const bool ap_const_boolean_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_14;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_state1_pp0_stage0_iter0();
    void thread_ap_block_state2_pp0_stage0_iter1();
    void thread_ap_return();
};

}

using namespace ap_rtl;

#endif
