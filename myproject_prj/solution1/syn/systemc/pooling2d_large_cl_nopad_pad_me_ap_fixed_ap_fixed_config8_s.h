// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _pooling2d_large_cl_nopad_pad_me_ap_fixed_ap_fixed_config8_s_HH_
#define _pooling2d_large_cl_nopad_pad_me_ap_fixed_ap_fixed_config8_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config8_s.h"
#include "pooling2d_large_cl_nopad_pad_me_ap_fixed_ap_fixed_config8bYs.h"
#include "conv_2d_cl_me_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_tmpdbpm.h"
#include "pooling2d_large_cl_nopad_pad_me_ap_fixed_ap_fixed_config8b0s.h"

namespace ap_rtl {

struct pooling2d_large_cl_nopad_pad_me_ap_fixed_ap_fixed_config8_s : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;
    sc_in< sc_lv<16> > data_V_V_dout;
    sc_in< sc_logic > data_V_V_empty_n;
    sc_out< sc_logic > data_V_V_read;
    sc_out< sc_lv<16> > res_V_V_din;
    sc_in< sc_logic > res_V_V_full_n;
    sc_out< sc_logic > res_V_V_write;


    // Module declarations
    pooling2d_large_cl_nopad_pad_me_ap_fixed_ap_fixed_config8_s(sc_module_name name);
    SC_HAS_PROCESS(pooling2d_large_cl_nopad_pad_me_ap_fixed_ap_fixed_config8_s);

    ~pooling2d_large_cl_nopad_pad_me_ap_fixed_ap_fixed_config8_s();

    sc_trace_file* mVcdFile;

    pooling2d_large_cl_nopad_pad_me_ap_fixed_ap_fixed_config8bYs* layer_in_V_5_U;
    conv_2d_cl_me_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_tmpdbpm* tmpdata_V_U;
    pooling2d_large_cl_nopad_pad_me_ap_fixed_ap_fixed_config8b0s* pool_V_U;
    cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config8_s* grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config8_s_fu_311;
    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<11> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_lv<7> > layer_in_V_5_address0;
    sc_signal< sc_logic > layer_in_V_5_ce0;
    sc_signal< sc_logic > layer_in_V_5_we0;
    sc_signal< sc_lv<16> > layer_in_V_5_q0;
    sc_signal< sc_lv<32> > sX;
    sc_signal< sc_lv<32> > sY;
    sc_signal< sc_lv<32> > pY;
    sc_signal< sc_lv<32> > pX;
    sc_signal< sc_logic > data_V_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > icmp_ln489_fu_394_p2;
    sc_signal< sc_logic > res_V_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<1> > icmp_ln512_fu_604_p2;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<10> > i_ih_fu_388_p2;
    sc_signal< sc_lv<10> > i_ih_reg_649;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<6> > i0_fu_400_p2;
    sc_signal< bool > ap_block_state3;
    sc_signal< sc_lv<32> > sX_load_reg_662;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_logic > grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config8_s_fu_311_ap_ready;
    sc_signal< sc_logic > grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config8_s_fu_311_ap_done;
    sc_signal< sc_lv<1> > icmp_ln498_fu_415_p2;
    sc_signal< sc_lv<1> > icmp_ln498_reg_667;
    sc_signal< sc_lv<32> > sY_load_reg_672;
    sc_signal< sc_lv<1> > icmp_ln498_1_fu_425_p2;
    sc_signal< sc_lv<1> > icmp_ln498_1_reg_677;
    sc_signal< sc_lv<32> > pY_load_reg_682;
    sc_signal< sc_lv<32> > pX_load_reg_688;
    sc_signal< sc_lv<1> > and_ln498_2_fu_463_p2;
    sc_signal< sc_lv<1> > and_ln498_2_reg_694;
    sc_signal< sc_lv<7> > zext_ln500_fu_469_p1;
    sc_signal< sc_lv<7> > zext_ln500_reg_698;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<6> > i1_fu_479_p2;
    sc_signal< sc_lv<6> > i1_reg_706;
    sc_signal< sc_lv<1> > icmp_ln522_fu_485_p2;
    sc_signal< sc_lv<1> > icmp_ln522_reg_711;
    sc_signal< sc_lv<1> > icmp_ln500_fu_473_p2;
    sc_signal< sc_lv<32> > select_ln532_fu_552_p3;
    sc_signal< sc_lv<1> > icmp_ln526_fu_531_p2;
    sc_signal< sc_lv<3> > i2_fu_571_p2;
    sc_signal< sc_lv<3> > i2_reg_726;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<1> > icmp_ln506_fu_565_p2;
    sc_signal< sc_lv<16> > pool_V_q0;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< bool > ap_block_state9;
    sc_signal< sc_lv<3> > i_fu_615_p2;
    sc_signal< sc_lv<3> > i_reg_749;
    sc_signal< sc_lv<16> > pool_res_V_1_fu_627_p3;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<5> > tmpdata_V_address0;
    sc_signal< sc_logic > tmpdata_V_ce0;
    sc_signal< sc_logic > tmpdata_V_we0;
    sc_signal< sc_lv<16> > tmpdata_V_q0;
    sc_signal< sc_lv<2> > pool_V_address0;
    sc_signal< sc_logic > pool_V_ce0;
    sc_signal< sc_logic > pool_V_we0;
    sc_signal< sc_logic > grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config8_s_fu_311_ap_start;
    sc_signal< sc_logic > grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config8_s_fu_311_ap_idle;
    sc_signal< sc_lv<5> > grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config8_s_fu_311_data_V_address0;
    sc_signal< sc_logic > grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config8_s_fu_311_data_V_ce0;
    sc_signal< sc_lv<7> > grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config8_s_fu_311_output_V_address0;
    sc_signal< sc_logic > grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config8_s_fu_311_output_V_ce0;
    sc_signal< sc_logic > grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config8_s_fu_311_output_V_we0;
    sc_signal< sc_lv<16> > grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config8_s_fu_311_output_V_d0;
    sc_signal< sc_lv<10> > i_ih_0_reg_233;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<6> > i0_0_reg_244;
    sc_signal< sc_lv<1> > icmp_ln484_fu_382_p2;
    sc_signal< sc_lv<6> > i1_0_reg_255;
    sc_signal< sc_lv<3> > i2_0_reg_266;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<16> > tmp_V_reg_278;
    sc_signal< sc_lv<3> > i_0_reg_289;
    sc_signal< sc_lv<32> > storemerge_reg_300;
    sc_signal< sc_logic > grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config8_s_fu_311_ap_start_reg;
    sc_signal< bool > ap_block_state3_ignore_call0;
    sc_signal< sc_lv<64> > zext_ln492_fu_406_p1;
    sc_signal< sc_lv<64> > zext_ln508_1_fu_594_p1;
    sc_signal< sc_lv<64> > zext_ln508_fu_599_p1;
    sc_signal< sc_lv<64> > zext_ln513_fu_610_p1;
    sc_signal< sc_lv<32> > select_ln537_fu_506_p3;
    sc_signal< sc_lv<32> > add_ln530_fu_536_p2;
    sc_signal< sc_lv<32> > add_ln535_fu_490_p2;
    sc_signal< sc_lv<1> > icmp_ln498_2_fu_435_p2;
    sc_signal< sc_lv<1> > icmp_ln498_3_fu_445_p2;
    sc_signal< sc_lv<1> > and_ln498_1_fu_457_p2;
    sc_signal< sc_lv<1> > and_ln498_fu_451_p2;
    sc_signal< sc_lv<32> > add_ln537_fu_501_p2;
    sc_signal< sc_lv<32> > add_ln532_fu_547_p2;
    sc_signal< sc_lv<2> > trunc_ln508_fu_577_p1;
    sc_signal< sc_lv<7> > shl_ln_fu_581_p3;
    sc_signal< sc_lv<7> > add_ln508_fu_589_p2;
    sc_signal< sc_lv<1> > icmp_ln1494_fu_621_p2;
    sc_signal< sc_lv<11> > ap_NS_fsm;
    sc_signal< bool > ap_condition_675;
    sc_signal< bool > ap_condition_677;
    sc_signal< bool > ap_condition_161;
    sc_signal< bool > ap_condition_272;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<11> ap_ST_fsm_state1;
    static const sc_lv<11> ap_ST_fsm_state2;
    static const sc_lv<11> ap_ST_fsm_state3;
    static const sc_lv<11> ap_ST_fsm_state4;
    static const sc_lv<11> ap_ST_fsm_state5;
    static const sc_lv<11> ap_ST_fsm_state6;
    static const sc_lv<11> ap_ST_fsm_state7;
    static const sc_lv<11> ap_ST_fsm_state8;
    static const sc_lv<11> ap_ST_fsm_state9;
    static const sc_lv<11> ap_ST_fsm_state10;
    static const sc_lv<11> ap_ST_fsm_state11;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<10> ap_const_lv10_384;
    static const sc_lv<10> ap_const_lv10_1;
    static const sc_lv<6> ap_const_lv6_20;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<32> ap_const_lv32_1D;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<5> ap_const_lv5_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln508_fu_589_p2();
    void thread_add_ln530_fu_536_p2();
    void thread_add_ln532_fu_547_p2();
    void thread_add_ln535_fu_490_p2();
    void thread_add_ln537_fu_501_p2();
    void thread_and_ln498_1_fu_457_p2();
    void thread_and_ln498_2_fu_463_p2();
    void thread_and_ln498_fu_451_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_block_state1();
    void thread_ap_block_state3();
    void thread_ap_block_state3_ignore_call0();
    void thread_ap_block_state9();
    void thread_ap_condition_161();
    void thread_ap_condition_272();
    void thread_ap_condition_675();
    void thread_ap_condition_677();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_data_V_V_blk_n();
    void thread_data_V_V_read();
    void thread_grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config8_s_fu_311_ap_start();
    void thread_i0_fu_400_p2();
    void thread_i1_fu_479_p2();
    void thread_i2_fu_571_p2();
    void thread_i_fu_615_p2();
    void thread_i_ih_fu_388_p2();
    void thread_icmp_ln1494_fu_621_p2();
    void thread_icmp_ln484_fu_382_p2();
    void thread_icmp_ln489_fu_394_p2();
    void thread_icmp_ln498_1_fu_425_p2();
    void thread_icmp_ln498_2_fu_435_p2();
    void thread_icmp_ln498_3_fu_445_p2();
    void thread_icmp_ln498_fu_415_p2();
    void thread_icmp_ln500_fu_473_p2();
    void thread_icmp_ln506_fu_565_p2();
    void thread_icmp_ln512_fu_604_p2();
    void thread_icmp_ln522_fu_485_p2();
    void thread_icmp_ln526_fu_531_p2();
    void thread_internal_ap_ready();
    void thread_layer_in_V_5_address0();
    void thread_layer_in_V_5_ce0();
    void thread_layer_in_V_5_we0();
    void thread_pool_V_address0();
    void thread_pool_V_ce0();
    void thread_pool_V_we0();
    void thread_pool_res_V_1_fu_627_p3();
    void thread_real_start();
    void thread_res_V_V_blk_n();
    void thread_res_V_V_din();
    void thread_res_V_V_write();
    void thread_select_ln532_fu_552_p3();
    void thread_select_ln537_fu_506_p3();
    void thread_shl_ln_fu_581_p3();
    void thread_start_out();
    void thread_start_write();
    void thread_tmpdata_V_address0();
    void thread_tmpdata_V_ce0();
    void thread_tmpdata_V_we0();
    void thread_trunc_ln508_fu_577_p1();
    void thread_zext_ln492_fu_406_p1();
    void thread_zext_ln500_fu_469_p1();
    void thread_zext_ln508_1_fu_594_p1();
    void thread_zext_ln508_fu_599_p1();
    void thread_zext_ln513_fu_610_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
