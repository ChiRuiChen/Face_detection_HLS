// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        data_V_address0,
        data_V_ce0,
        data_V_q0,
        output_V_address0,
        output_V_ce0,
        output_V_we0,
        output_V_d0,
        output_V_q0
);

parameter    ap_ST_fsm_state1 = 14'd1;
parameter    ap_ST_fsm_state2 = 14'd2;
parameter    ap_ST_fsm_state3 = 14'd4;
parameter    ap_ST_fsm_state4 = 14'd8;
parameter    ap_ST_fsm_state5 = 14'd16;
parameter    ap_ST_fsm_state6 = 14'd32;
parameter    ap_ST_fsm_state7 = 14'd64;
parameter    ap_ST_fsm_state8 = 14'd128;
parameter    ap_ST_fsm_state9 = 14'd256;
parameter    ap_ST_fsm_state10 = 14'd512;
parameter    ap_ST_fsm_state11 = 14'd1024;
parameter    ap_ST_fsm_state12 = 14'd2048;
parameter    ap_ST_fsm_state13 = 14'd4096;
parameter    ap_ST_fsm_state14 = 14'd8192;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [4:0] data_V_address0;
output   data_V_ce0;
input  [15:0] data_V_q0;
output  [8:0] output_V_address0;
output   output_V_ce0;
output   output_V_we0;
output  [15:0] output_V_d0;
input  [15:0] output_V_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg data_V_ce0;
reg[8:0] output_V_address0;
reg output_V_ce0;
reg output_V_we0;
reg[15:0] output_V_d0;

(* fsm_encoding = "none" *) reg   [13:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [5:0] linebuffer_V_3_0_address0;
reg    linebuffer_V_3_0_ce0;
reg    linebuffer_V_3_0_we0;
wire   [15:0] linebuffer_V_3_0_q0;
reg   [5:0] linebuffer_V_3_16_address0;
reg    linebuffer_V_3_16_ce0;
reg    linebuffer_V_3_16_we0;
wire   [15:0] linebuffer_V_3_16_q0;
reg    linebuffer_V_3_1_ce0;
reg    linebuffer_V_3_1_we0;
wire   [15:0] linebuffer_V_3_1_q0;
reg    linebuffer_V_3_2_ce0;
reg    linebuffer_V_3_2_we0;
wire   [15:0] linebuffer_V_3_2_q0;
reg    linebuffer_V_3_3_ce0;
reg    linebuffer_V_3_3_we0;
wire   [15:0] linebuffer_V_3_3_q0;
reg    linebuffer_V_3_4_ce0;
reg    linebuffer_V_3_4_we0;
wire   [15:0] linebuffer_V_3_4_q0;
reg    linebuffer_V_3_5_ce0;
reg    linebuffer_V_3_5_we0;
wire   [15:0] linebuffer_V_3_5_q0;
reg    linebuffer_V_3_6_ce0;
reg    linebuffer_V_3_6_we0;
wire   [15:0] linebuffer_V_3_6_q0;
reg    linebuffer_V_3_7_ce0;
reg    linebuffer_V_3_7_we0;
wire   [15:0] linebuffer_V_3_7_q0;
reg    linebuffer_V_3_8_ce0;
reg    linebuffer_V_3_8_we0;
wire   [15:0] linebuffer_V_3_8_q0;
reg    linebuffer_V_3_9_ce0;
reg    linebuffer_V_3_9_we0;
wire   [15:0] linebuffer_V_3_9_q0;
reg    linebuffer_V_3_10_ce0;
reg    linebuffer_V_3_10_we0;
wire   [15:0] linebuffer_V_3_10_q0;
reg    linebuffer_V_3_11_ce0;
reg    linebuffer_V_3_11_we0;
wire   [15:0] linebuffer_V_3_11_q0;
reg    linebuffer_V_3_12_ce0;
reg    linebuffer_V_3_12_we0;
wire   [15:0] linebuffer_V_3_12_q0;
reg    linebuffer_V_3_13_ce0;
reg    linebuffer_V_3_13_we0;
wire   [15:0] linebuffer_V_3_13_q0;
reg    linebuffer_V_3_14_ce0;
reg    linebuffer_V_3_14_we0;
wire   [15:0] linebuffer_V_3_14_q0;
reg    linebuffer_V_3_15_ce0;
reg    linebuffer_V_3_15_we0;
wire   [15:0] linebuffer_V_3_15_q0;
wire   [5:0] i0_fu_581_p2;
reg   [5:0] i0_reg_943;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln246_fu_575_p2;
wire   [7:0] zext_ln203_4_fu_592_p1;
reg   [7:0] zext_ln203_4_reg_953;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire   [0:0] icmp_ln250_fu_605_p2;
wire   [63:0] zext_ln255_1_fu_662_p1;
reg   [63:0] zext_ln255_1_reg_968;
reg   [5:0] linebuffer_V_3_0_addr_reg_987;
reg   [5:0] linebuffer_V_3_16_addr_reg_992;
wire   [15:0] tmpinput_V_q0;
reg   [15:0] tmp1_V_reg_997;
wire    ap_CS_fsm_state5;
reg   [5:0] linebuffer_V_3_1_addr_reg_1002;
reg   [5:0] linebuffer_V_3_10_addr_reg_1007;
reg   [5:0] linebuffer_V_3_11_addr_reg_1012;
reg   [5:0] linebuffer_V_3_12_addr_reg_1017;
reg   [5:0] linebuffer_V_3_13_addr_reg_1022;
reg   [5:0] linebuffer_V_3_14_addr_reg_1027;
reg   [5:0] linebuffer_V_3_15_addr_reg_1032;
reg   [5:0] linebuffer_V_3_2_addr_reg_1037;
reg   [5:0] linebuffer_V_3_3_addr_reg_1042;
reg   [5:0] linebuffer_V_3_4_addr_reg_1047;
reg   [5:0] linebuffer_V_3_5_addr_reg_1052;
reg   [5:0] linebuffer_V_3_6_addr_reg_1057;
reg   [5:0] linebuffer_V_3_7_addr_reg_1062;
reg   [5:0] linebuffer_V_3_8_addr_reg_1067;
reg   [5:0] linebuffer_V_3_9_addr_reg_1072;
reg   [15:0] tmp_V_reg_1077;
reg   [15:0] linebuffer_V_3_16_load_reg_1082;
wire   [4:0] i2_2_fu_674_p2;
reg   [4:0] i2_2_reg_1090;
wire    ap_CS_fsm_state6;
wire   [1:0] i1_fu_708_p2;
wire   [0:0] icmp_ln258_fu_668_p2;
wire   [1:0] i0_1_fu_720_p2;
reg   [1:0] i0_1_reg_1103;
wire    ap_CS_fsm_state8;
wire   [6:0] zext_ln192_2_fu_738_p1;
reg   [6:0] zext_ln192_2_reg_1108;
wire   [0:0] icmp_ln188_fu_714_p2;
wire   [6:0] add_ln192_fu_742_p2;
reg   [6:0] add_ln192_reg_1113;
wire   [1:0] i1_1_fu_754_p2;
reg   [1:0] i1_1_reg_1121;
wire    ap_CS_fsm_state9;
wire   [9:0] sub_ln192_fu_784_p2;
reg   [9:0] sub_ln192_reg_1126;
wire   [0:0] icmp_ln190_fu_748_p2;
wire   [5:0] i2_1_fu_800_p2;
reg   [5:0] i2_1_reg_1135;
wire    ap_CS_fsm_state10;
wire   [9:0] add_ln192_1_fu_815_p2;
reg   [9:0] add_ln192_1_reg_1140;
wire   [0:0] icmp_ln191_fu_794_p2;
wire   [1:0] i1_2_fu_857_p2;
reg   [1:0] i1_2_reg_1153;
wire    ap_CS_fsm_state12;
wire   [8:0] sub_ln203_fu_883_p2;
reg   [8:0] sub_ln203_reg_1158;
wire   [0:0] icmp_ln200_fu_851_p2;
wire   [7:0] zext_ln202_fu_889_p1;
reg   [7:0] zext_ln202_reg_1163;
wire   [5:0] i2_fu_899_p2;
reg   [5:0] i2_reg_1171;
wire    ap_CS_fsm_state13;
wire   [8:0] add_ln203_fu_917_p2;
reg   [8:0] add_ln203_reg_1176;
wire   [0:0] icmp_ln202_fu_893_p2;
reg   [6:0] tmpinput_V_address0;
reg    tmpinput_V_ce0;
reg    tmpinput_V_we0;
reg   [15:0] tmpinput_V_d0;
reg   [5:0] i0_0_reg_416;
reg   [1:0] i1_0_reg_428;
wire   [4:0] ap_phi_mux_i2_0_phi_fu_444_p4;
reg   [4:0] i2_0_reg_440;
wire    ap_CS_fsm_state7;
reg   [15:0] ap_phi_mux_phi_ln203_phi_fu_455_p32;
reg   [15:0] phi_ln203_reg_452;
reg   [1:0] i0_0_i_reg_520;
reg   [1:0] i1_0_i_reg_531;
reg   [5:0] i2_0_i_reg_542;
wire    ap_CS_fsm_state11;
reg   [1:0] i11_0_i_reg_553;
reg   [5:0] i22_0_i_reg_564;
wire    ap_CS_fsm_state14;
wire   [63:0] zext_ln248_fu_587_p1;
wire   [63:0] tmp_97_fu_596_p3;
wire   [63:0] zext_ln252_1_fu_634_p1;
wire   [63:0] zext_ln203_7_fu_703_p1;
wire   [63:0] zext_ln192_1_fu_838_p1;
wire   [63:0] zext_ln192_fu_846_p1;
wire   [63:0] zext_ln203_9_fu_931_p1;
wire   [63:0] zext_ln203_fu_936_p1;
wire   [1:0] xor_ln252_fu_611_p2;
wire   [6:0] tmp_99_fu_617_p3;
wire   [7:0] zext_ln252_fu_625_p1;
wire   [7:0] add_ln252_fu_629_p2;
wire   [1:0] add_ln255_fu_639_p2;
wire   [6:0] tmp_100_fu_645_p3;
wire   [7:0] zext_ln255_fu_653_p1;
wire   [7:0] add_ln255_1_fu_657_p2;
wire   [1:0] sub_ln265_fu_680_p2;
wire   [6:0] tmp_102_fu_686_p3;
wire   [7:0] zext_ln203_5_fu_694_p1;
wire   [7:0] add_ln203_1_fu_698_p2;
wire   [0:0] trunc_ln192_fu_726_p1;
wire   [5:0] shl_ln_fu_730_p3;
wire   [8:0] shl_ln192_1_fu_760_p3;
wire   [6:0] shl_ln192_2_fu_772_p3;
wire   [9:0] zext_ln192_3_fu_768_p1;
wire   [9:0] zext_ln192_4_fu_780_p1;
wire   [6:0] zext_ln191_fu_790_p1;
wire   [6:0] add_ln192_2_fu_806_p2;
wire   [9:0] zext_ln192_5_fu_811_p1;
wire   [6:0] add_ln192_3_fu_820_p2;
wire   [9:0] zext_ln192_6_fu_825_p1;
wire   [9:0] add_ln192_4_fu_829_p2;
wire  signed [31:0] sext_ln192_1_fu_834_p1;
wire  signed [31:0] sext_ln192_fu_843_p1;
wire   [6:0] shl_ln203_1_fu_871_p3;
wire   [8:0] shl_ln1_fu_863_p3;
wire   [8:0] zext_ln203_3_fu_879_p1;
wire   [6:0] or_ln_fu_905_p3;
wire   [8:0] zext_ln203_6_fu_913_p1;
wire   [7:0] zext_ln203_8_fu_922_p1;
wire   [7:0] add_ln203_2_fu_926_p2;
reg   [13:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 14'd1;
end

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_linebNgs #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linebuffer_V_3_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_3_0_address0),
    .ce0(linebuffer_V_3_0_ce0),
    .we0(linebuffer_V_3_0_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_455_p32),
    .q0(linebuffer_V_3_0_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_linebNgs #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linebuffer_V_3_16_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_3_16_address0),
    .ce0(linebuffer_V_3_16_ce0),
    .we0(linebuffer_V_3_16_we0),
    .d0(tmp1_V_reg_997),
    .q0(linebuffer_V_3_16_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_linebNgs #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linebuffer_V_3_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_3_1_addr_reg_1002),
    .ce0(linebuffer_V_3_1_ce0),
    .we0(linebuffer_V_3_1_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_455_p32),
    .q0(linebuffer_V_3_1_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_linebNgs #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linebuffer_V_3_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_3_2_addr_reg_1037),
    .ce0(linebuffer_V_3_2_ce0),
    .we0(linebuffer_V_3_2_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_455_p32),
    .q0(linebuffer_V_3_2_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_linebNgs #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linebuffer_V_3_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_3_3_addr_reg_1042),
    .ce0(linebuffer_V_3_3_ce0),
    .we0(linebuffer_V_3_3_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_455_p32),
    .q0(linebuffer_V_3_3_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_linebNgs #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linebuffer_V_3_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_3_4_addr_reg_1047),
    .ce0(linebuffer_V_3_4_ce0),
    .we0(linebuffer_V_3_4_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_455_p32),
    .q0(linebuffer_V_3_4_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_linebNgs #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linebuffer_V_3_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_3_5_addr_reg_1052),
    .ce0(linebuffer_V_3_5_ce0),
    .we0(linebuffer_V_3_5_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_455_p32),
    .q0(linebuffer_V_3_5_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_linebNgs #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linebuffer_V_3_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_3_6_addr_reg_1057),
    .ce0(linebuffer_V_3_6_ce0),
    .we0(linebuffer_V_3_6_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_455_p32),
    .q0(linebuffer_V_3_6_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_linebNgs #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linebuffer_V_3_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_3_7_addr_reg_1062),
    .ce0(linebuffer_V_3_7_ce0),
    .we0(linebuffer_V_3_7_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_455_p32),
    .q0(linebuffer_V_3_7_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_linebNgs #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linebuffer_V_3_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_3_8_addr_reg_1067),
    .ce0(linebuffer_V_3_8_ce0),
    .we0(linebuffer_V_3_8_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_455_p32),
    .q0(linebuffer_V_3_8_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_linebNgs #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linebuffer_V_3_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_3_9_addr_reg_1072),
    .ce0(linebuffer_V_3_9_ce0),
    .we0(linebuffer_V_3_9_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_455_p32),
    .q0(linebuffer_V_3_9_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_linebNgs #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linebuffer_V_3_10_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_3_10_addr_reg_1007),
    .ce0(linebuffer_V_3_10_ce0),
    .we0(linebuffer_V_3_10_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_455_p32),
    .q0(linebuffer_V_3_10_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_linebNgs #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linebuffer_V_3_11_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_3_11_addr_reg_1012),
    .ce0(linebuffer_V_3_11_ce0),
    .we0(linebuffer_V_3_11_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_455_p32),
    .q0(linebuffer_V_3_11_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_linebNgs #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linebuffer_V_3_12_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_3_12_addr_reg_1017),
    .ce0(linebuffer_V_3_12_ce0),
    .we0(linebuffer_V_3_12_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_455_p32),
    .q0(linebuffer_V_3_12_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_linebNgs #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linebuffer_V_3_13_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_3_13_addr_reg_1022),
    .ce0(linebuffer_V_3_13_ce0),
    .we0(linebuffer_V_3_13_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_455_p32),
    .q0(linebuffer_V_3_13_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_linebNgs #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linebuffer_V_3_14_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_3_14_addr_reg_1027),
    .ce0(linebuffer_V_3_14_ce0),
    .we0(linebuffer_V_3_14_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_455_p32),
    .q0(linebuffer_V_3_14_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_linebNgs #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linebuffer_V_3_15_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_3_15_addr_reg_1032),
    .ce0(linebuffer_V_3_15_ce0),
    .we0(linebuffer_V_3_15_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_455_p32),
    .q0(linebuffer_V_3_15_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_tmpinbjl #(
    .DataWidth( 16 ),
    .AddressRange( 96 ),
    .AddressWidth( 7 ))
tmpinput_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(tmpinput_V_address0),
    .ce0(tmpinput_V_ce0),
    .we0(tmpinput_V_we0),
    .d0(tmpinput_V_d0),
    .q0(tmpinput_V_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln246_fu_575_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        i0_0_i_reg_520 <= 2'd0;
    end else if (((icmp_ln190_fu_748_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        i0_0_i_reg_520 <= i0_1_reg_1103;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i0_0_reg_416 <= 6'd0;
    end else if (((icmp_ln250_fu_605_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        i0_0_reg_416 <= i0_reg_943;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln188_fu_714_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        i11_0_i_reg_553 <= 2'd0;
    end else if (((icmp_ln202_fu_893_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
        i11_0_i_reg_553 <= i1_2_reg_1153;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln191_fu_794_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
        i1_0_i_reg_531 <= i1_1_reg_1121;
    end else if (((icmp_ln188_fu_714_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        i1_0_i_reg_531 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln258_fu_668_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        i1_0_reg_428 <= i1_fu_708_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        i1_0_reg_428 <= 2'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        i22_0_i_reg_564 <= i2_reg_1171;
    end else if (((icmp_ln200_fu_851_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        i22_0_i_reg_564 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln190_fu_748_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        i2_0_i_reg_542 <= 6'd0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        i2_0_i_reg_542 <= i2_1_reg_1135;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        i2_0_reg_440 <= i2_2_reg_1090;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        i2_0_reg_440 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~(ap_phi_mux_i2_0_phi_fu_444_p4 == 5'd14) & ~(ap_phi_mux_i2_0_phi_fu_444_p4 == 5'd13) & ~(ap_phi_mux_i2_0_phi_fu_444_p4 == 5'd12) & ~(ap_phi_mux_i2_0_phi_fu_444_p4 == 5'd11) & ~(ap_phi_mux_i2_0_phi_fu_444_p4 == 5'd10) & ~(ap_phi_mux_i2_0_phi_fu_444_p4 == 5'd9) & ~(ap_phi_mux_i2_0_phi_fu_444_p4 == 5'd8) & ~(ap_phi_mux_i2_0_phi_fu_444_p4 == 5'd7) & ~(ap_phi_mux_i2_0_phi_fu_444_p4 == 5'd6) & ~(ap_phi_mux_i2_0_phi_fu_444_p4 == 5'd5) & ~(ap_phi_mux_i2_0_phi_fu_444_p4 == 5'd4) & ~(ap_phi_mux_i2_0_phi_fu_444_p4 == 5'd3) & ~(ap_phi_mux_i2_0_phi_fu_444_p4 == 5'd2) & ~(ap_phi_mux_i2_0_phi_fu_444_p4 == 5'd1) & ~(ap_phi_mux_i2_0_phi_fu_444_p4 == 5'd0) & (icmp_ln258_fu_668_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        phi_ln203_reg_452 <= linebuffer_V_3_16_load_reg_1082;
    end else if (((i2_0_reg_440 == 5'd14) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_452 <= linebuffer_V_3_15_q0;
    end else if (((i2_0_reg_440 == 5'd13) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_452 <= linebuffer_V_3_14_q0;
    end else if (((i2_0_reg_440 == 5'd12) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_452 <= linebuffer_V_3_13_q0;
    end else if (((i2_0_reg_440 == 5'd11) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_452 <= linebuffer_V_3_12_q0;
    end else if (((i2_0_reg_440 == 5'd10) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_452 <= linebuffer_V_3_11_q0;
    end else if (((i2_0_reg_440 == 5'd9) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_452 <= linebuffer_V_3_10_q0;
    end else if (((i2_0_reg_440 == 5'd8) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_452 <= linebuffer_V_3_9_q0;
    end else if (((i2_0_reg_440 == 5'd7) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_452 <= linebuffer_V_3_8_q0;
    end else if (((i2_0_reg_440 == 5'd6) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_452 <= linebuffer_V_3_7_q0;
    end else if (((i2_0_reg_440 == 5'd5) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_452 <= linebuffer_V_3_6_q0;
    end else if (((i2_0_reg_440 == 5'd4) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_452 <= linebuffer_V_3_5_q0;
    end else if (((i2_0_reg_440 == 5'd3) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_452 <= linebuffer_V_3_4_q0;
    end else if (((i2_0_reg_440 == 5'd2) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_452 <= linebuffer_V_3_3_q0;
    end else if (((i2_0_reg_440 == 5'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_452 <= linebuffer_V_3_2_q0;
    end else if (((i2_0_reg_440 == 5'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_452 <= linebuffer_V_3_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln191_fu_794_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        add_ln192_1_reg_1140 <= add_ln192_1_fu_815_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln188_fu_714_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        add_ln192_reg_1113[6 : 5] <= add_ln192_fu_742_p2[6 : 5];
        zext_ln192_2_reg_1108[5] <= zext_ln192_2_fu_738_p1[5];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln202_fu_893_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        add_ln203_reg_1176 <= add_ln203_fu_917_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        i0_1_reg_1103 <= i0_1_fu_720_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i0_reg_943 <= i0_fu_581_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        i1_1_reg_1121 <= i1_1_fu_754_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        i1_2_reg_1153 <= i1_2_fu_857_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        i2_1_reg_1135 <= i2_1_fu_800_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        i2_2_reg_1090 <= i2_2_fu_674_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        i2_reg_1171 <= i2_fu_899_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln250_fu_605_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        linebuffer_V_3_0_addr_reg_987 <= zext_ln255_1_fu_662_p1;
        linebuffer_V_3_16_addr_reg_992 <= zext_ln255_1_fu_662_p1;
        zext_ln255_1_reg_968[7 : 0] <= zext_ln255_1_fu_662_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        linebuffer_V_3_10_addr_reg_1007 <= zext_ln255_1_reg_968;
        linebuffer_V_3_11_addr_reg_1012 <= zext_ln255_1_reg_968;
        linebuffer_V_3_12_addr_reg_1017 <= zext_ln255_1_reg_968;
        linebuffer_V_3_13_addr_reg_1022 <= zext_ln255_1_reg_968;
        linebuffer_V_3_14_addr_reg_1027 <= zext_ln255_1_reg_968;
        linebuffer_V_3_15_addr_reg_1032 <= zext_ln255_1_reg_968;
        linebuffer_V_3_16_load_reg_1082 <= linebuffer_V_3_16_q0;
        linebuffer_V_3_1_addr_reg_1002 <= zext_ln255_1_reg_968;
        linebuffer_V_3_2_addr_reg_1037 <= zext_ln255_1_reg_968;
        linebuffer_V_3_3_addr_reg_1042 <= zext_ln255_1_reg_968;
        linebuffer_V_3_4_addr_reg_1047 <= zext_ln255_1_reg_968;
        linebuffer_V_3_5_addr_reg_1052 <= zext_ln255_1_reg_968;
        linebuffer_V_3_6_addr_reg_1057 <= zext_ln255_1_reg_968;
        linebuffer_V_3_7_addr_reg_1062 <= zext_ln255_1_reg_968;
        linebuffer_V_3_8_addr_reg_1067 <= zext_ln255_1_reg_968;
        linebuffer_V_3_9_addr_reg_1072 <= zext_ln255_1_reg_968;
        tmp1_V_reg_997 <= tmpinput_V_q0;
        tmp_V_reg_1077 <= linebuffer_V_3_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln190_fu_748_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        sub_ln192_reg_1126[9 : 5] <= sub_ln192_fu_784_p2[9 : 5];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln200_fu_851_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        sub_ln203_reg_1158[8 : 5] <= sub_ln203_fu_883_p2[8 : 5];
        zext_ln202_reg_1163[6 : 5] <= zext_ln202_fu_889_p1[6 : 5];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        zext_ln203_4_reg_953[5 : 0] <= zext_ln203_4_fu_592_p1[5 : 0];
    end
end

always @ (*) begin
    if ((((icmp_ln200_fu_851_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        if ((i2_0_reg_440 == 5'd14)) begin
            ap_phi_mux_phi_ln203_phi_fu_455_p32 = linebuffer_V_3_15_q0;
        end else if ((i2_0_reg_440 == 5'd13)) begin
            ap_phi_mux_phi_ln203_phi_fu_455_p32 = linebuffer_V_3_14_q0;
        end else if ((i2_0_reg_440 == 5'd12)) begin
            ap_phi_mux_phi_ln203_phi_fu_455_p32 = linebuffer_V_3_13_q0;
        end else if ((i2_0_reg_440 == 5'd11)) begin
            ap_phi_mux_phi_ln203_phi_fu_455_p32 = linebuffer_V_3_12_q0;
        end else if ((i2_0_reg_440 == 5'd10)) begin
            ap_phi_mux_phi_ln203_phi_fu_455_p32 = linebuffer_V_3_11_q0;
        end else if ((i2_0_reg_440 == 5'd9)) begin
            ap_phi_mux_phi_ln203_phi_fu_455_p32 = linebuffer_V_3_10_q0;
        end else if ((i2_0_reg_440 == 5'd8)) begin
            ap_phi_mux_phi_ln203_phi_fu_455_p32 = linebuffer_V_3_9_q0;
        end else if ((i2_0_reg_440 == 5'd7)) begin
            ap_phi_mux_phi_ln203_phi_fu_455_p32 = linebuffer_V_3_8_q0;
        end else if ((i2_0_reg_440 == 5'd6)) begin
            ap_phi_mux_phi_ln203_phi_fu_455_p32 = linebuffer_V_3_7_q0;
        end else if ((i2_0_reg_440 == 5'd5)) begin
            ap_phi_mux_phi_ln203_phi_fu_455_p32 = linebuffer_V_3_6_q0;
        end else if ((i2_0_reg_440 == 5'd4)) begin
            ap_phi_mux_phi_ln203_phi_fu_455_p32 = linebuffer_V_3_5_q0;
        end else if ((i2_0_reg_440 == 5'd3)) begin
            ap_phi_mux_phi_ln203_phi_fu_455_p32 = linebuffer_V_3_4_q0;
        end else if ((i2_0_reg_440 == 5'd2)) begin
            ap_phi_mux_phi_ln203_phi_fu_455_p32 = linebuffer_V_3_3_q0;
        end else if ((i2_0_reg_440 == 5'd1)) begin
            ap_phi_mux_phi_ln203_phi_fu_455_p32 = linebuffer_V_3_2_q0;
        end else if ((i2_0_reg_440 == 5'd0)) begin
            ap_phi_mux_phi_ln203_phi_fu_455_p32 = linebuffer_V_3_1_q0;
        end else begin
            ap_phi_mux_phi_ln203_phi_fu_455_p32 = phi_ln203_reg_452;
        end
    end else begin
        ap_phi_mux_phi_ln203_phi_fu_455_p32 = phi_ln203_reg_452;
    end
end

always @ (*) begin
    if (((icmp_ln200_fu_851_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        data_V_ce0 = 1'b1;
    end else begin
        data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        linebuffer_V_3_0_address0 = linebuffer_V_3_0_addr_reg_987;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        linebuffer_V_3_0_address0 = zext_ln255_1_fu_662_p1;
    end else begin
        linebuffer_V_3_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state4))) begin
        linebuffer_V_3_0_ce0 = 1'b1;
    end else begin
        linebuffer_V_3_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_440 == 5'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_3_0_we0 = 1'b1;
    end else begin
        linebuffer_V_3_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_3_10_ce0 = 1'b1;
    end else begin
        linebuffer_V_3_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_440 == 5'd10) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_3_10_we0 = 1'b1;
    end else begin
        linebuffer_V_3_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_3_11_ce0 = 1'b1;
    end else begin
        linebuffer_V_3_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_440 == 5'd11) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_3_11_we0 = 1'b1;
    end else begin
        linebuffer_V_3_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_3_12_ce0 = 1'b1;
    end else begin
        linebuffer_V_3_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_440 == 5'd12) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_3_12_we0 = 1'b1;
    end else begin
        linebuffer_V_3_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_3_13_ce0 = 1'b1;
    end else begin
        linebuffer_V_3_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_440 == 5'd13) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_3_13_we0 = 1'b1;
    end else begin
        linebuffer_V_3_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_3_14_ce0 = 1'b1;
    end else begin
        linebuffer_V_3_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_440 == 5'd14) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_3_14_we0 = 1'b1;
    end else begin
        linebuffer_V_3_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_3_15_ce0 = 1'b1;
    end else begin
        linebuffer_V_3_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(i2_0_reg_440 == 5'd14) & ~(i2_0_reg_440 == 5'd13) & ~(i2_0_reg_440 == 5'd12) & ~(i2_0_reg_440 == 5'd11) & ~(i2_0_reg_440 == 5'd10) & ~(i2_0_reg_440 == 5'd9) & ~(i2_0_reg_440 == 5'd8) & ~(i2_0_reg_440 == 5'd7) & ~(i2_0_reg_440 == 5'd6) & ~(i2_0_reg_440 == 5'd5) & ~(i2_0_reg_440 == 5'd4) & ~(i2_0_reg_440 == 5'd3) & ~(i2_0_reg_440 == 5'd2) & ~(i2_0_reg_440 == 5'd1) & ~(i2_0_reg_440 == 5'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_3_15_we0 = 1'b1;
    end else begin
        linebuffer_V_3_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        linebuffer_V_3_16_address0 = linebuffer_V_3_16_addr_reg_992;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        linebuffer_V_3_16_address0 = zext_ln255_1_fu_662_p1;
    end else begin
        linebuffer_V_3_16_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4))) begin
        linebuffer_V_3_16_ce0 = 1'b1;
    end else begin
        linebuffer_V_3_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln258_fu_668_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_3_16_we0 = 1'b1;
    end else begin
        linebuffer_V_3_16_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_3_1_ce0 = 1'b1;
    end else begin
        linebuffer_V_3_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_440 == 5'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_3_1_we0 = 1'b1;
    end else begin
        linebuffer_V_3_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_3_2_ce0 = 1'b1;
    end else begin
        linebuffer_V_3_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_440 == 5'd2) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_3_2_we0 = 1'b1;
    end else begin
        linebuffer_V_3_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_3_3_ce0 = 1'b1;
    end else begin
        linebuffer_V_3_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_440 == 5'd3) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_3_3_we0 = 1'b1;
    end else begin
        linebuffer_V_3_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_3_4_ce0 = 1'b1;
    end else begin
        linebuffer_V_3_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_440 == 5'd4) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_3_4_we0 = 1'b1;
    end else begin
        linebuffer_V_3_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_3_5_ce0 = 1'b1;
    end else begin
        linebuffer_V_3_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_440 == 5'd5) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_3_5_we0 = 1'b1;
    end else begin
        linebuffer_V_3_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_3_6_ce0 = 1'b1;
    end else begin
        linebuffer_V_3_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_440 == 5'd6) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_3_6_we0 = 1'b1;
    end else begin
        linebuffer_V_3_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_3_7_ce0 = 1'b1;
    end else begin
        linebuffer_V_3_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_440 == 5'd7) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_3_7_we0 = 1'b1;
    end else begin
        linebuffer_V_3_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_3_8_ce0 = 1'b1;
    end else begin
        linebuffer_V_3_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_440 == 5'd8) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_3_8_we0 = 1'b1;
    end else begin
        linebuffer_V_3_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_3_9_ce0 = 1'b1;
    end else begin
        linebuffer_V_3_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_440 == 5'd9) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_3_9_we0 = 1'b1;
    end else begin
        linebuffer_V_3_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        output_V_address0 = zext_ln203_fu_936_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        output_V_address0 = zext_ln192_fu_846_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        output_V_address0 = zext_ln192_1_fu_838_p1;
    end else begin
        output_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        output_V_ce0 = 1'b1;
    end else begin
        output_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        output_V_d0 = tmpinput_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        output_V_d0 = output_V_q0;
    end else begin
        output_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state11))) begin
        output_V_we0 = 1'b1;
    end else begin
        output_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        tmpinput_V_address0 = zext_ln203_9_fu_931_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        tmpinput_V_address0 = zext_ln203_7_fu_703_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmpinput_V_address0 = zext_ln252_1_fu_634_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        tmpinput_V_address0 = tmp_97_fu_596_p3;
    end else begin
        tmpinput_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        tmpinput_V_ce0 = 1'b1;
    end else begin
        tmpinput_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        tmpinput_V_d0 = tmp_V_reg_1077;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        tmpinput_V_d0 = data_V_q0;
    end else begin
        tmpinput_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((icmp_ln258_fu_668_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6)))) begin
        tmpinput_V_we0 = 1'b1;
    end else begin
        tmpinput_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln246_fu_575_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((icmp_ln250_fu_605_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((icmp_ln258_fu_668_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state8 : begin
            if (((icmp_ln188_fu_714_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((icmp_ln190_fu_748_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((icmp_ln191_fu_794_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state12 : begin
            if (((icmp_ln200_fu_851_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state13 : begin
            if (((icmp_ln202_fu_893_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln192_1_fu_815_p2 = (zext_ln192_5_fu_811_p1 + sub_ln192_reg_1126);

assign add_ln192_2_fu_806_p2 = (zext_ln192_2_reg_1108 + zext_ln191_fu_790_p1);

assign add_ln192_3_fu_820_p2 = (add_ln192_reg_1113 + zext_ln191_fu_790_p1);

assign add_ln192_4_fu_829_p2 = (zext_ln192_6_fu_825_p1 + sub_ln192_reg_1126);

assign add_ln192_fu_742_p2 = (7'd32 + zext_ln192_2_fu_738_p1);

assign add_ln203_1_fu_698_p2 = (zext_ln203_4_reg_953 + zext_ln203_5_fu_694_p1);

assign add_ln203_2_fu_926_p2 = (zext_ln202_reg_1163 + zext_ln203_8_fu_922_p1);

assign add_ln203_fu_917_p2 = (sub_ln203_reg_1158 + zext_ln203_6_fu_913_p1);

assign add_ln252_fu_629_p2 = (zext_ln203_4_reg_953 + zext_ln252_fu_625_p1);

assign add_ln255_1_fu_657_p2 = (zext_ln203_4_reg_953 + zext_ln255_fu_653_p1);

assign add_ln255_fu_639_p2 = ($signed(i1_0_reg_428) + $signed(2'd3));

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_phi_mux_i2_0_phi_fu_444_p4 = i2_0_reg_440;

assign data_V_address0 = zext_ln248_fu_587_p1;

assign i0_1_fu_720_p2 = (i0_0_i_reg_520 + 2'd1);

assign i0_fu_581_p2 = (i0_0_reg_416 + 6'd1);

assign i1_1_fu_754_p2 = (i1_0_i_reg_531 + 2'd1);

assign i1_2_fu_857_p2 = (i11_0_i_reg_553 + 2'd1);

assign i1_fu_708_p2 = (i1_0_reg_428 + 2'd1);

assign i2_1_fu_800_p2 = (i2_0_i_reg_542 + 6'd1);

assign i2_2_fu_674_p2 = (i2_0_reg_440 + 5'd1);

assign i2_fu_899_p2 = (i22_0_i_reg_564 + 6'd1);

assign icmp_ln188_fu_714_p2 = ((i0_0_i_reg_520 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln190_fu_748_p2 = ((i1_0_i_reg_531 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln191_fu_794_p2 = ((i2_0_i_reg_542 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln200_fu_851_p2 = ((i11_0_i_reg_553 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln202_fu_893_p2 = ((i22_0_i_reg_564 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln246_fu_575_p2 = ((i0_0_reg_416 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln250_fu_605_p2 = ((i1_0_reg_428 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln258_fu_668_p2 = ((i2_0_reg_440 == 5'd16) ? 1'b1 : 1'b0);

assign or_ln_fu_905_p3 = {{1'd1}, {i22_0_i_reg_564}};

assign sext_ln192_1_fu_834_p1 = $signed(add_ln192_4_fu_829_p2);

assign sext_ln192_fu_843_p1 = $signed(add_ln192_1_reg_1140);

assign shl_ln192_1_fu_760_p3 = {{i1_0_i_reg_531}, {7'd0}};

assign shl_ln192_2_fu_772_p3 = {{i1_0_i_reg_531}, {5'd0}};

assign shl_ln1_fu_863_p3 = {{i11_0_i_reg_553}, {7'd0}};

assign shl_ln203_1_fu_871_p3 = {{i11_0_i_reg_553}, {5'd0}};

assign shl_ln_fu_730_p3 = {{trunc_ln192_fu_726_p1}, {5'd0}};

assign sub_ln192_fu_784_p2 = (zext_ln192_3_fu_768_p1 - zext_ln192_4_fu_780_p1);

assign sub_ln203_fu_883_p2 = (shl_ln1_fu_863_p3 - zext_ln203_3_fu_879_p1);

assign sub_ln265_fu_680_p2 = ($signed(2'd2) - $signed(i1_0_reg_428));

assign tmp_100_fu_645_p3 = {{add_ln255_fu_639_p2}, {5'd0}};

assign tmp_102_fu_686_p3 = {{sub_ln265_fu_680_p2}, {5'd0}};

assign tmp_97_fu_596_p3 = {{58'd1}, {i0_0_reg_416}};

assign tmp_99_fu_617_p3 = {{xor_ln252_fu_611_p2}, {5'd0}};

assign trunc_ln192_fu_726_p1 = i0_0_i_reg_520[0:0];

assign xor_ln252_fu_611_p2 = (i1_0_reg_428 ^ 2'd3);

assign zext_ln191_fu_790_p1 = i2_0_i_reg_542;

assign zext_ln192_1_fu_838_p1 = $unsigned(sext_ln192_1_fu_834_p1);

assign zext_ln192_2_fu_738_p1 = shl_ln_fu_730_p3;

assign zext_ln192_3_fu_768_p1 = shl_ln192_1_fu_760_p3;

assign zext_ln192_4_fu_780_p1 = shl_ln192_2_fu_772_p3;

assign zext_ln192_5_fu_811_p1 = add_ln192_2_fu_806_p2;

assign zext_ln192_6_fu_825_p1 = add_ln192_3_fu_820_p2;

assign zext_ln192_fu_846_p1 = $unsigned(sext_ln192_fu_843_p1);

assign zext_ln202_fu_889_p1 = shl_ln203_1_fu_871_p3;

assign zext_ln203_3_fu_879_p1 = shl_ln203_1_fu_871_p3;

assign zext_ln203_4_fu_592_p1 = i0_0_reg_416;

assign zext_ln203_5_fu_694_p1 = tmp_102_fu_686_p3;

assign zext_ln203_6_fu_913_p1 = or_ln_fu_905_p3;

assign zext_ln203_7_fu_703_p1 = add_ln203_1_fu_698_p2;

assign zext_ln203_8_fu_922_p1 = i22_0_i_reg_564;

assign zext_ln203_9_fu_931_p1 = add_ln203_2_fu_926_p2;

assign zext_ln203_fu_936_p1 = add_ln203_reg_1176;

assign zext_ln248_fu_587_p1 = i0_0_reg_416;

assign zext_ln252_1_fu_634_p1 = add_ln252_fu_629_p2;

assign zext_ln252_fu_625_p1 = tmp_99_fu_617_p3;

assign zext_ln255_1_fu_662_p1 = add_ln255_1_fu_657_p2;

assign zext_ln255_fu_653_p1 = tmp_100_fu_645_p3;

always @ (posedge ap_clk) begin
    zext_ln203_4_reg_953[7:6] <= 2'b00;
    zext_ln255_1_reg_968[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln192_2_reg_1108[4:0] <= 5'b00000;
    zext_ln192_2_reg_1108[6] <= 1'b0;
    add_ln192_reg_1113[4:0] <= 5'b00000;
    sub_ln192_reg_1126[4:0] <= 5'b00000;
    sub_ln203_reg_1158[4:0] <= 5'b00000;
    zext_ln202_reg_1163[4:0] <= 5'b00000;
    zext_ln202_reg_1163[7] <= 1'b0;
end

endmodule //cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s
