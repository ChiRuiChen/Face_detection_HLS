// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module conv_2d_cl_ss_ap_fixed_ap_fixed_16_4_5_3_0_config2_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        data_V_V_dout,
        data_V_V_empty_n,
        data_V_V_read,
        res_V_V_din,
        res_V_V_full_n,
        res_V_V_write
);

parameter    ap_ST_fsm_state1 = 24'd1;
parameter    ap_ST_fsm_state2 = 24'd2;
parameter    ap_ST_fsm_state3 = 24'd4;
parameter    ap_ST_fsm_state4 = 24'd8;
parameter    ap_ST_fsm_pp0_stage0 = 24'd16;
parameter    ap_ST_fsm_state7 = 24'd32;
parameter    ap_ST_fsm_state8 = 24'd64;
parameter    ap_ST_fsm_state9 = 24'd128;
parameter    ap_ST_fsm_state10 = 24'd256;
parameter    ap_ST_fsm_state11 = 24'd512;
parameter    ap_ST_fsm_state12 = 24'd1024;
parameter    ap_ST_fsm_state13 = 24'd2048;
parameter    ap_ST_fsm_state14 = 24'd4096;
parameter    ap_ST_fsm_state15 = 24'd8192;
parameter    ap_ST_fsm_state16 = 24'd16384;
parameter    ap_ST_fsm_state17 = 24'd32768;
parameter    ap_ST_fsm_state18 = 24'd65536;
parameter    ap_ST_fsm_state19 = 24'd131072;
parameter    ap_ST_fsm_state20 = 24'd262144;
parameter    ap_ST_fsm_state21 = 24'd524288;
parameter    ap_ST_fsm_state22 = 24'd1048576;
parameter    ap_ST_fsm_state23 = 24'd2097152;
parameter    ap_ST_fsm_state24 = 24'd4194304;
parameter    ap_ST_fsm_state25 = 24'd8388608;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [15:0] data_V_V_dout;
input   data_V_V_empty_n;
output   data_V_V_read;
output  [15:0] res_V_V_din;
input   res_V_V_full_n;
output   res_V_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg data_V_V_read;
reg res_V_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [23:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg   [4:0] layer_in_V_5_address0;
reg    layer_in_V_5_ce0;
reg    layer_in_V_5_we0;
wire   [15:0] layer_in_V_5_q0;
reg   [31:0] sX_2;
reg   [31:0] sY_2;
reg   [31:0] pY_2;
reg   [31:0] pX_2;
wire   [4:0] w2_V_address0;
reg    w2_V_ce0;
wire   [190:0] w2_V_q0;
reg    data_V_V_blk_n;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln316_fu_1291_p2;
reg    res_V_V_blk_n;
wire    ap_CS_fsm_state24;
reg   [15:0] acc_V_31_0_reg_755;
reg   [15:0] acc_V_30_0_reg_768;
reg   [15:0] acc_V_29_0_reg_781;
reg   [15:0] acc_V_28_0_reg_794;
reg   [15:0] acc_V_27_0_reg_807;
reg   [15:0] acc_V_26_0_reg_820;
reg   [15:0] acc_V_25_0_reg_833;
reg   [15:0] acc_V_24_0_reg_846;
reg   [15:0] acc_V_23_0_reg_859;
reg   [15:0] acc_V_22_0_reg_872;
reg   [15:0] acc_V_21_0_reg_885;
reg   [15:0] acc_V_20_0_reg_898;
reg   [15:0] acc_V_19_0_reg_911;
reg   [15:0] acc_V_18_0_reg_924;
reg   [15:0] acc_V_17_0_reg_937;
reg   [15:0] acc_V_16_0_reg_950;
reg   [15:0] acc_V_15_0_reg_963;
reg   [15:0] acc_V_14_0_reg_976;
reg   [15:0] acc_V_13_0_reg_989;
reg   [15:0] acc_V_12_0_reg_1002;
reg   [15:0] acc_V_11_0_reg_1015;
reg   [15:0] acc_V_10_0_reg_1028;
reg   [15:0] acc_V_9_0_reg_1041;
reg   [15:0] acc_V_8_0_reg_1054;
reg   [15:0] acc_V_7_0_reg_1067;
reg   [15:0] acc_V_6_0_reg_1080;
reg   [15:0] acc_V_5_0_reg_1093;
reg   [15:0] acc_V_4_0_reg_1106;
reg   [15:0] acc_V_3_0_reg_1119;
reg   [15:0] acc_V_2_0_reg_1132;
reg   [15:0] acc_V_1_0_reg_1145;
reg   [15:0] acc_V_0_0_reg_1158;
reg   [4:0] in_index_reg_1171;
reg    ap_block_state1;
wire   [10:0] i_fu_1285_p2;
reg   [10:0] i_reg_2820;
wire    ap_CS_fsm_state2;
wire   [1:0] i1_fu_1297_p2;
reg    ap_block_state3;
reg   [31:0] sX_2_load_reg_2833;
wire    ap_CS_fsm_state4;
wire    grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1204_ap_ready;
wire    grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1204_ap_done;
wire   [0:0] icmp_ln327_fu_1312_p2;
reg   [0:0] icmp_ln327_reg_2838;
reg   [31:0] sY_2_load_reg_2843;
wire   [0:0] icmp_ln327_7_fu_1322_p2;
reg   [0:0] icmp_ln327_7_reg_2848;
reg   [31:0] pY_2_load_reg_2853;
reg   [31:0] pX_2_load_reg_2859;
wire   [0:0] and_ln327_6_fu_1380_p2;
reg   [0:0] and_ln327_6_reg_2865;
wire   [0:0] icmp_ln324_fu_1386_p2;
reg   [0:0] icmp_ln324_reg_2869;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state5_pp0_stage0_iter0;
wire    ap_block_state6_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [4:0] ir_fu_1392_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [15:0] acc_0_V_fu_2145_p2;
reg    ap_enable_reg_pp0_iter1;
wire   [15:0] acc_1_V_fu_2151_p2;
wire   [15:0] acc_2_V_fu_2157_p2;
wire   [15:0] acc_3_V_fu_2163_p2;
wire   [15:0] acc_4_V_fu_2169_p2;
wire   [15:0] acc_5_V_fu_2175_p2;
wire   [15:0] acc_6_V_fu_2181_p2;
wire   [15:0] acc_7_V_fu_2187_p2;
wire   [15:0] acc_8_V_fu_2193_p2;
wire   [15:0] acc_9_V_fu_2199_p2;
wire   [15:0] acc_10_V_fu_2205_p2;
wire   [15:0] acc_11_V_fu_2211_p2;
wire   [15:0] acc_12_V_fu_2217_p2;
wire   [15:0] acc_13_V_fu_2223_p2;
wire   [15:0] acc_14_V_fu_2229_p2;
wire   [15:0] acc_15_V_fu_2235_p2;
wire   [15:0] acc_16_V_fu_2241_p2;
wire   [15:0] acc_17_V_fu_2247_p2;
wire   [15:0] acc_18_V_fu_2253_p2;
wire   [15:0] acc_19_V_fu_2259_p2;
wire   [15:0] acc_20_V_fu_2265_p2;
wire   [15:0] acc_21_V_fu_2271_p2;
wire   [15:0] acc_22_V_fu_2277_p2;
wire   [15:0] acc_23_V_fu_2283_p2;
wire   [15:0] acc_24_V_fu_2289_p2;
wire   [15:0] acc_25_V_fu_2295_p2;
wire   [15:0] acc_26_V_fu_2301_p2;
wire   [15:0] acc_27_V_fu_2307_p2;
wire   [15:0] acc_28_V_fu_2313_p2;
wire   [15:0] acc_29_V_fu_2319_p2;
wire   [15:0] acc_30_V_fu_2325_p2;
wire   [15:0] acc_31_V_fu_2331_p2;
wire   [5:0] i_ic_fu_2343_p2;
reg   [5:0] i_ic_reg_3051;
wire    ap_CS_fsm_state23;
wire   [0:0] icmp_ln339_fu_2337_p2;
wire   [0:0] icmp_ln347_fu_2354_p2;
reg   [0:0] icmp_ln347_reg_3061;
wire   [31:0] select_ln357_fu_2421_p3;
wire   [0:0] icmp_ln351_fu_2400_p2;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state5;
reg   [1:0] tmpdata_V_address0;
reg    tmpdata_V_ce0;
reg    tmpdata_V_we0;
wire   [15:0] tmpdata_V_q0;
reg   [4:0] layer_out_i_address0;
reg    layer_out_i_ce0;
reg    layer_out_i_we0;
reg   [15:0] layer_out_i_d0;
wire   [15:0] layer_out_i_q0;
reg   [4:0] layer_out_i_address1;
reg    layer_out_i_ce1;
reg    layer_out_i_we1;
reg   [15:0] layer_out_i_d1;
wire    grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1204_ap_start;
wire    grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1204_ap_idle;
wire   [1:0] grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1204_data_V_address0;
wire    grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1204_data_V_ce0;
wire   [4:0] grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1204_output_V_address0;
wire    grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1204_output_V_ce0;
wire    grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1204_output_V_we0;
wire   [15:0] grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1204_output_V_d0;
reg   [10:0] i_0_i_reg_733;
wire    ap_CS_fsm_state25;
reg   [1:0] i1_0_i_reg_744;
wire   [0:0] icmp_ln313_fu_1279_p2;
wire    ap_block_pp0_stage0;
reg   [5:0] i_ic_0_i_reg_1182;
wire    ap_CS_fsm_state22;
reg   [31:0] storemerge_i_reg_1193;
reg    grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1204_ap_start_reg;
reg    ap_block_state3_ignore_call0;
wire   [63:0] zext_ln318_fu_1303_p1;
wire   [63:0] zext_ln332_fu_1398_p1;
wire   [63:0] zext_ln341_fu_2349_p1;
wire   [31:0] select_ln362_fu_2375_p3;
wire   [31:0] add_ln355_fu_2405_p2;
wire   [31:0] add_ln360_fu_2359_p2;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state21;
wire   [30:0] tmp_7_fu_1332_p4;
wire   [30:0] tmp_8_fu_1352_p4;
wire   [0:0] icmp_ln327_8_fu_1342_p2;
wire   [0:0] icmp_ln327_9_fu_1362_p2;
wire   [0:0] and_ln327_5_fu_1374_p2;
wire   [0:0] and_ln327_fu_1368_p2;
wire  signed [5:0] trunc_ln332_fu_1404_p1;
wire  signed [20:0] mul_ln1118_fu_2440_p2;
wire  signed [5:0] tmp_111_fu_1425_p4;
wire  signed [20:0] mul_ln1118_99_fu_2447_p2;
wire  signed [5:0] tmp_112_fu_1448_p4;
wire  signed [20:0] mul_ln1118_100_fu_2454_p2;
wire  signed [5:0] tmp_113_fu_1471_p4;
wire  signed [20:0] mul_ln1118_101_fu_2461_p2;
wire  signed [5:0] tmp_114_fu_1494_p4;
wire  signed [20:0] mul_ln1118_102_fu_2468_p2;
wire  signed [5:0] tmp_115_fu_1517_p4;
wire  signed [20:0] mul_ln1118_103_fu_2475_p2;
wire  signed [5:0] tmp_116_fu_1540_p4;
wire  signed [20:0] mul_ln1118_104_fu_2482_p2;
wire  signed [5:0] tmp_117_fu_1563_p4;
wire  signed [20:0] mul_ln1118_105_fu_2489_p2;
wire  signed [5:0] tmp_118_fu_1586_p4;
wire  signed [20:0] mul_ln1118_106_fu_2496_p2;
wire  signed [5:0] tmp_119_fu_1609_p4;
wire  signed [20:0] mul_ln1118_107_fu_2503_p2;
wire  signed [5:0] tmp_120_fu_1632_p4;
wire  signed [20:0] mul_ln1118_108_fu_2510_p2;
wire  signed [5:0] tmp_121_fu_1655_p4;
wire  signed [20:0] mul_ln1118_109_fu_2517_p2;
wire  signed [5:0] tmp_122_fu_1678_p4;
wire  signed [20:0] mul_ln1118_110_fu_2524_p2;
wire  signed [5:0] tmp_123_fu_1701_p4;
wire  signed [20:0] mul_ln1118_111_fu_2531_p2;
wire  signed [5:0] tmp_124_fu_1724_p4;
wire  signed [20:0] mul_ln1118_112_fu_2538_p2;
wire  signed [5:0] tmp_125_fu_1747_p4;
wire  signed [20:0] mul_ln1118_113_fu_2545_p2;
wire  signed [5:0] tmp_126_fu_1770_p4;
wire  signed [20:0] mul_ln1118_114_fu_2552_p2;
wire  signed [5:0] tmp_127_fu_1793_p4;
wire  signed [20:0] mul_ln1118_115_fu_2559_p2;
wire  signed [5:0] tmp_128_fu_1816_p4;
wire  signed [20:0] mul_ln1118_116_fu_2566_p2;
wire  signed [5:0] tmp_129_fu_1839_p4;
wire  signed [20:0] mul_ln1118_117_fu_2573_p2;
wire  signed [5:0] tmp_130_fu_1862_p4;
wire  signed [20:0] mul_ln1118_118_fu_2580_p2;
wire  signed [5:0] tmp_131_fu_1885_p4;
wire  signed [20:0] mul_ln1118_119_fu_2587_p2;
wire  signed [5:0] tmp_132_fu_1908_p4;
wire  signed [20:0] mul_ln1118_120_fu_2594_p2;
wire  signed [5:0] tmp_133_fu_1931_p4;
wire  signed [20:0] mul_ln1118_121_fu_2601_p2;
wire  signed [5:0] tmp_134_fu_1954_p4;
wire  signed [20:0] mul_ln1118_122_fu_2608_p2;
wire  signed [5:0] tmp_135_fu_1977_p4;
wire  signed [20:0] mul_ln1118_123_fu_2615_p2;
wire  signed [5:0] tmp_136_fu_2000_p4;
wire  signed [20:0] mul_ln1118_124_fu_2622_p2;
wire  signed [5:0] tmp_137_fu_2023_p4;
wire  signed [20:0] mul_ln1118_125_fu_2629_p2;
wire  signed [5:0] tmp_138_fu_2046_p4;
wire  signed [20:0] mul_ln1118_126_fu_2636_p2;
wire  signed [5:0] tmp_139_fu_2069_p4;
wire  signed [20:0] mul_ln1118_127_fu_2643_p2;
wire  signed [5:0] tmp_140_fu_2092_p4;
wire  signed [20:0] mul_ln1118_128_fu_2650_p2;
wire   [4:0] tmp_4_fu_2115_p4;
wire  signed [4:0] mul_ln1118_129_fu_2129_p0;
wire  signed [15:0] mul_ln1118_129_fu_2129_p1;
wire  signed [20:0] sext_ln1116_cast_fu_1408_p1;
wire   [20:0] mul_ln1118_129_fu_2129_p2;
wire   [15:0] trunc_ln_fu_1416_p4;
wire   [15:0] trunc_ln708_1_fu_1439_p4;
wire   [15:0] trunc_ln708_2_fu_1462_p4;
wire   [15:0] trunc_ln708_3_fu_1485_p4;
wire   [15:0] trunc_ln708_4_fu_1508_p4;
wire   [15:0] trunc_ln708_5_fu_1531_p4;
wire   [15:0] trunc_ln708_6_fu_1554_p4;
wire   [15:0] trunc_ln708_7_fu_1577_p4;
wire   [15:0] trunc_ln708_8_fu_1600_p4;
wire   [15:0] trunc_ln708_9_fu_1623_p4;
wire   [15:0] trunc_ln708_10_fu_1646_p4;
wire   [15:0] trunc_ln708_11_fu_1669_p4;
wire   [15:0] trunc_ln708_12_fu_1692_p4;
wire   [15:0] trunc_ln708_13_fu_1715_p4;
wire   [15:0] trunc_ln708_14_fu_1738_p4;
wire   [15:0] trunc_ln708_15_fu_1761_p4;
wire   [15:0] trunc_ln708_16_fu_1784_p4;
wire   [15:0] trunc_ln708_17_fu_1807_p4;
wire   [15:0] trunc_ln708_18_fu_1830_p4;
wire   [15:0] trunc_ln708_19_fu_1853_p4;
wire   [15:0] trunc_ln708_20_fu_1876_p4;
wire   [15:0] trunc_ln708_21_fu_1899_p4;
wire   [15:0] trunc_ln708_22_fu_1922_p4;
wire   [15:0] trunc_ln708_23_fu_1945_p4;
wire   [15:0] trunc_ln708_24_fu_1968_p4;
wire   [15:0] trunc_ln708_25_fu_1991_p4;
wire   [15:0] trunc_ln708_26_fu_2014_p4;
wire   [15:0] trunc_ln708_27_fu_2037_p4;
wire   [15:0] trunc_ln708_28_fu_2060_p4;
wire   [15:0] trunc_ln708_29_fu_2083_p4;
wire   [15:0] trunc_ln708_30_fu_2106_p4;
wire   [15:0] trunc_ln708_31_fu_2135_p4;
wire   [31:0] add_ln362_fu_2370_p2;
wire   [31:0] add_ln357_fu_2416_p2;
wire  signed [15:0] mul_ln1118_fu_2440_p1;
wire  signed [15:0] mul_ln1118_99_fu_2447_p1;
wire  signed [15:0] mul_ln1118_100_fu_2454_p1;
wire  signed [15:0] mul_ln1118_101_fu_2461_p1;
wire  signed [15:0] mul_ln1118_102_fu_2468_p1;
wire  signed [15:0] mul_ln1118_103_fu_2475_p1;
wire  signed [15:0] mul_ln1118_104_fu_2482_p1;
wire  signed [15:0] mul_ln1118_105_fu_2489_p1;
wire  signed [15:0] mul_ln1118_106_fu_2496_p1;
wire  signed [15:0] mul_ln1118_107_fu_2503_p1;
wire  signed [15:0] mul_ln1118_108_fu_2510_p1;
wire  signed [15:0] mul_ln1118_109_fu_2517_p1;
wire  signed [15:0] mul_ln1118_110_fu_2524_p1;
wire  signed [15:0] mul_ln1118_111_fu_2531_p1;
wire  signed [15:0] mul_ln1118_112_fu_2538_p1;
wire  signed [15:0] mul_ln1118_113_fu_2545_p1;
wire  signed [15:0] mul_ln1118_114_fu_2552_p1;
wire  signed [15:0] mul_ln1118_115_fu_2559_p1;
wire  signed [15:0] mul_ln1118_116_fu_2566_p1;
wire  signed [15:0] mul_ln1118_117_fu_2573_p1;
wire  signed [15:0] mul_ln1118_118_fu_2580_p1;
wire  signed [15:0] mul_ln1118_119_fu_2587_p1;
wire  signed [15:0] mul_ln1118_120_fu_2594_p1;
wire  signed [15:0] mul_ln1118_121_fu_2601_p1;
wire  signed [15:0] mul_ln1118_122_fu_2608_p1;
wire  signed [15:0] mul_ln1118_123_fu_2615_p1;
wire  signed [15:0] mul_ln1118_124_fu_2622_p1;
wire  signed [15:0] mul_ln1118_125_fu_2629_p1;
wire  signed [15:0] mul_ln1118_126_fu_2636_p1;
wire  signed [15:0] mul_ln1118_127_fu_2643_p1;
wire  signed [15:0] mul_ln1118_128_fu_2650_p1;
reg   [23:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_1025;
reg    ap_condition_1027;
reg    ap_condition_405;
reg    ap_condition_534;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 24'd1;
#0 sX_2 = 32'd0;
#0 sY_2 = 32'd0;
#0 pY_2 = 32'd0;
#0 pX_2 = 32'd0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1204_ap_start_reg = 1'b0;
end

conv_2d_cl_ss_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_layeKfY #(
    .DataWidth( 16 ),
    .AddressRange( 27 ),
    .AddressWidth( 5 ))
layer_in_V_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer_in_V_5_address0),
    .ce0(layer_in_V_5_ce0),
    .we0(layer_in_V_5_we0),
    .d0(grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1204_output_V_d0),
    .q0(layer_in_V_5_q0)
);

conv_2d_cl_ss_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_w2_V #(
    .DataWidth( 191 ),
    .AddressRange( 27 ),
    .AddressWidth( 5 ))
w2_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(w2_V_address0),
    .ce0(w2_V_ce0),
    .q0(w2_V_q0)
);

conv_2d_cl_ss_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_tmpdLf8 #(
    .DataWidth( 16 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
tmpdata_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(tmpdata_V_address0),
    .ce0(tmpdata_V_ce0),
    .we0(tmpdata_V_we0),
    .d0(data_V_V_dout),
    .q0(tmpdata_V_q0)
);

conv_2d_cl_ss_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_layeMgi #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
layer_out_i_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer_out_i_address0),
    .ce0(layer_out_i_ce0),
    .we0(layer_out_i_we0),
    .d0(layer_out_i_d0),
    .q0(layer_out_i_q0),
    .address1(layer_out_i_address1),
    .ce1(layer_out_i_ce1),
    .we1(layer_out_i_we1),
    .d1(layer_out_i_d1)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1204(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1204_ap_start),
    .ap_done(grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1204_ap_done),
    .ap_idle(grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1204_ap_idle),
    .ap_ready(grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1204_ap_ready),
    .data_V_address0(grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1204_data_V_address0),
    .data_V_ce0(grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1204_data_V_ce0),
    .data_V_q0(tmpdata_V_q0),
    .output_V_address0(grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1204_output_V_address0),
    .output_V_ce0(grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1204_output_V_ce0),
    .output_V_we0(grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1204_output_V_we0),
    .output_V_d0(grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1204_output_V_d0),
    .output_V_q0(layer_in_V_5_q0)
);

myproject_mul_mul_6s_16s_21_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 21 ))
myproject_mul_mul_6s_16s_21_1_1_U8(
    .din0(trunc_ln332_fu_1404_p1),
    .din1(mul_ln1118_fu_2440_p1),
    .dout(mul_ln1118_fu_2440_p2)
);

myproject_mul_mul_6s_16s_21_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 21 ))
myproject_mul_mul_6s_16s_21_1_1_U9(
    .din0(tmp_111_fu_1425_p4),
    .din1(mul_ln1118_99_fu_2447_p1),
    .dout(mul_ln1118_99_fu_2447_p2)
);

myproject_mul_mul_6s_16s_21_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 21 ))
myproject_mul_mul_6s_16s_21_1_1_U10(
    .din0(tmp_112_fu_1448_p4),
    .din1(mul_ln1118_100_fu_2454_p1),
    .dout(mul_ln1118_100_fu_2454_p2)
);

myproject_mul_mul_6s_16s_21_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 21 ))
myproject_mul_mul_6s_16s_21_1_1_U11(
    .din0(tmp_113_fu_1471_p4),
    .din1(mul_ln1118_101_fu_2461_p1),
    .dout(mul_ln1118_101_fu_2461_p2)
);

myproject_mul_mul_6s_16s_21_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 21 ))
myproject_mul_mul_6s_16s_21_1_1_U12(
    .din0(tmp_114_fu_1494_p4),
    .din1(mul_ln1118_102_fu_2468_p1),
    .dout(mul_ln1118_102_fu_2468_p2)
);

myproject_mul_mul_6s_16s_21_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 21 ))
myproject_mul_mul_6s_16s_21_1_1_U13(
    .din0(tmp_115_fu_1517_p4),
    .din1(mul_ln1118_103_fu_2475_p1),
    .dout(mul_ln1118_103_fu_2475_p2)
);

myproject_mul_mul_6s_16s_21_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 21 ))
myproject_mul_mul_6s_16s_21_1_1_U14(
    .din0(tmp_116_fu_1540_p4),
    .din1(mul_ln1118_104_fu_2482_p1),
    .dout(mul_ln1118_104_fu_2482_p2)
);

myproject_mul_mul_6s_16s_21_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 21 ))
myproject_mul_mul_6s_16s_21_1_1_U15(
    .din0(tmp_117_fu_1563_p4),
    .din1(mul_ln1118_105_fu_2489_p1),
    .dout(mul_ln1118_105_fu_2489_p2)
);

myproject_mul_mul_6s_16s_21_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 21 ))
myproject_mul_mul_6s_16s_21_1_1_U16(
    .din0(tmp_118_fu_1586_p4),
    .din1(mul_ln1118_106_fu_2496_p1),
    .dout(mul_ln1118_106_fu_2496_p2)
);

myproject_mul_mul_6s_16s_21_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 21 ))
myproject_mul_mul_6s_16s_21_1_1_U17(
    .din0(tmp_119_fu_1609_p4),
    .din1(mul_ln1118_107_fu_2503_p1),
    .dout(mul_ln1118_107_fu_2503_p2)
);

myproject_mul_mul_6s_16s_21_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 21 ))
myproject_mul_mul_6s_16s_21_1_1_U18(
    .din0(tmp_120_fu_1632_p4),
    .din1(mul_ln1118_108_fu_2510_p1),
    .dout(mul_ln1118_108_fu_2510_p2)
);

myproject_mul_mul_6s_16s_21_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 21 ))
myproject_mul_mul_6s_16s_21_1_1_U19(
    .din0(tmp_121_fu_1655_p4),
    .din1(mul_ln1118_109_fu_2517_p1),
    .dout(mul_ln1118_109_fu_2517_p2)
);

myproject_mul_mul_6s_16s_21_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 21 ))
myproject_mul_mul_6s_16s_21_1_1_U20(
    .din0(tmp_122_fu_1678_p4),
    .din1(mul_ln1118_110_fu_2524_p1),
    .dout(mul_ln1118_110_fu_2524_p2)
);

myproject_mul_mul_6s_16s_21_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 21 ))
myproject_mul_mul_6s_16s_21_1_1_U21(
    .din0(tmp_123_fu_1701_p4),
    .din1(mul_ln1118_111_fu_2531_p1),
    .dout(mul_ln1118_111_fu_2531_p2)
);

myproject_mul_mul_6s_16s_21_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 21 ))
myproject_mul_mul_6s_16s_21_1_1_U22(
    .din0(tmp_124_fu_1724_p4),
    .din1(mul_ln1118_112_fu_2538_p1),
    .dout(mul_ln1118_112_fu_2538_p2)
);

myproject_mul_mul_6s_16s_21_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 21 ))
myproject_mul_mul_6s_16s_21_1_1_U23(
    .din0(tmp_125_fu_1747_p4),
    .din1(mul_ln1118_113_fu_2545_p1),
    .dout(mul_ln1118_113_fu_2545_p2)
);

myproject_mul_mul_6s_16s_21_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 21 ))
myproject_mul_mul_6s_16s_21_1_1_U24(
    .din0(tmp_126_fu_1770_p4),
    .din1(mul_ln1118_114_fu_2552_p1),
    .dout(mul_ln1118_114_fu_2552_p2)
);

myproject_mul_mul_6s_16s_21_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 21 ))
myproject_mul_mul_6s_16s_21_1_1_U25(
    .din0(tmp_127_fu_1793_p4),
    .din1(mul_ln1118_115_fu_2559_p1),
    .dout(mul_ln1118_115_fu_2559_p2)
);

myproject_mul_mul_6s_16s_21_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 21 ))
myproject_mul_mul_6s_16s_21_1_1_U26(
    .din0(tmp_128_fu_1816_p4),
    .din1(mul_ln1118_116_fu_2566_p1),
    .dout(mul_ln1118_116_fu_2566_p2)
);

myproject_mul_mul_6s_16s_21_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 21 ))
myproject_mul_mul_6s_16s_21_1_1_U27(
    .din0(tmp_129_fu_1839_p4),
    .din1(mul_ln1118_117_fu_2573_p1),
    .dout(mul_ln1118_117_fu_2573_p2)
);

myproject_mul_mul_6s_16s_21_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 21 ))
myproject_mul_mul_6s_16s_21_1_1_U28(
    .din0(tmp_130_fu_1862_p4),
    .din1(mul_ln1118_118_fu_2580_p1),
    .dout(mul_ln1118_118_fu_2580_p2)
);

myproject_mul_mul_6s_16s_21_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 21 ))
myproject_mul_mul_6s_16s_21_1_1_U29(
    .din0(tmp_131_fu_1885_p4),
    .din1(mul_ln1118_119_fu_2587_p1),
    .dout(mul_ln1118_119_fu_2587_p2)
);

myproject_mul_mul_6s_16s_21_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 21 ))
myproject_mul_mul_6s_16s_21_1_1_U30(
    .din0(tmp_132_fu_1908_p4),
    .din1(mul_ln1118_120_fu_2594_p1),
    .dout(mul_ln1118_120_fu_2594_p2)
);

myproject_mul_mul_6s_16s_21_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 21 ))
myproject_mul_mul_6s_16s_21_1_1_U31(
    .din0(tmp_133_fu_1931_p4),
    .din1(mul_ln1118_121_fu_2601_p1),
    .dout(mul_ln1118_121_fu_2601_p2)
);

myproject_mul_mul_6s_16s_21_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 21 ))
myproject_mul_mul_6s_16s_21_1_1_U32(
    .din0(tmp_134_fu_1954_p4),
    .din1(mul_ln1118_122_fu_2608_p1),
    .dout(mul_ln1118_122_fu_2608_p2)
);

myproject_mul_mul_6s_16s_21_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 21 ))
myproject_mul_mul_6s_16s_21_1_1_U33(
    .din0(tmp_135_fu_1977_p4),
    .din1(mul_ln1118_123_fu_2615_p1),
    .dout(mul_ln1118_123_fu_2615_p2)
);

myproject_mul_mul_6s_16s_21_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 21 ))
myproject_mul_mul_6s_16s_21_1_1_U34(
    .din0(tmp_136_fu_2000_p4),
    .din1(mul_ln1118_124_fu_2622_p1),
    .dout(mul_ln1118_124_fu_2622_p2)
);

myproject_mul_mul_6s_16s_21_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 21 ))
myproject_mul_mul_6s_16s_21_1_1_U35(
    .din0(tmp_137_fu_2023_p4),
    .din1(mul_ln1118_125_fu_2629_p1),
    .dout(mul_ln1118_125_fu_2629_p2)
);

myproject_mul_mul_6s_16s_21_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 21 ))
myproject_mul_mul_6s_16s_21_1_1_U36(
    .din0(tmp_138_fu_2046_p4),
    .din1(mul_ln1118_126_fu_2636_p1),
    .dout(mul_ln1118_126_fu_2636_p2)
);

myproject_mul_mul_6s_16s_21_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 21 ))
myproject_mul_mul_6s_16s_21_1_1_U37(
    .din0(tmp_139_fu_2069_p4),
    .din1(mul_ln1118_127_fu_2643_p1),
    .dout(mul_ln1118_127_fu_2643_p2)
);

myproject_mul_mul_6s_16s_21_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 21 ))
myproject_mul_mul_6s_16s_21_1_1_U38(
    .din0(tmp_140_fu_2092_p4),
    .din1(mul_ln1118_128_fu_2650_p1),
    .dout(mul_ln1118_128_fu_2650_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((icmp_ln313_fu_1279_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state5) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'd1 == and_ln327_6_fu_1380_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1204_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state5))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state5);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'd1 == and_ln327_6_fu_1380_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1204_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1204_ap_start_reg <= 1'b0;
    end else begin
        if ((~((icmp_ln316_fu_1291_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln316_fu_1291_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
            grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1204_ap_start_reg <= 1'b1;
        end else if ((grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1204_ap_ready == 1'b1)) begin
            grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1204_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2869 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_0_0_reg_1158 <= acc_0_V_fu_2145_p2;
    end else if (((1'd1 == and_ln327_6_fu_1380_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1204_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_0_0_reg_1158 <= 16'd256;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2869 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_10_0_reg_1028 <= acc_10_V_fu_2205_p2;
    end else if (((1'd1 == and_ln327_6_fu_1380_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1204_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_10_0_reg_1028 <= 16'd128;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2869 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_11_0_reg_1015 <= acc_11_V_fu_2211_p2;
    end else if (((1'd1 == and_ln327_6_fu_1380_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1204_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_11_0_reg_1015 <= 16'd128;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2869 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_12_0_reg_1002 <= acc_12_V_fu_2217_p2;
    end else if (((1'd1 == and_ln327_6_fu_1380_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1204_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_12_0_reg_1002 <= 16'd256;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2869 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_13_0_reg_989 <= acc_13_V_fu_2223_p2;
    end else if (((1'd1 == and_ln327_6_fu_1380_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1204_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_13_0_reg_989 <= 16'd256;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2869 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_14_0_reg_976 <= acc_14_V_fu_2229_p2;
    end else if (((1'd1 == and_ln327_6_fu_1380_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1204_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_14_0_reg_976 <= 16'd256;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2869 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_15_0_reg_963 <= acc_15_V_fu_2235_p2;
    end else if (((1'd1 == and_ln327_6_fu_1380_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1204_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_15_0_reg_963 <= 16'd256;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2869 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_16_0_reg_950 <= acc_16_V_fu_2241_p2;
    end else if (((1'd1 == and_ln327_6_fu_1380_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1204_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_16_0_reg_950 <= 16'd65408;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2869 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_17_0_reg_937 <= acc_17_V_fu_2247_p2;
    end else if (((1'd1 == and_ln327_6_fu_1380_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1204_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_17_0_reg_937 <= 16'd128;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2869 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_18_0_reg_924 <= acc_18_V_fu_2253_p2;
    end else if (((1'd1 == and_ln327_6_fu_1380_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1204_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_18_0_reg_924 <= 16'd128;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2869 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_19_0_reg_911 <= acc_19_V_fu_2259_p2;
    end else if (((1'd1 == and_ln327_6_fu_1380_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1204_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_19_0_reg_911 <= 16'd256;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2869 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_1_0_reg_1145 <= acc_1_V_fu_2151_p2;
    end else if (((1'd1 == and_ln327_6_fu_1380_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1204_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_1_0_reg_1145 <= 16'd128;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2869 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_20_0_reg_898 <= acc_20_V_fu_2265_p2;
    end else if (((1'd1 == and_ln327_6_fu_1380_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1204_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_20_0_reg_898 <= 16'd128;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2869 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_21_0_reg_885 <= acc_21_V_fu_2271_p2;
    end else if (((1'd1 == and_ln327_6_fu_1380_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1204_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_21_0_reg_885 <= 16'd256;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2869 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_22_0_reg_872 <= acc_22_V_fu_2277_p2;
    end else if (((1'd1 == and_ln327_6_fu_1380_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1204_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_22_0_reg_872 <= 16'd128;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2869 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_23_0_reg_859 <= acc_23_V_fu_2283_p2;
    end else if (((1'd1 == and_ln327_6_fu_1380_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1204_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_23_0_reg_859 <= 16'd256;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2869 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_24_0_reg_846 <= acc_24_V_fu_2289_p2;
    end else if (((1'd1 == and_ln327_6_fu_1380_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1204_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_24_0_reg_846 <= 16'd65152;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2869 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_25_0_reg_833 <= acc_25_V_fu_2295_p2;
    end else if (((1'd1 == and_ln327_6_fu_1380_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1204_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_25_0_reg_833 <= 16'd256;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2869 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_26_0_reg_820 <= acc_26_V_fu_2301_p2;
    end else if (((1'd1 == and_ln327_6_fu_1380_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1204_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_26_0_reg_820 <= 16'd65280;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2869 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_27_0_reg_807 <= acc_27_V_fu_2307_p2;
    end else if (((1'd1 == and_ln327_6_fu_1380_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1204_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_27_0_reg_807 <= 16'd256;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2869 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_28_0_reg_794 <= acc_28_V_fu_2313_p2;
    end else if (((1'd1 == and_ln327_6_fu_1380_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1204_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_28_0_reg_794 <= 16'd128;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2869 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_29_0_reg_781 <= acc_29_V_fu_2319_p2;
    end else if (((1'd1 == and_ln327_6_fu_1380_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1204_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_29_0_reg_781 <= 16'd65408;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2869 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_2_0_reg_1132 <= acc_2_V_fu_2157_p2;
    end else if (((1'd1 == and_ln327_6_fu_1380_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1204_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_2_0_reg_1132 <= 16'd128;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2869 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_30_0_reg_768 <= acc_30_V_fu_2325_p2;
    end else if (((1'd1 == and_ln327_6_fu_1380_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1204_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_30_0_reg_768 <= 16'd256;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2869 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_31_0_reg_755 <= acc_31_V_fu_2331_p2;
    end else if (((1'd1 == and_ln327_6_fu_1380_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1204_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_31_0_reg_755 <= 16'd384;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2869 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_3_0_reg_1119 <= acc_3_V_fu_2163_p2;
    end else if (((1'd1 == and_ln327_6_fu_1380_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1204_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_3_0_reg_1119 <= 16'd128;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2869 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_4_0_reg_1106 <= acc_4_V_fu_2169_p2;
    end else if (((1'd1 == and_ln327_6_fu_1380_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1204_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_4_0_reg_1106 <= 16'd256;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2869 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_5_0_reg_1093 <= acc_5_V_fu_2175_p2;
    end else if (((1'd1 == and_ln327_6_fu_1380_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1204_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_5_0_reg_1093 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2869 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_6_0_reg_1080 <= acc_6_V_fu_2181_p2;
    end else if (((1'd1 == and_ln327_6_fu_1380_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1204_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_6_0_reg_1080 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2869 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_7_0_reg_1067 <= acc_7_V_fu_2187_p2;
    end else if (((1'd1 == and_ln327_6_fu_1380_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1204_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_7_0_reg_1067 <= 16'd128;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2869 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_8_0_reg_1054 <= acc_8_V_fu_2193_p2;
    end else if (((1'd1 == and_ln327_6_fu_1380_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1204_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_8_0_reg_1054 <= 16'd512;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2869 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_9_0_reg_1041 <= acc_9_V_fu_2199_p2;
    end else if (((1'd1 == and_ln327_6_fu_1380_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1204_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_9_0_reg_1041 <= 16'd512;
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln316_fu_1291_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln316_fu_1291_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        i1_0_i_reg_744 <= i1_fu_1297_p2;
    end else if (((icmp_ln313_fu_1279_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        i1_0_i_reg_744 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        i_0_i_reg_733 <= i_reg_2820;
    end else if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_i_reg_733 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((res_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state24))) begin
        i_ic_0_i_reg_1182 <= i_ic_reg_3051;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        i_ic_0_i_reg_1182 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_fu_1386_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_index_reg_1171 <= ir_fu_1392_p2;
    end else if (((1'd1 == and_ln327_6_fu_1380_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1204_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        in_index_reg_1171 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        if ((1'b1 == ap_condition_1027)) begin
            pX_2 <= 32'd0;
        end else if ((1'b1 == ap_condition_1025)) begin
            pX_2 <= add_ln360_fu_2359_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        if ((1'b1 == ap_condition_534)) begin
            pY_2 <= 32'd0;
        end else if ((1'b1 == ap_condition_405)) begin
            pY_2 <= add_ln355_fu_2405_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        if ((1'b1 == ap_condition_1027)) begin
            sX_2 <= 32'd0;
        end else if ((1'b1 == ap_condition_1025)) begin
            sX_2 <= select_ln362_fu_2375_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        if ((1'b1 == ap_condition_534)) begin
            storemerge_i_reg_1193 <= 32'd0;
        end else if ((1'b1 == ap_condition_405)) begin
            storemerge_i_reg_1193 <= select_ln357_fu_2421_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1204_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        and_ln327_6_reg_2865 <= and_ln327_6_fu_1380_p2;
        icmp_ln327_7_reg_2848 <= icmp_ln327_7_fu_1322_p2;
        icmp_ln327_reg_2838 <= icmp_ln327_fu_1312_p2;
        pX_2_load_reg_2859 <= pX_2;
        pY_2_load_reg_2853 <= pY_2;
        sX_2_load_reg_2833 <= sX_2;
        sY_2_load_reg_2843 <= sY_2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln327_6_reg_2865) & (1'b1 == ap_CS_fsm_state23))) begin
        i_ic_reg_3051 <= i_ic_fu_2343_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_reg_2820 <= i_fu_1285_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln324_reg_2869 <= icmp_ln324_fu_1386_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state23) & ((1'd0 == and_ln327_6_reg_2865) | (icmp_ln339_fu_2337_p2 == 1'd1)))) begin
        icmp_ln347_reg_3061 <= icmp_ln347_fu_2354_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln347_reg_3061 == 1'd1) & (1'b1 == ap_CS_fsm_state25))) begin
        sY_2 <= storemerge_i_reg_1193;
    end
end

always @ (*) begin
    if ((icmp_ln324_fu_1386_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state5 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state5 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln313_fu_1279_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln316_fu_1291_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        data_V_V_blk_n = data_V_V_empty_n;
    end else begin
        data_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((icmp_ln316_fu_1291_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln316_fu_1291_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        data_V_V_read = 1'b1;
    end else begin
        data_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln313_fu_1279_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer_in_V_5_address0 = zext_ln332_fu_1398_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        layer_in_V_5_address0 = grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1204_output_V_address0;
    end else begin
        layer_in_V_5_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer_in_V_5_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        layer_in_V_5_ce0 = grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1204_output_V_ce0;
    end else begin
        layer_in_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        layer_in_V_5_we0 = grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1204_output_V_we0;
    end else begin
        layer_in_V_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        layer_out_i_address0 = zext_ln341_fu_2349_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        layer_out_i_address0 = 64'd30;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        layer_out_i_address0 = 64'd28;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        layer_out_i_address0 = 64'd26;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        layer_out_i_address0 = 64'd24;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        layer_out_i_address0 = 64'd22;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        layer_out_i_address0 = 64'd20;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        layer_out_i_address0 = 64'd18;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        layer_out_i_address0 = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        layer_out_i_address0 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        layer_out_i_address0 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        layer_out_i_address0 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        layer_out_i_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        layer_out_i_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        layer_out_i_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        layer_out_i_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        layer_out_i_address0 = 64'd0;
    end else begin
        layer_out_i_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        layer_out_i_address1 = 64'd31;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        layer_out_i_address1 = 64'd29;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        layer_out_i_address1 = 64'd27;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        layer_out_i_address1 = 64'd25;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        layer_out_i_address1 = 64'd23;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        layer_out_i_address1 = 64'd21;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        layer_out_i_address1 = 64'd19;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        layer_out_i_address1 = 64'd17;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        layer_out_i_address1 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        layer_out_i_address1 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        layer_out_i_address1 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        layer_out_i_address1 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        layer_out_i_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        layer_out_i_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        layer_out_i_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        layer_out_i_address1 = 64'd1;
    end else begin
        layer_out_i_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        layer_out_i_ce0 = 1'b1;
    end else begin
        layer_out_i_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        layer_out_i_ce1 = 1'b1;
    end else begin
        layer_out_i_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        layer_out_i_d0 = acc_V_30_0_reg_768;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        layer_out_i_d0 = acc_V_28_0_reg_794;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        layer_out_i_d0 = acc_V_26_0_reg_820;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        layer_out_i_d0 = acc_V_24_0_reg_846;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        layer_out_i_d0 = acc_V_22_0_reg_872;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        layer_out_i_d0 = acc_V_20_0_reg_898;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        layer_out_i_d0 = acc_V_18_0_reg_924;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        layer_out_i_d0 = acc_V_16_0_reg_950;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        layer_out_i_d0 = acc_V_14_0_reg_976;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        layer_out_i_d0 = acc_V_12_0_reg_1002;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        layer_out_i_d0 = acc_V_10_0_reg_1028;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        layer_out_i_d0 = acc_V_8_0_reg_1054;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        layer_out_i_d0 = acc_V_6_0_reg_1080;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        layer_out_i_d0 = acc_V_4_0_reg_1106;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        layer_out_i_d0 = acc_V_2_0_reg_1132;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        layer_out_i_d0 = acc_V_0_0_reg_1158;
    end else begin
        layer_out_i_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        layer_out_i_d1 = acc_V_31_0_reg_755;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        layer_out_i_d1 = acc_V_29_0_reg_781;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        layer_out_i_d1 = acc_V_27_0_reg_807;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        layer_out_i_d1 = acc_V_25_0_reg_833;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        layer_out_i_d1 = acc_V_23_0_reg_859;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        layer_out_i_d1 = acc_V_21_0_reg_885;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        layer_out_i_d1 = acc_V_19_0_reg_911;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        layer_out_i_d1 = acc_V_17_0_reg_937;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        layer_out_i_d1 = acc_V_15_0_reg_963;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        layer_out_i_d1 = acc_V_13_0_reg_989;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        layer_out_i_d1 = acc_V_11_0_reg_1015;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        layer_out_i_d1 = acc_V_9_0_reg_1041;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        layer_out_i_d1 = acc_V_7_0_reg_1067;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        layer_out_i_d1 = acc_V_5_0_reg_1093;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        layer_out_i_d1 = acc_V_3_0_reg_1119;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        layer_out_i_d1 = acc_V_1_0_reg_1145;
    end else begin
        layer_out_i_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        layer_out_i_we0 = 1'b1;
    end else begin
        layer_out_i_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        layer_out_i_we1 = 1'b1;
    end else begin
        layer_out_i_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        res_V_V_blk_n = res_V_V_full_n;
    end else begin
        res_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((res_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state24))) begin
        res_V_V_write = 1'b1;
    end else begin
        res_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln316_fu_1291_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        tmpdata_V_address0 = zext_ln318_fu_1303_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmpdata_V_address0 = grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1204_data_V_address0;
    end else begin
        tmpdata_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((~((icmp_ln316_fu_1291_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln316_fu_1291_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        tmpdata_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmpdata_V_ce0 = grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1204_data_V_ce0;
    end else begin
        tmpdata_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln316_fu_1291_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln316_fu_1291_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        tmpdata_V_we0 = 1'b1;
    end else begin
        tmpdata_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        w2_V_ce0 = 1'b1;
    end else begin
        w2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln313_fu_1279_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if ((~((icmp_ln316_fu_1291_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln316_fu_1291_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else if ((~((icmp_ln316_fu_1291_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln316_fu_1291_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'd1 == and_ln327_6_fu_1380_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1204_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'd0 == and_ln327_6_fu_1380_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1204_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln324_fu_1386_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln324_fu_1386_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            if (((1'b1 == ap_CS_fsm_state23) & ((1'd0 == and_ln327_6_reg_2865) | (icmp_ln339_fu_2337_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state24 : begin
            if (((res_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state24))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign acc_0_V_fu_2145_p2 = (acc_V_0_0_reg_1158 + trunc_ln_fu_1416_p4);

assign acc_10_V_fu_2205_p2 = (acc_V_10_0_reg_1028 + trunc_ln708_10_fu_1646_p4);

assign acc_11_V_fu_2211_p2 = (acc_V_11_0_reg_1015 + trunc_ln708_11_fu_1669_p4);

assign acc_12_V_fu_2217_p2 = (acc_V_12_0_reg_1002 + trunc_ln708_12_fu_1692_p4);

assign acc_13_V_fu_2223_p2 = (acc_V_13_0_reg_989 + trunc_ln708_13_fu_1715_p4);

assign acc_14_V_fu_2229_p2 = (acc_V_14_0_reg_976 + trunc_ln708_14_fu_1738_p4);

assign acc_15_V_fu_2235_p2 = (acc_V_15_0_reg_963 + trunc_ln708_15_fu_1761_p4);

assign acc_16_V_fu_2241_p2 = (acc_V_16_0_reg_950 + trunc_ln708_16_fu_1784_p4);

assign acc_17_V_fu_2247_p2 = (acc_V_17_0_reg_937 + trunc_ln708_17_fu_1807_p4);

assign acc_18_V_fu_2253_p2 = (acc_V_18_0_reg_924 + trunc_ln708_18_fu_1830_p4);

assign acc_19_V_fu_2259_p2 = (acc_V_19_0_reg_911 + trunc_ln708_19_fu_1853_p4);

assign acc_1_V_fu_2151_p2 = (acc_V_1_0_reg_1145 + trunc_ln708_1_fu_1439_p4);

assign acc_20_V_fu_2265_p2 = (acc_V_20_0_reg_898 + trunc_ln708_20_fu_1876_p4);

assign acc_21_V_fu_2271_p2 = (acc_V_21_0_reg_885 + trunc_ln708_21_fu_1899_p4);

assign acc_22_V_fu_2277_p2 = (acc_V_22_0_reg_872 + trunc_ln708_22_fu_1922_p4);

assign acc_23_V_fu_2283_p2 = (acc_V_23_0_reg_859 + trunc_ln708_23_fu_1945_p4);

assign acc_24_V_fu_2289_p2 = (acc_V_24_0_reg_846 + trunc_ln708_24_fu_1968_p4);

assign acc_25_V_fu_2295_p2 = (acc_V_25_0_reg_833 + trunc_ln708_25_fu_1991_p4);

assign acc_26_V_fu_2301_p2 = (acc_V_26_0_reg_820 + trunc_ln708_26_fu_2014_p4);

assign acc_27_V_fu_2307_p2 = (acc_V_27_0_reg_807 + trunc_ln708_27_fu_2037_p4);

assign acc_28_V_fu_2313_p2 = (acc_V_28_0_reg_794 + trunc_ln708_28_fu_2060_p4);

assign acc_29_V_fu_2319_p2 = (acc_V_29_0_reg_781 + trunc_ln708_29_fu_2083_p4);

assign acc_2_V_fu_2157_p2 = (acc_V_2_0_reg_1132 + trunc_ln708_2_fu_1462_p4);

assign acc_30_V_fu_2325_p2 = (acc_V_30_0_reg_768 + trunc_ln708_30_fu_2106_p4);

assign acc_31_V_fu_2331_p2 = (acc_V_31_0_reg_755 + trunc_ln708_31_fu_2135_p4);

assign acc_3_V_fu_2163_p2 = (acc_V_3_0_reg_1119 + trunc_ln708_3_fu_1485_p4);

assign acc_4_V_fu_2169_p2 = (acc_V_4_0_reg_1106 + trunc_ln708_4_fu_1508_p4);

assign acc_5_V_fu_2175_p2 = (acc_V_5_0_reg_1093 + trunc_ln708_5_fu_1531_p4);

assign acc_6_V_fu_2181_p2 = (acc_V_6_0_reg_1080 + trunc_ln708_6_fu_1554_p4);

assign acc_7_V_fu_2187_p2 = (acc_V_7_0_reg_1067 + trunc_ln708_7_fu_1577_p4);

assign acc_8_V_fu_2193_p2 = (acc_V_8_0_reg_1054 + trunc_ln708_8_fu_1600_p4);

assign acc_9_V_fu_2199_p2 = (acc_V_9_0_reg_1041 + trunc_ln708_9_fu_1623_p4);

assign add_ln355_fu_2405_p2 = (pY_2_load_reg_2853 + 32'd1);

assign add_ln357_fu_2416_p2 = (sY_2_load_reg_2843 + 32'd1);

assign add_ln360_fu_2359_p2 = (pX_2_load_reg_2859 + 32'd1);

assign add_ln362_fu_2370_p2 = (sX_2_load_reg_2833 + 32'd1);

assign and_ln327_5_fu_1374_p2 = (icmp_ln327_9_fu_1362_p2 & icmp_ln327_8_fu_1342_p2);

assign and_ln327_6_fu_1380_p2 = (and_ln327_fu_1368_p2 & and_ln327_5_fu_1374_p2);

assign and_ln327_fu_1368_p2 = (icmp_ln327_fu_1312_p2 & icmp_ln327_7_fu_1322_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (real_start == 1'b0));
end

always @ (*) begin
    ap_block_state3 = ((icmp_ln316_fu_1291_p2 == 1'd0) & (data_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state3_ignore_call0 = ((icmp_ln316_fu_1291_p2 == 1'd0) & (data_V_V_empty_n == 1'b0));
end

assign ap_block_state5_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_1025 = (((icmp_ln347_fu_2354_p2 == 1'd0) & (1'd0 == and_ln327_6_reg_2865)) | ((icmp_ln347_fu_2354_p2 == 1'd0) & (icmp_ln339_fu_2337_p2 == 1'd1)));
end

always @ (*) begin
    ap_condition_1027 = (((1'd0 == and_ln327_6_reg_2865) & (icmp_ln347_fu_2354_p2 == 1'd1)) | ((icmp_ln347_fu_2354_p2 == 1'd1) & (icmp_ln339_fu_2337_p2 == 1'd1)));
end

always @ (*) begin
    ap_condition_405 = (((icmp_ln351_fu_2400_p2 == 1'd0) & (1'd0 == and_ln327_6_reg_2865) & (icmp_ln347_fu_2354_p2 == 1'd1)) | ((icmp_ln351_fu_2400_p2 == 1'd0) & (icmp_ln347_fu_2354_p2 == 1'd1) & (icmp_ln339_fu_2337_p2 == 1'd1)));
end

always @ (*) begin
    ap_condition_534 = (((1'd0 == and_ln327_6_reg_2865) & (icmp_ln351_fu_2400_p2 == 1'd1) & (icmp_ln347_fu_2354_p2 == 1'd1)) | ((icmp_ln351_fu_2400_p2 == 1'd1) & (icmp_ln347_fu_2354_p2 == 1'd1) & (icmp_ln339_fu_2337_p2 == 1'd1)));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_ready = internal_ap_ready;

assign grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1204_ap_start = grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1204_ap_start_reg;

assign i1_fu_1297_p2 = (i1_0_i_reg_744 + 2'd1);

assign i_fu_1285_p2 = (i_0_i_reg_733 + 11'd1);

assign i_ic_fu_2343_p2 = (i_ic_0_i_reg_1182 + 6'd1);

assign icmp_ln313_fu_1279_p2 = ((i_0_i_reg_733 == 11'd1156) ? 1'b1 : 1'b0);

assign icmp_ln316_fu_1291_p2 = ((i1_0_i_reg_744 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln324_fu_1386_p2 = ((in_index_reg_1171 == 5'd27) ? 1'b1 : 1'b0);

assign icmp_ln327_7_fu_1322_p2 = ((sY_2 == 32'd2) ? 1'b1 : 1'b0);

assign icmp_ln327_8_fu_1342_p2 = (($signed(tmp_7_fu_1332_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln327_9_fu_1362_p2 = (($signed(tmp_8_fu_1352_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln327_fu_1312_p2 = ((sX_2 == 32'd2) ? 1'b1 : 1'b0);

assign icmp_ln339_fu_2337_p2 = ((i_ic_0_i_reg_1182 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln347_fu_2354_p2 = ((pX_2_load_reg_2859 == 32'd33) ? 1'b1 : 1'b0);

assign icmp_ln351_fu_2400_p2 = ((pY_2_load_reg_2853 == 32'd33) ? 1'b1 : 1'b0);

assign ir_fu_1392_p2 = (in_index_reg_1171 + 5'd1);

assign mul_ln1118_100_fu_2454_p1 = sext_ln1116_cast_fu_1408_p1;

assign mul_ln1118_101_fu_2461_p1 = sext_ln1116_cast_fu_1408_p1;

assign mul_ln1118_102_fu_2468_p1 = sext_ln1116_cast_fu_1408_p1;

assign mul_ln1118_103_fu_2475_p1 = sext_ln1116_cast_fu_1408_p1;

assign mul_ln1118_104_fu_2482_p1 = sext_ln1116_cast_fu_1408_p1;

assign mul_ln1118_105_fu_2489_p1 = sext_ln1116_cast_fu_1408_p1;

assign mul_ln1118_106_fu_2496_p1 = sext_ln1116_cast_fu_1408_p1;

assign mul_ln1118_107_fu_2503_p1 = sext_ln1116_cast_fu_1408_p1;

assign mul_ln1118_108_fu_2510_p1 = sext_ln1116_cast_fu_1408_p1;

assign mul_ln1118_109_fu_2517_p1 = sext_ln1116_cast_fu_1408_p1;

assign mul_ln1118_110_fu_2524_p1 = sext_ln1116_cast_fu_1408_p1;

assign mul_ln1118_111_fu_2531_p1 = sext_ln1116_cast_fu_1408_p1;

assign mul_ln1118_112_fu_2538_p1 = sext_ln1116_cast_fu_1408_p1;

assign mul_ln1118_113_fu_2545_p1 = sext_ln1116_cast_fu_1408_p1;

assign mul_ln1118_114_fu_2552_p1 = sext_ln1116_cast_fu_1408_p1;

assign mul_ln1118_115_fu_2559_p1 = sext_ln1116_cast_fu_1408_p1;

assign mul_ln1118_116_fu_2566_p1 = sext_ln1116_cast_fu_1408_p1;

assign mul_ln1118_117_fu_2573_p1 = sext_ln1116_cast_fu_1408_p1;

assign mul_ln1118_118_fu_2580_p1 = sext_ln1116_cast_fu_1408_p1;

assign mul_ln1118_119_fu_2587_p1 = sext_ln1116_cast_fu_1408_p1;

assign mul_ln1118_120_fu_2594_p1 = sext_ln1116_cast_fu_1408_p1;

assign mul_ln1118_121_fu_2601_p1 = sext_ln1116_cast_fu_1408_p1;

assign mul_ln1118_122_fu_2608_p1 = sext_ln1116_cast_fu_1408_p1;

assign mul_ln1118_123_fu_2615_p1 = sext_ln1116_cast_fu_1408_p1;

assign mul_ln1118_124_fu_2622_p1 = sext_ln1116_cast_fu_1408_p1;

assign mul_ln1118_125_fu_2629_p1 = sext_ln1116_cast_fu_1408_p1;

assign mul_ln1118_126_fu_2636_p1 = sext_ln1116_cast_fu_1408_p1;

assign mul_ln1118_127_fu_2643_p1 = sext_ln1116_cast_fu_1408_p1;

assign mul_ln1118_128_fu_2650_p1 = sext_ln1116_cast_fu_1408_p1;

assign mul_ln1118_129_fu_2129_p0 = tmp_4_fu_2115_p4;

assign mul_ln1118_129_fu_2129_p1 = sext_ln1116_cast_fu_1408_p1;

assign mul_ln1118_129_fu_2129_p2 = ($signed(mul_ln1118_129_fu_2129_p0) * $signed(mul_ln1118_129_fu_2129_p1));

assign mul_ln1118_99_fu_2447_p1 = sext_ln1116_cast_fu_1408_p1;

assign mul_ln1118_fu_2440_p1 = sext_ln1116_cast_fu_1408_p1;

assign res_V_V_din = layer_out_i_q0;

assign select_ln357_fu_2421_p3 = ((icmp_ln327_7_reg_2848[0:0] === 1'b1) ? 32'd2 : add_ln357_fu_2416_p2);

assign select_ln362_fu_2375_p3 = ((icmp_ln327_reg_2838[0:0] === 1'b1) ? 32'd2 : add_ln362_fu_2370_p2);

assign sext_ln1116_cast_fu_1408_p1 = $signed(layer_in_V_5_q0);

assign start_out = real_start;

assign tmp_111_fu_1425_p4 = {{w2_V_q0[11:6]}};

assign tmp_112_fu_1448_p4 = {{w2_V_q0[17:12]}};

assign tmp_113_fu_1471_p4 = {{w2_V_q0[23:18]}};

assign tmp_114_fu_1494_p4 = {{w2_V_q0[29:24]}};

assign tmp_115_fu_1517_p4 = {{w2_V_q0[35:30]}};

assign tmp_116_fu_1540_p4 = {{w2_V_q0[41:36]}};

assign tmp_117_fu_1563_p4 = {{w2_V_q0[47:42]}};

assign tmp_118_fu_1586_p4 = {{w2_V_q0[53:48]}};

assign tmp_119_fu_1609_p4 = {{w2_V_q0[59:54]}};

assign tmp_120_fu_1632_p4 = {{w2_V_q0[65:60]}};

assign tmp_121_fu_1655_p4 = {{w2_V_q0[71:66]}};

assign tmp_122_fu_1678_p4 = {{w2_V_q0[77:72]}};

assign tmp_123_fu_1701_p4 = {{w2_V_q0[83:78]}};

assign tmp_124_fu_1724_p4 = {{w2_V_q0[89:84]}};

assign tmp_125_fu_1747_p4 = {{w2_V_q0[95:90]}};

assign tmp_126_fu_1770_p4 = {{w2_V_q0[101:96]}};

assign tmp_127_fu_1793_p4 = {{w2_V_q0[107:102]}};

assign tmp_128_fu_1816_p4 = {{w2_V_q0[113:108]}};

assign tmp_129_fu_1839_p4 = {{w2_V_q0[119:114]}};

assign tmp_130_fu_1862_p4 = {{w2_V_q0[125:120]}};

assign tmp_131_fu_1885_p4 = {{w2_V_q0[131:126]}};

assign tmp_132_fu_1908_p4 = {{w2_V_q0[137:132]}};

assign tmp_133_fu_1931_p4 = {{w2_V_q0[143:138]}};

assign tmp_134_fu_1954_p4 = {{w2_V_q0[149:144]}};

assign tmp_135_fu_1977_p4 = {{w2_V_q0[155:150]}};

assign tmp_136_fu_2000_p4 = {{w2_V_q0[161:156]}};

assign tmp_137_fu_2023_p4 = {{w2_V_q0[167:162]}};

assign tmp_138_fu_2046_p4 = {{w2_V_q0[173:168]}};

assign tmp_139_fu_2069_p4 = {{w2_V_q0[179:174]}};

assign tmp_140_fu_2092_p4 = {{w2_V_q0[185:180]}};

assign tmp_4_fu_2115_p4 = {{w2_V_q0[190:186]}};

assign tmp_7_fu_1332_p4 = {{pY_2[31:1]}};

assign tmp_8_fu_1352_p4 = {{pX_2[31:1]}};

assign trunc_ln332_fu_1404_p1 = w2_V_q0[5:0];

assign trunc_ln708_10_fu_1646_p4 = {{mul_ln1118_108_fu_2510_p2[20:5]}};

assign trunc_ln708_11_fu_1669_p4 = {{mul_ln1118_109_fu_2517_p2[20:5]}};

assign trunc_ln708_12_fu_1692_p4 = {{mul_ln1118_110_fu_2524_p2[20:5]}};

assign trunc_ln708_13_fu_1715_p4 = {{mul_ln1118_111_fu_2531_p2[20:5]}};

assign trunc_ln708_14_fu_1738_p4 = {{mul_ln1118_112_fu_2538_p2[20:5]}};

assign trunc_ln708_15_fu_1761_p4 = {{mul_ln1118_113_fu_2545_p2[20:5]}};

assign trunc_ln708_16_fu_1784_p4 = {{mul_ln1118_114_fu_2552_p2[20:5]}};

assign trunc_ln708_17_fu_1807_p4 = {{mul_ln1118_115_fu_2559_p2[20:5]}};

assign trunc_ln708_18_fu_1830_p4 = {{mul_ln1118_116_fu_2566_p2[20:5]}};

assign trunc_ln708_19_fu_1853_p4 = {{mul_ln1118_117_fu_2573_p2[20:5]}};

assign trunc_ln708_1_fu_1439_p4 = {{mul_ln1118_99_fu_2447_p2[20:5]}};

assign trunc_ln708_20_fu_1876_p4 = {{mul_ln1118_118_fu_2580_p2[20:5]}};

assign trunc_ln708_21_fu_1899_p4 = {{mul_ln1118_119_fu_2587_p2[20:5]}};

assign trunc_ln708_22_fu_1922_p4 = {{mul_ln1118_120_fu_2594_p2[20:5]}};

assign trunc_ln708_23_fu_1945_p4 = {{mul_ln1118_121_fu_2601_p2[20:5]}};

assign trunc_ln708_24_fu_1968_p4 = {{mul_ln1118_122_fu_2608_p2[20:5]}};

assign trunc_ln708_25_fu_1991_p4 = {{mul_ln1118_123_fu_2615_p2[20:5]}};

assign trunc_ln708_26_fu_2014_p4 = {{mul_ln1118_124_fu_2622_p2[20:5]}};

assign trunc_ln708_27_fu_2037_p4 = {{mul_ln1118_125_fu_2629_p2[20:5]}};

assign trunc_ln708_28_fu_2060_p4 = {{mul_ln1118_126_fu_2636_p2[20:5]}};

assign trunc_ln708_29_fu_2083_p4 = {{mul_ln1118_127_fu_2643_p2[20:5]}};

assign trunc_ln708_2_fu_1462_p4 = {{mul_ln1118_100_fu_2454_p2[20:5]}};

assign trunc_ln708_30_fu_2106_p4 = {{mul_ln1118_128_fu_2650_p2[20:5]}};

assign trunc_ln708_31_fu_2135_p4 = {{mul_ln1118_129_fu_2129_p2[20:5]}};

assign trunc_ln708_3_fu_1485_p4 = {{mul_ln1118_101_fu_2461_p2[20:5]}};

assign trunc_ln708_4_fu_1508_p4 = {{mul_ln1118_102_fu_2468_p2[20:5]}};

assign trunc_ln708_5_fu_1531_p4 = {{mul_ln1118_103_fu_2475_p2[20:5]}};

assign trunc_ln708_6_fu_1554_p4 = {{mul_ln1118_104_fu_2482_p2[20:5]}};

assign trunc_ln708_7_fu_1577_p4 = {{mul_ln1118_105_fu_2489_p2[20:5]}};

assign trunc_ln708_8_fu_1600_p4 = {{mul_ln1118_106_fu_2496_p2[20:5]}};

assign trunc_ln708_9_fu_1623_p4 = {{mul_ln1118_107_fu_2503_p2[20:5]}};

assign trunc_ln_fu_1416_p4 = {{mul_ln1118_fu_2440_p2[20:5]}};

assign w2_V_address0 = zext_ln332_fu_1398_p1;

assign zext_ln318_fu_1303_p1 = i1_0_i_reg_744;

assign zext_ln332_fu_1398_p1 = in_index_reg_1171;

assign zext_ln341_fu_2349_p1 = i_ic_0_i_reg_1182;

endmodule //conv_2d_cl_ss_ap_fixed_ap_fixed_16_4_5_3_0_config2_s
