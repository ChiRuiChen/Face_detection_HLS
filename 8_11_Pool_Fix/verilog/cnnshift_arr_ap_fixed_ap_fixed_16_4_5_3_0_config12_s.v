// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config12_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        data_V_address0,
        data_V_ce0,
        data_V_q0,
        output_V_address0,
        output_V_ce0,
        output_V_we0,
        output_V_d0,
        output_V_q0
);

parameter    ap_ST_fsm_state1 = 14'd1;
parameter    ap_ST_fsm_state2 = 14'd2;
parameter    ap_ST_fsm_state3 = 14'd4;
parameter    ap_ST_fsm_state4 = 14'd8;
parameter    ap_ST_fsm_state5 = 14'd16;
parameter    ap_ST_fsm_state6 = 14'd32;
parameter    ap_ST_fsm_state7 = 14'd64;
parameter    ap_ST_fsm_state8 = 14'd128;
parameter    ap_ST_fsm_state9 = 14'd256;
parameter    ap_ST_fsm_state10 = 14'd512;
parameter    ap_ST_fsm_state11 = 14'd1024;
parameter    ap_ST_fsm_state12 = 14'd2048;
parameter    ap_ST_fsm_state13 = 14'd4096;
parameter    ap_ST_fsm_state14 = 14'd8192;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [5:0] data_V_address0;
output   data_V_ce0;
input  [15:0] data_V_q0;
output  [9:0] output_V_address0;
output   output_V_ce0;
output   output_V_we0;
output  [15:0] output_V_d0;
input  [15:0] output_V_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg data_V_ce0;
reg[9:0] output_V_address0;
reg output_V_ce0;
reg output_V_we0;
reg[15:0] output_V_d0;

(* fsm_encoding = "none" *) reg   [13:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [6:0] linebuffer_V_0_address0;
reg    linebuffer_V_0_ce0;
reg    linebuffer_V_0_we0;
wire   [15:0] linebuffer_V_0_q0;
reg   [6:0] linebuffer_V_14_address0;
reg    linebuffer_V_14_ce0;
reg    linebuffer_V_14_we0;
wire   [15:0] linebuffer_V_14_q0;
reg    linebuffer_V_1154_ce0;
reg    linebuffer_V_1154_we0;
wire   [15:0] linebuffer_V_1154_q0;
reg    linebuffer_V_2155_ce0;
reg    linebuffer_V_2155_we0;
wire   [15:0] linebuffer_V_2155_q0;
reg    linebuffer_V_3156_ce0;
reg    linebuffer_V_3156_we0;
wire   [15:0] linebuffer_V_3156_q0;
reg    linebuffer_V_4_ce0;
reg    linebuffer_V_4_we0;
wire   [15:0] linebuffer_V_4_q0;
reg    linebuffer_V_5_ce0;
reg    linebuffer_V_5_we0;
wire   [15:0] linebuffer_V_5_q0;
reg    linebuffer_V_6_ce0;
reg    linebuffer_V_6_we0;
wire   [15:0] linebuffer_V_6_q0;
reg    linebuffer_V_7_ce0;
reg    linebuffer_V_7_we0;
wire   [15:0] linebuffer_V_7_q0;
reg    linebuffer_V_8_ce0;
reg    linebuffer_V_8_we0;
wire   [15:0] linebuffer_V_8_q0;
reg    linebuffer_V_9_ce0;
reg    linebuffer_V_9_we0;
wire   [15:0] linebuffer_V_9_q0;
reg    linebuffer_V_10_ce0;
reg    linebuffer_V_10_we0;
wire   [15:0] linebuffer_V_10_q0;
reg    linebuffer_V_11_ce0;
reg    linebuffer_V_11_we0;
wire   [15:0] linebuffer_V_11_q0;
reg    linebuffer_V_12_ce0;
reg    linebuffer_V_12_we0;
wire   [15:0] linebuffer_V_12_q0;
reg    linebuffer_V_13_ce0;
reg    linebuffer_V_13_we0;
wire   [15:0] linebuffer_V_13_q0;
wire   [6:0] i0_fu_543_p2;
reg   [6:0] i0_reg_905;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln246_fu_537_p2;
wire   [8:0] zext_ln203_23_fu_554_p1;
reg   [8:0] zext_ln203_23_reg_915;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire   [0:0] icmp_ln250_fu_567_p2;
wire   [63:0] zext_ln255_3_fu_624_p1;
reg   [63:0] zext_ln255_3_reg_930;
reg   [6:0] linebuffer_V_0_addr_reg_947;
reg   [6:0] linebuffer_V_14_addr_reg_952;
wire   [15:0] tmpinput_V_q0;
reg   [15:0] tmp1_V_reg_957;
wire    ap_CS_fsm_state5;
reg   [6:0] linebuffer_V_10_addr_reg_962;
reg   [6:0] linebuffer_V_11_addr_reg_967;
reg   [6:0] linebuffer_V_1154_addr_reg_972;
reg   [6:0] linebuffer_V_12_addr_reg_977;
reg   [6:0] linebuffer_V_13_addr_reg_982;
reg   [6:0] linebuffer_V_2155_addr_reg_987;
reg   [6:0] linebuffer_V_3156_addr_reg_992;
reg   [6:0] linebuffer_V_4_addr_reg_997;
reg   [6:0] linebuffer_V_5_addr_reg_1002;
reg   [6:0] linebuffer_V_6_addr_reg_1007;
reg   [6:0] linebuffer_V_7_addr_reg_1012;
reg   [6:0] linebuffer_V_8_addr_reg_1017;
reg   [6:0] linebuffer_V_9_addr_reg_1022;
reg   [15:0] tmp_V_reg_1027;
reg   [15:0] linebuffer_V_14_load_reg_1032;
wire   [3:0] i2_8_fu_636_p2;
reg   [3:0] i2_8_reg_1040;
wire    ap_CS_fsm_state6;
wire   [1:0] i1_fu_670_p2;
wire   [0:0] icmp_ln258_fu_630_p2;
wire   [1:0] i0_4_fu_682_p2;
reg   [1:0] i0_4_reg_1053;
wire    ap_CS_fsm_state8;
wire   [7:0] zext_ln192_15_fu_700_p1;
reg   [7:0] zext_ln192_15_reg_1058;
wire   [0:0] icmp_ln188_fu_676_p2;
wire   [7:0] add_ln192_fu_704_p2;
reg   [7:0] add_ln192_reg_1063;
wire   [1:0] i1_7_fu_716_p2;
reg   [1:0] i1_7_reg_1071;
wire    ap_CS_fsm_state9;
wire   [10:0] sub_ln192_fu_746_p2;
reg   [10:0] sub_ln192_reg_1076;
wire   [0:0] icmp_ln190_fu_710_p2;
wire   [6:0] i2_7_fu_762_p2;
reg   [6:0] i2_7_reg_1085;
wire    ap_CS_fsm_state10;
wire   [10:0] add_ln192_13_fu_777_p2;
reg   [10:0] add_ln192_13_reg_1090;
wire   [0:0] icmp_ln191_fu_756_p2;
wire   [1:0] i1_8_fu_819_p2;
reg   [1:0] i1_8_reg_1103;
wire    ap_CS_fsm_state12;
wire   [9:0] sub_ln203_fu_845_p2;
reg   [9:0] sub_ln203_reg_1108;
wire   [0:0] icmp_ln200_fu_813_p2;
wire   [8:0] zext_ln202_fu_851_p1;
reg   [8:0] zext_ln202_reg_1113;
wire   [6:0] i2_fu_861_p2;
reg   [6:0] i2_reg_1121;
wire    ap_CS_fsm_state13;
wire   [9:0] add_ln203_fu_879_p2;
reg   [9:0] add_ln203_reg_1126;
wire   [0:0] icmp_ln202_fu_855_p2;
reg   [7:0] tmpinput_V_address0;
reg    tmpinput_V_ce0;
reg    tmpinput_V_we0;
reg   [15:0] tmpinput_V_d0;
reg   [6:0] i0_0_reg_386;
reg   [1:0] i1_0_reg_398;
wire   [3:0] ap_phi_mux_i2_0_phi_fu_414_p4;
reg   [3:0] i2_0_reg_410;
wire    ap_CS_fsm_state7;
reg   [15:0] ap_phi_mux_phi_ln203_phi_fu_425_p28;
reg   [15:0] phi_ln203_reg_422;
reg   [1:0] i0_0_i_reg_482;
reg   [1:0] i1_0_i_reg_493;
reg   [6:0] i2_0_i_reg_504;
wire    ap_CS_fsm_state11;
reg   [1:0] i11_0_i_reg_515;
reg   [6:0] i22_0_i_reg_526;
wire    ap_CS_fsm_state14;
wire   [63:0] zext_ln248_fu_549_p1;
wire   [63:0] tmp_114_fu_558_p3;
wire   [63:0] zext_ln252_4_fu_596_p1;
wire   [63:0] zext_ln203_25_fu_665_p1;
wire   [63:0] zext_ln192_4_fu_800_p1;
wire   [63:0] zext_ln192_fu_808_p1;
wire   [63:0] zext_ln203_27_fu_893_p1;
wire   [63:0] zext_ln203_fu_898_p1;
wire   [1:0] xor_ln252_fu_573_p2;
wire   [7:0] tmp_116_fu_579_p3;
wire   [8:0] zext_ln252_fu_587_p1;
wire   [8:0] add_ln252_fu_591_p2;
wire   [1:0] add_ln255_fu_601_p2;
wire   [7:0] tmp_117_fu_607_p3;
wire   [8:0] zext_ln255_fu_615_p1;
wire   [8:0] add_ln255_4_fu_619_p2;
wire   [1:0] sub_ln265_fu_642_p2;
wire   [7:0] tmp_119_fu_648_p3;
wire   [8:0] zext_ln203_24_fu_656_p1;
wire   [8:0] add_ln203_8_fu_660_p2;
wire   [0:0] trunc_ln192_fu_688_p1;
wire   [6:0] shl_ln_fu_692_p3;
wire   [9:0] shl_ln192_5_fu_722_p3;
wire   [7:0] shl_ln192_6_fu_734_p3;
wire   [10:0] zext_ln192_16_fu_730_p1;
wire   [10:0] zext_ln192_17_fu_742_p1;
wire   [7:0] zext_ln191_fu_752_p1;
wire   [7:0] add_ln192_14_fu_768_p2;
wire   [10:0] zext_ln192_18_fu_773_p1;
wire   [7:0] add_ln192_15_fu_782_p2;
wire   [10:0] zext_ln192_19_fu_787_p1;
wire   [10:0] add_ln192_16_fu_791_p2;
wire  signed [31:0] sext_ln192_4_fu_796_p1;
wire  signed [31:0] sext_ln192_fu_805_p1;
wire   [7:0] shl_ln203_3_fu_833_p3;
wire   [9:0] shl_ln3_fu_825_p3;
wire   [9:0] zext_ln203_13_fu_841_p1;
wire   [7:0] or_ln_fu_867_p3;
wire   [9:0] zext_ln203_14_fu_875_p1;
wire   [8:0] zext_ln203_26_fu_884_p1;
wire   [8:0] add_ln203_9_fu_888_p2;
reg   [13:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 14'd1;
end

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config12_s_linebLp #(
    .DataWidth( 16 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
linebuffer_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_0_address0),
    .ce0(linebuffer_V_0_ce0),
    .we0(linebuffer_V_0_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_425_p28),
    .q0(linebuffer_V_0_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config12_s_linebLp #(
    .DataWidth( 16 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
linebuffer_V_14_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_14_address0),
    .ce0(linebuffer_V_14_ce0),
    .we0(linebuffer_V_14_we0),
    .d0(tmp1_V_reg_957),
    .q0(linebuffer_V_14_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config12_s_linebLp #(
    .DataWidth( 16 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
linebuffer_V_1154_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_1154_addr_reg_972),
    .ce0(linebuffer_V_1154_ce0),
    .we0(linebuffer_V_1154_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_425_p28),
    .q0(linebuffer_V_1154_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config12_s_linebLp #(
    .DataWidth( 16 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
linebuffer_V_2155_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_2155_addr_reg_987),
    .ce0(linebuffer_V_2155_ce0),
    .we0(linebuffer_V_2155_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_425_p28),
    .q0(linebuffer_V_2155_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config12_s_linebLp #(
    .DataWidth( 16 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
linebuffer_V_3156_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_3156_addr_reg_992),
    .ce0(linebuffer_V_3156_ce0),
    .we0(linebuffer_V_3156_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_425_p28),
    .q0(linebuffer_V_3156_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config12_s_linebLp #(
    .DataWidth( 16 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
linebuffer_V_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_4_addr_reg_997),
    .ce0(linebuffer_V_4_ce0),
    .we0(linebuffer_V_4_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_425_p28),
    .q0(linebuffer_V_4_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config12_s_linebLp #(
    .DataWidth( 16 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
linebuffer_V_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_5_addr_reg_1002),
    .ce0(linebuffer_V_5_ce0),
    .we0(linebuffer_V_5_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_425_p28),
    .q0(linebuffer_V_5_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config12_s_linebLp #(
    .DataWidth( 16 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
linebuffer_V_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_6_addr_reg_1007),
    .ce0(linebuffer_V_6_ce0),
    .we0(linebuffer_V_6_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_425_p28),
    .q0(linebuffer_V_6_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config12_s_linebLp #(
    .DataWidth( 16 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
linebuffer_V_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_7_addr_reg_1012),
    .ce0(linebuffer_V_7_ce0),
    .we0(linebuffer_V_7_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_425_p28),
    .q0(linebuffer_V_7_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config12_s_linebLp #(
    .DataWidth( 16 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
linebuffer_V_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_8_addr_reg_1017),
    .ce0(linebuffer_V_8_ce0),
    .we0(linebuffer_V_8_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_425_p28),
    .q0(linebuffer_V_8_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config12_s_linebLp #(
    .DataWidth( 16 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
linebuffer_V_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_9_addr_reg_1022),
    .ce0(linebuffer_V_9_ce0),
    .we0(linebuffer_V_9_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_425_p28),
    .q0(linebuffer_V_9_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config12_s_linebLp #(
    .DataWidth( 16 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
linebuffer_V_10_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_10_addr_reg_962),
    .ce0(linebuffer_V_10_ce0),
    .we0(linebuffer_V_10_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_425_p28),
    .q0(linebuffer_V_10_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config12_s_linebLp #(
    .DataWidth( 16 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
linebuffer_V_11_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_11_addr_reg_967),
    .ce0(linebuffer_V_11_ce0),
    .we0(linebuffer_V_11_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_425_p28),
    .q0(linebuffer_V_11_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config12_s_linebLp #(
    .DataWidth( 16 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
linebuffer_V_12_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_12_addr_reg_977),
    .ce0(linebuffer_V_12_ce0),
    .we0(linebuffer_V_12_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_425_p28),
    .q0(linebuffer_V_12_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config12_s_linebLp #(
    .DataWidth( 16 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
linebuffer_V_13_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_13_addr_reg_982),
    .ce0(linebuffer_V_13_ce0),
    .we0(linebuffer_V_13_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_425_p28),
    .q0(linebuffer_V_13_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config12_s_tmpib0s #(
    .DataWidth( 16 ),
    .AddressRange( 192 ),
    .AddressWidth( 8 ))
tmpinput_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(tmpinput_V_address0),
    .ce0(tmpinput_V_ce0),
    .we0(tmpinput_V_we0),
    .d0(tmpinput_V_d0),
    .q0(tmpinput_V_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln246_fu_537_p2 == 1'd1))) begin
        i0_0_i_reg_482 <= 2'd0;
    end else if (((icmp_ln190_fu_710_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        i0_0_i_reg_482 <= i0_4_reg_1053;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i0_0_reg_386 <= 7'd0;
    end else if (((icmp_ln250_fu_567_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        i0_0_reg_386 <= i0_reg_905;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln188_fu_676_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        i11_0_i_reg_515 <= 2'd0;
    end else if (((icmp_ln202_fu_855_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
        i11_0_i_reg_515 <= i1_8_reg_1103;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln191_fu_756_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
        i1_0_i_reg_493 <= i1_7_reg_1071;
    end else if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln188_fu_676_p2 == 1'd0))) begin
        i1_0_i_reg_493 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln258_fu_630_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        i1_0_reg_398 <= i1_fu_670_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        i1_0_reg_398 <= 2'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        i22_0_i_reg_526 <= i2_reg_1121;
    end else if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln200_fu_813_p2 == 1'd0))) begin
        i22_0_i_reg_526 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln190_fu_710_p2 == 1'd0))) begin
        i2_0_i_reg_504 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        i2_0_i_reg_504 <= i2_7_reg_1085;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        i2_0_reg_410 <= i2_8_reg_1040;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        i2_0_reg_410 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & ((((ap_phi_mux_i2_0_phi_fu_414_p4 == 4'd14) & (icmp_ln258_fu_630_p2 == 1'd0)) | ((ap_phi_mux_i2_0_phi_fu_414_p4 == 4'd15) & (icmp_ln258_fu_630_p2 == 1'd0))) | ((ap_phi_mux_i2_0_phi_fu_414_p4 == 4'd13) & (icmp_ln258_fu_630_p2 == 1'd0))))) begin
        phi_ln203_reg_422 <= linebuffer_V_14_load_reg_1032;
    end else if (((i2_0_reg_410 == 4'd12) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_422 <= linebuffer_V_13_q0;
    end else if (((i2_0_reg_410 == 4'd11) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_422 <= linebuffer_V_12_q0;
    end else if (((i2_0_reg_410 == 4'd10) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_422 <= linebuffer_V_11_q0;
    end else if (((i2_0_reg_410 == 4'd9) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_422 <= linebuffer_V_10_q0;
    end else if (((i2_0_reg_410 == 4'd8) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_422 <= linebuffer_V_9_q0;
    end else if (((i2_0_reg_410 == 4'd7) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_422 <= linebuffer_V_8_q0;
    end else if (((i2_0_reg_410 == 4'd6) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_422 <= linebuffer_V_7_q0;
    end else if (((i2_0_reg_410 == 4'd5) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_422 <= linebuffer_V_6_q0;
    end else if (((i2_0_reg_410 == 4'd4) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_422 <= linebuffer_V_5_q0;
    end else if (((i2_0_reg_410 == 4'd3) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_422 <= linebuffer_V_4_q0;
    end else if (((i2_0_reg_410 == 4'd2) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_422 <= linebuffer_V_3156_q0;
    end else if (((i2_0_reg_410 == 4'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_422 <= linebuffer_V_2155_q0;
    end else if (((i2_0_reg_410 == 4'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_422 <= linebuffer_V_1154_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln191_fu_756_p2 == 1'd0))) begin
        add_ln192_13_reg_1090 <= add_ln192_13_fu_777_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln188_fu_676_p2 == 1'd0))) begin
        add_ln192_reg_1063[7 : 6] <= add_ln192_fu_704_p2[7 : 6];
        zext_ln192_15_reg_1058[6] <= zext_ln192_15_fu_700_p1[6];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln202_fu_855_p2 == 1'd0))) begin
        add_ln203_reg_1126 <= add_ln203_fu_879_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        i0_4_reg_1053 <= i0_4_fu_682_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i0_reg_905 <= i0_fu_543_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        i1_7_reg_1071 <= i1_7_fu_716_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        i1_8_reg_1103 <= i1_8_fu_819_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        i2_7_reg_1085 <= i2_7_fu_762_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        i2_8_reg_1040 <= i2_8_fu_636_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        i2_reg_1121 <= i2_fu_861_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln250_fu_567_p2 == 1'd0))) begin
        linebuffer_V_0_addr_reg_947 <= zext_ln255_3_fu_624_p1;
        linebuffer_V_14_addr_reg_952 <= zext_ln255_3_fu_624_p1;
        zext_ln255_3_reg_930[8 : 0] <= zext_ln255_3_fu_624_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        linebuffer_V_10_addr_reg_962 <= zext_ln255_3_reg_930;
        linebuffer_V_1154_addr_reg_972 <= zext_ln255_3_reg_930;
        linebuffer_V_11_addr_reg_967 <= zext_ln255_3_reg_930;
        linebuffer_V_12_addr_reg_977 <= zext_ln255_3_reg_930;
        linebuffer_V_13_addr_reg_982 <= zext_ln255_3_reg_930;
        linebuffer_V_14_load_reg_1032 <= linebuffer_V_14_q0;
        linebuffer_V_2155_addr_reg_987 <= zext_ln255_3_reg_930;
        linebuffer_V_3156_addr_reg_992 <= zext_ln255_3_reg_930;
        linebuffer_V_4_addr_reg_997 <= zext_ln255_3_reg_930;
        linebuffer_V_5_addr_reg_1002 <= zext_ln255_3_reg_930;
        linebuffer_V_6_addr_reg_1007 <= zext_ln255_3_reg_930;
        linebuffer_V_7_addr_reg_1012 <= zext_ln255_3_reg_930;
        linebuffer_V_8_addr_reg_1017 <= zext_ln255_3_reg_930;
        linebuffer_V_9_addr_reg_1022 <= zext_ln255_3_reg_930;
        tmp1_V_reg_957 <= tmpinput_V_q0;
        tmp_V_reg_1027 <= linebuffer_V_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln190_fu_710_p2 == 1'd0))) begin
        sub_ln192_reg_1076[10 : 6] <= sub_ln192_fu_746_p2[10 : 6];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln200_fu_813_p2 == 1'd0))) begin
        sub_ln203_reg_1108[9 : 6] <= sub_ln203_fu_845_p2[9 : 6];
        zext_ln202_reg_1113[7 : 6] <= zext_ln202_fu_851_p1[7 : 6];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        zext_ln203_23_reg_915[6 : 0] <= zext_ln203_23_fu_554_p1[6 : 0];
    end
end

always @ (*) begin
    if ((((icmp_ln200_fu_813_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        if ((i2_0_reg_410 == 4'd12)) begin
            ap_phi_mux_phi_ln203_phi_fu_425_p28 = linebuffer_V_13_q0;
        end else if ((i2_0_reg_410 == 4'd11)) begin
            ap_phi_mux_phi_ln203_phi_fu_425_p28 = linebuffer_V_12_q0;
        end else if ((i2_0_reg_410 == 4'd10)) begin
            ap_phi_mux_phi_ln203_phi_fu_425_p28 = linebuffer_V_11_q0;
        end else if ((i2_0_reg_410 == 4'd9)) begin
            ap_phi_mux_phi_ln203_phi_fu_425_p28 = linebuffer_V_10_q0;
        end else if ((i2_0_reg_410 == 4'd8)) begin
            ap_phi_mux_phi_ln203_phi_fu_425_p28 = linebuffer_V_9_q0;
        end else if ((i2_0_reg_410 == 4'd7)) begin
            ap_phi_mux_phi_ln203_phi_fu_425_p28 = linebuffer_V_8_q0;
        end else if ((i2_0_reg_410 == 4'd6)) begin
            ap_phi_mux_phi_ln203_phi_fu_425_p28 = linebuffer_V_7_q0;
        end else if ((i2_0_reg_410 == 4'd5)) begin
            ap_phi_mux_phi_ln203_phi_fu_425_p28 = linebuffer_V_6_q0;
        end else if ((i2_0_reg_410 == 4'd4)) begin
            ap_phi_mux_phi_ln203_phi_fu_425_p28 = linebuffer_V_5_q0;
        end else if ((i2_0_reg_410 == 4'd3)) begin
            ap_phi_mux_phi_ln203_phi_fu_425_p28 = linebuffer_V_4_q0;
        end else if ((i2_0_reg_410 == 4'd2)) begin
            ap_phi_mux_phi_ln203_phi_fu_425_p28 = linebuffer_V_3156_q0;
        end else if ((i2_0_reg_410 == 4'd1)) begin
            ap_phi_mux_phi_ln203_phi_fu_425_p28 = linebuffer_V_2155_q0;
        end else if ((i2_0_reg_410 == 4'd0)) begin
            ap_phi_mux_phi_ln203_phi_fu_425_p28 = linebuffer_V_1154_q0;
        end else begin
            ap_phi_mux_phi_ln203_phi_fu_425_p28 = phi_ln203_reg_422;
        end
    end else begin
        ap_phi_mux_phi_ln203_phi_fu_425_p28 = phi_ln203_reg_422;
    end
end

always @ (*) begin
    if (((icmp_ln200_fu_813_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        data_V_ce0 = 1'b1;
    end else begin
        data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        linebuffer_V_0_address0 = linebuffer_V_0_addr_reg_947;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        linebuffer_V_0_address0 = zext_ln255_3_fu_624_p1;
    end else begin
        linebuffer_V_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state4))) begin
        linebuffer_V_0_ce0 = 1'b1;
    end else begin
        linebuffer_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_410 == 4'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_0_we0 = 1'b1;
    end else begin
        linebuffer_V_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_10_ce0 = 1'b1;
    end else begin
        linebuffer_V_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_410 == 4'd10) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_10_we0 = 1'b1;
    end else begin
        linebuffer_V_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_1154_ce0 = 1'b1;
    end else begin
        linebuffer_V_1154_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_410 == 4'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_1154_we0 = 1'b1;
    end else begin
        linebuffer_V_1154_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_11_ce0 = 1'b1;
    end else begin
        linebuffer_V_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_410 == 4'd11) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_11_we0 = 1'b1;
    end else begin
        linebuffer_V_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_12_ce0 = 1'b1;
    end else begin
        linebuffer_V_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_410 == 4'd12) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_12_we0 = 1'b1;
    end else begin
        linebuffer_V_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_13_ce0 = 1'b1;
    end else begin
        linebuffer_V_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) & ((i2_0_reg_410 == 4'd13) | ((i2_0_reg_410 == 4'd14) | (i2_0_reg_410 == 4'd15))))) begin
        linebuffer_V_13_we0 = 1'b1;
    end else begin
        linebuffer_V_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        linebuffer_V_14_address0 = linebuffer_V_14_addr_reg_952;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        linebuffer_V_14_address0 = zext_ln255_3_fu_624_p1;
    end else begin
        linebuffer_V_14_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4))) begin
        linebuffer_V_14_ce0 = 1'b1;
    end else begin
        linebuffer_V_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln258_fu_630_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_14_we0 = 1'b1;
    end else begin
        linebuffer_V_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_2155_ce0 = 1'b1;
    end else begin
        linebuffer_V_2155_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_410 == 4'd2) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_2155_we0 = 1'b1;
    end else begin
        linebuffer_V_2155_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_3156_ce0 = 1'b1;
    end else begin
        linebuffer_V_3156_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_410 == 4'd3) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_3156_we0 = 1'b1;
    end else begin
        linebuffer_V_3156_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_4_ce0 = 1'b1;
    end else begin
        linebuffer_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_410 == 4'd4) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_4_we0 = 1'b1;
    end else begin
        linebuffer_V_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_5_ce0 = 1'b1;
    end else begin
        linebuffer_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_410 == 4'd5) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_5_we0 = 1'b1;
    end else begin
        linebuffer_V_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_6_ce0 = 1'b1;
    end else begin
        linebuffer_V_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_410 == 4'd6) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_6_we0 = 1'b1;
    end else begin
        linebuffer_V_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_7_ce0 = 1'b1;
    end else begin
        linebuffer_V_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_410 == 4'd7) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_7_we0 = 1'b1;
    end else begin
        linebuffer_V_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_8_ce0 = 1'b1;
    end else begin
        linebuffer_V_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_410 == 4'd8) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_8_we0 = 1'b1;
    end else begin
        linebuffer_V_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_9_ce0 = 1'b1;
    end else begin
        linebuffer_V_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_410 == 4'd9) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_9_we0 = 1'b1;
    end else begin
        linebuffer_V_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        output_V_address0 = zext_ln203_fu_898_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        output_V_address0 = zext_ln192_fu_808_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        output_V_address0 = zext_ln192_4_fu_800_p1;
    end else begin
        output_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        output_V_ce0 = 1'b1;
    end else begin
        output_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        output_V_d0 = tmpinput_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        output_V_d0 = output_V_q0;
    end else begin
        output_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state11))) begin
        output_V_we0 = 1'b1;
    end else begin
        output_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        tmpinput_V_address0 = zext_ln203_27_fu_893_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        tmpinput_V_address0 = zext_ln203_25_fu_665_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmpinput_V_address0 = zext_ln252_4_fu_596_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        tmpinput_V_address0 = tmp_114_fu_558_p3;
    end else begin
        tmpinput_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        tmpinput_V_ce0 = 1'b1;
    end else begin
        tmpinput_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        tmpinput_V_d0 = tmp_V_reg_1027;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        tmpinput_V_d0 = data_V_q0;
    end else begin
        tmpinput_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((icmp_ln258_fu_630_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6)))) begin
        tmpinput_V_we0 = 1'b1;
    end else begin
        tmpinput_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln246_fu_537_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((icmp_ln250_fu_567_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((icmp_ln258_fu_630_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state8 : begin
            if (((icmp_ln188_fu_676_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((icmp_ln190_fu_710_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((icmp_ln191_fu_756_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state12 : begin
            if (((icmp_ln200_fu_813_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state13 : begin
            if (((icmp_ln202_fu_855_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln192_13_fu_777_p2 = (zext_ln192_18_fu_773_p1 + sub_ln192_reg_1076);

assign add_ln192_14_fu_768_p2 = (zext_ln192_15_reg_1058 + zext_ln191_fu_752_p1);

assign add_ln192_15_fu_782_p2 = (add_ln192_reg_1063 + zext_ln191_fu_752_p1);

assign add_ln192_16_fu_791_p2 = (zext_ln192_19_fu_787_p1 + sub_ln192_reg_1076);

assign add_ln192_fu_704_p2 = (8'd64 + zext_ln192_15_fu_700_p1);

assign add_ln203_8_fu_660_p2 = (zext_ln203_23_reg_915 + zext_ln203_24_fu_656_p1);

assign add_ln203_9_fu_888_p2 = (zext_ln202_reg_1113 + zext_ln203_26_fu_884_p1);

assign add_ln203_fu_879_p2 = (sub_ln203_reg_1108 + zext_ln203_14_fu_875_p1);

assign add_ln252_fu_591_p2 = (zext_ln203_23_reg_915 + zext_ln252_fu_587_p1);

assign add_ln255_4_fu_619_p2 = (zext_ln203_23_reg_915 + zext_ln255_fu_615_p1);

assign add_ln255_fu_601_p2 = ($signed(i1_0_reg_398) + $signed(2'd3));

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_phi_mux_i2_0_phi_fu_414_p4 = i2_0_reg_410;

assign data_V_address0 = zext_ln248_fu_549_p1;

assign i0_4_fu_682_p2 = (i0_0_i_reg_482 + 2'd1);

assign i0_fu_543_p2 = (i0_0_reg_386 + 7'd1);

assign i1_7_fu_716_p2 = (i1_0_i_reg_493 + 2'd1);

assign i1_8_fu_819_p2 = (i11_0_i_reg_515 + 2'd1);

assign i1_fu_670_p2 = (i1_0_reg_398 + 2'd1);

assign i2_7_fu_762_p2 = (i2_0_i_reg_504 + 7'd1);

assign i2_8_fu_636_p2 = (i2_0_reg_410 + 4'd1);

assign i2_fu_861_p2 = (i22_0_i_reg_526 + 7'd1);

assign icmp_ln188_fu_676_p2 = ((i0_0_i_reg_482 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln190_fu_710_p2 = ((i1_0_i_reg_493 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln191_fu_756_p2 = ((i2_0_i_reg_504 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln200_fu_813_p2 = ((i11_0_i_reg_515 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln202_fu_855_p2 = ((i22_0_i_reg_526 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln246_fu_537_p2 = ((i0_0_reg_386 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln250_fu_567_p2 = ((i1_0_reg_398 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln258_fu_630_p2 = ((i2_0_reg_410 == 4'd14) ? 1'b1 : 1'b0);

assign or_ln_fu_867_p3 = {{1'd1}, {i22_0_i_reg_526}};

assign sext_ln192_4_fu_796_p1 = $signed(add_ln192_16_fu_791_p2);

assign sext_ln192_fu_805_p1 = $signed(add_ln192_13_reg_1090);

assign shl_ln192_5_fu_722_p3 = {{i1_0_i_reg_493}, {8'd0}};

assign shl_ln192_6_fu_734_p3 = {{i1_0_i_reg_493}, {6'd0}};

assign shl_ln203_3_fu_833_p3 = {{i11_0_i_reg_515}, {6'd0}};

assign shl_ln3_fu_825_p3 = {{i11_0_i_reg_515}, {8'd0}};

assign shl_ln_fu_692_p3 = {{trunc_ln192_fu_688_p1}, {6'd0}};

assign sub_ln192_fu_746_p2 = (zext_ln192_16_fu_730_p1 - zext_ln192_17_fu_742_p1);

assign sub_ln203_fu_845_p2 = (shl_ln3_fu_825_p3 - zext_ln203_13_fu_841_p1);

assign sub_ln265_fu_642_p2 = ($signed(2'd2) - $signed(i1_0_reg_398));

assign tmp_114_fu_558_p3 = {{57'd1}, {i0_0_reg_386}};

assign tmp_116_fu_579_p3 = {{xor_ln252_fu_573_p2}, {6'd0}};

assign tmp_117_fu_607_p3 = {{add_ln255_fu_601_p2}, {6'd0}};

assign tmp_119_fu_648_p3 = {{sub_ln265_fu_642_p2}, {6'd0}};

assign trunc_ln192_fu_688_p1 = i0_0_i_reg_482[0:0];

assign xor_ln252_fu_573_p2 = (i1_0_reg_398 ^ 2'd3);

assign zext_ln191_fu_752_p1 = i2_0_i_reg_504;

assign zext_ln192_15_fu_700_p1 = shl_ln_fu_692_p3;

assign zext_ln192_16_fu_730_p1 = shl_ln192_5_fu_722_p3;

assign zext_ln192_17_fu_742_p1 = shl_ln192_6_fu_734_p3;

assign zext_ln192_18_fu_773_p1 = add_ln192_14_fu_768_p2;

assign zext_ln192_19_fu_787_p1 = add_ln192_15_fu_782_p2;

assign zext_ln192_4_fu_800_p1 = $unsigned(sext_ln192_4_fu_796_p1);

assign zext_ln192_fu_808_p1 = $unsigned(sext_ln192_fu_805_p1);

assign zext_ln202_fu_851_p1 = shl_ln203_3_fu_833_p3;

assign zext_ln203_13_fu_841_p1 = shl_ln203_3_fu_833_p3;

assign zext_ln203_14_fu_875_p1 = or_ln_fu_867_p3;

assign zext_ln203_23_fu_554_p1 = i0_0_reg_386;

assign zext_ln203_24_fu_656_p1 = tmp_119_fu_648_p3;

assign zext_ln203_25_fu_665_p1 = add_ln203_8_fu_660_p2;

assign zext_ln203_26_fu_884_p1 = i22_0_i_reg_526;

assign zext_ln203_27_fu_893_p1 = add_ln203_9_fu_888_p2;

assign zext_ln203_fu_898_p1 = add_ln203_reg_1126;

assign zext_ln248_fu_549_p1 = i0_0_reg_386;

assign zext_ln252_4_fu_596_p1 = add_ln252_fu_591_p2;

assign zext_ln252_fu_587_p1 = tmp_116_fu_579_p3;

assign zext_ln255_3_fu_624_p1 = add_ln255_4_fu_619_p2;

assign zext_ln255_fu_615_p1 = tmp_117_fu_607_p3;

always @ (posedge ap_clk) begin
    zext_ln203_23_reg_915[8:7] <= 2'b00;
    zext_ln255_3_reg_930[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln192_15_reg_1058[5:0] <= 6'b000000;
    zext_ln192_15_reg_1058[7] <= 1'b0;
    add_ln192_reg_1063[5:0] <= 6'b000000;
    sub_ln192_reg_1076[5:0] <= 6'b000000;
    sub_ln203_reg_1108[5:0] <= 6'b000000;
    zext_ln202_reg_1113[5:0] <= 6'b000000;
    zext_ln202_reg_1113[8] <= 1'b0;
end

endmodule //cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config12_s
