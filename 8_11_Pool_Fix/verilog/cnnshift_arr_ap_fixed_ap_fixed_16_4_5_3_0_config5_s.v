// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        data_V_address0,
        data_V_ce0,
        data_V_q0,
        output_V_address0,
        output_V_ce0,
        output_V_we0,
        output_V_d0,
        output_V_q0
);

parameter    ap_ST_fsm_state1 = 14'd1;
parameter    ap_ST_fsm_state2 = 14'd2;
parameter    ap_ST_fsm_state3 = 14'd4;
parameter    ap_ST_fsm_state4 = 14'd8;
parameter    ap_ST_fsm_state5 = 14'd16;
parameter    ap_ST_fsm_state6 = 14'd32;
parameter    ap_ST_fsm_state7 = 14'd64;
parameter    ap_ST_fsm_state8 = 14'd128;
parameter    ap_ST_fsm_state9 = 14'd256;
parameter    ap_ST_fsm_state10 = 14'd512;
parameter    ap_ST_fsm_state11 = 14'd1024;
parameter    ap_ST_fsm_state12 = 14'd2048;
parameter    ap_ST_fsm_state13 = 14'd4096;
parameter    ap_ST_fsm_state14 = 14'd8192;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [4:0] data_V_address0;
output   data_V_ce0;
input  [15:0] data_V_q0;
output  [8:0] output_V_address0;
output   output_V_ce0;
output   output_V_we0;
output  [15:0] output_V_d0;
input  [15:0] output_V_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg data_V_ce0;
reg[8:0] output_V_address0;
reg output_V_ce0;
reg output_V_we0;
reg[15:0] output_V_d0;

(* fsm_encoding = "none" *) reg   [13:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [5:0] linebuffer_V_2_0_address0;
reg    linebuffer_V_2_0_ce0;
reg    linebuffer_V_2_0_we0;
wire   [15:0] linebuffer_V_2_0_q0;
reg   [5:0] linebuffer_V_2_31_address0;
reg    linebuffer_V_2_31_ce0;
reg    linebuffer_V_2_31_we0;
wire   [15:0] linebuffer_V_2_31_q0;
reg    linebuffer_V_2_1_ce0;
reg    linebuffer_V_2_1_we0;
wire   [15:0] linebuffer_V_2_1_q0;
reg    linebuffer_V_2_2_ce0;
reg    linebuffer_V_2_2_we0;
wire   [15:0] linebuffer_V_2_2_q0;
reg    linebuffer_V_2_3_ce0;
reg    linebuffer_V_2_3_we0;
wire   [15:0] linebuffer_V_2_3_q0;
reg    linebuffer_V_2_4_ce0;
reg    linebuffer_V_2_4_we0;
wire   [15:0] linebuffer_V_2_4_q0;
reg    linebuffer_V_2_5_ce0;
reg    linebuffer_V_2_5_we0;
wire   [15:0] linebuffer_V_2_5_q0;
reg    linebuffer_V_2_6_ce0;
reg    linebuffer_V_2_6_we0;
wire   [15:0] linebuffer_V_2_6_q0;
reg    linebuffer_V_2_7_ce0;
reg    linebuffer_V_2_7_we0;
wire   [15:0] linebuffer_V_2_7_q0;
reg    linebuffer_V_2_8_ce0;
reg    linebuffer_V_2_8_we0;
wire   [15:0] linebuffer_V_2_8_q0;
reg    linebuffer_V_2_9_ce0;
reg    linebuffer_V_2_9_we0;
wire   [15:0] linebuffer_V_2_9_q0;
reg    linebuffer_V_2_10_ce0;
reg    linebuffer_V_2_10_we0;
wire   [15:0] linebuffer_V_2_10_q0;
reg    linebuffer_V_2_11_ce0;
reg    linebuffer_V_2_11_we0;
wire   [15:0] linebuffer_V_2_11_q0;
reg    linebuffer_V_2_12_ce0;
reg    linebuffer_V_2_12_we0;
wire   [15:0] linebuffer_V_2_12_q0;
reg    linebuffer_V_2_13_ce0;
reg    linebuffer_V_2_13_we0;
wire   [15:0] linebuffer_V_2_13_q0;
reg    linebuffer_V_2_14_ce0;
reg    linebuffer_V_2_14_we0;
wire   [15:0] linebuffer_V_2_14_q0;
reg    linebuffer_V_2_15_ce0;
reg    linebuffer_V_2_15_we0;
wire   [15:0] linebuffer_V_2_15_q0;
reg    linebuffer_V_2_16_ce0;
reg    linebuffer_V_2_16_we0;
wire   [15:0] linebuffer_V_2_16_q0;
reg    linebuffer_V_2_17_ce0;
reg    linebuffer_V_2_17_we0;
wire   [15:0] linebuffer_V_2_17_q0;
reg    linebuffer_V_2_18_ce0;
reg    linebuffer_V_2_18_we0;
wire   [15:0] linebuffer_V_2_18_q0;
reg    linebuffer_V_2_19_ce0;
reg    linebuffer_V_2_19_we0;
wire   [15:0] linebuffer_V_2_19_q0;
reg    linebuffer_V_2_20_ce0;
reg    linebuffer_V_2_20_we0;
wire   [15:0] linebuffer_V_2_20_q0;
reg    linebuffer_V_2_21_ce0;
reg    linebuffer_V_2_21_we0;
wire   [15:0] linebuffer_V_2_21_q0;
reg    linebuffer_V_2_22_ce0;
reg    linebuffer_V_2_22_we0;
wire   [15:0] linebuffer_V_2_22_q0;
reg    linebuffer_V_2_23_ce0;
reg    linebuffer_V_2_23_we0;
wire   [15:0] linebuffer_V_2_23_q0;
reg    linebuffer_V_2_24_ce0;
reg    linebuffer_V_2_24_we0;
wire   [15:0] linebuffer_V_2_24_q0;
reg    linebuffer_V_2_25_ce0;
reg    linebuffer_V_2_25_we0;
wire   [15:0] linebuffer_V_2_25_q0;
reg    linebuffer_V_2_26_ce0;
reg    linebuffer_V_2_26_we0;
wire   [15:0] linebuffer_V_2_26_q0;
reg    linebuffer_V_2_27_ce0;
reg    linebuffer_V_2_27_we0;
wire   [15:0] linebuffer_V_2_27_q0;
reg    linebuffer_V_2_28_ce0;
reg    linebuffer_V_2_28_we0;
wire   [15:0] linebuffer_V_2_28_q0;
reg    linebuffer_V_2_29_ce0;
reg    linebuffer_V_2_29_we0;
wire   [15:0] linebuffer_V_2_29_q0;
reg    linebuffer_V_2_30_ce0;
reg    linebuffer_V_2_30_we0;
wire   [15:0] linebuffer_V_2_30_q0;
wire   [5:0] i0_fu_881_p2;
reg   [5:0] i0_reg_1243;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln246_fu_875_p2;
wire   [7:0] zext_ln203_10_fu_892_p1;
reg   [7:0] zext_ln203_10_reg_1253;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire   [0:0] icmp_ln250_fu_905_p2;
wire   [63:0] zext_ln255_2_fu_962_p1;
reg   [63:0] zext_ln255_2_reg_1268;
reg   [5:0] linebuffer_V_2_0_addr_reg_1302;
reg   [5:0] linebuffer_V_2_31_addr_reg_1307;
wire   [15:0] tmpinput_V_q0;
reg   [15:0] tmp1_V_reg_1312;
wire    ap_CS_fsm_state5;
reg   [5:0] linebuffer_V_2_1_addr_reg_1317;
reg   [5:0] linebuffer_V_2_10_addr_reg_1322;
reg   [5:0] linebuffer_V_2_11_addr_reg_1327;
reg   [5:0] linebuffer_V_2_12_addr_reg_1332;
reg   [5:0] linebuffer_V_2_13_addr_reg_1337;
reg   [5:0] linebuffer_V_2_14_addr_reg_1342;
reg   [5:0] linebuffer_V_2_15_addr_reg_1347;
reg   [5:0] linebuffer_V_2_16_addr_reg_1352;
reg   [5:0] linebuffer_V_2_17_addr_reg_1357;
reg   [5:0] linebuffer_V_2_18_addr_reg_1362;
reg   [5:0] linebuffer_V_2_19_addr_reg_1367;
reg   [5:0] linebuffer_V_2_2_addr_reg_1372;
reg   [5:0] linebuffer_V_2_20_addr_reg_1377;
reg   [5:0] linebuffer_V_2_21_addr_reg_1382;
reg   [5:0] linebuffer_V_2_22_addr_reg_1387;
reg   [5:0] linebuffer_V_2_23_addr_reg_1392;
reg   [5:0] linebuffer_V_2_24_addr_reg_1397;
reg   [5:0] linebuffer_V_2_25_addr_reg_1402;
reg   [5:0] linebuffer_V_2_26_addr_reg_1407;
reg   [5:0] linebuffer_V_2_27_addr_reg_1412;
reg   [5:0] linebuffer_V_2_28_addr_reg_1417;
reg   [5:0] linebuffer_V_2_29_addr_reg_1422;
reg   [5:0] linebuffer_V_2_3_addr_reg_1427;
reg   [5:0] linebuffer_V_2_30_addr_reg_1432;
reg   [5:0] linebuffer_V_2_4_addr_reg_1437;
reg   [5:0] linebuffer_V_2_5_addr_reg_1442;
reg   [5:0] linebuffer_V_2_6_addr_reg_1447;
reg   [5:0] linebuffer_V_2_7_addr_reg_1452;
reg   [5:0] linebuffer_V_2_8_addr_reg_1457;
reg   [5:0] linebuffer_V_2_9_addr_reg_1462;
reg   [15:0] tmp_V_reg_1467;
reg   [15:0] linebuffer_V_2_31_load_reg_1472;
wire   [4:0] i2_4_fu_974_p2;
reg   [4:0] i2_4_reg_1480;
wire    ap_CS_fsm_state6;
wire   [1:0] i1_fu_1008_p2;
wire   [0:0] icmp_ln258_fu_968_p2;
wire   [1:0] i0_2_fu_1020_p2;
reg   [1:0] i0_2_reg_1493;
wire    ap_CS_fsm_state8;
wire   [6:0] zext_ln192_7_fu_1038_p1;
reg   [6:0] zext_ln192_7_reg_1498;
wire   [0:0] icmp_ln188_fu_1014_p2;
wire   [6:0] add_ln192_fu_1042_p2;
reg   [6:0] add_ln192_reg_1503;
wire   [1:0] i1_3_fu_1054_p2;
reg   [1:0] i1_3_reg_1511;
wire    ap_CS_fsm_state9;
wire   [9:0] sub_ln192_fu_1084_p2;
reg   [9:0] sub_ln192_reg_1516;
wire   [0:0] icmp_ln190_fu_1048_p2;
wire   [5:0] i2_3_fu_1100_p2;
reg   [5:0] i2_3_reg_1525;
wire    ap_CS_fsm_state10;
wire   [9:0] add_ln192_5_fu_1115_p2;
reg   [9:0] add_ln192_5_reg_1530;
wire   [0:0] icmp_ln191_fu_1094_p2;
wire   [1:0] i1_4_fu_1157_p2;
reg   [1:0] i1_4_reg_1543;
wire    ap_CS_fsm_state12;
wire   [8:0] sub_ln203_fu_1183_p2;
reg   [8:0] sub_ln203_reg_1548;
wire   [0:0] icmp_ln200_fu_1151_p2;
wire   [7:0] zext_ln202_fu_1189_p1;
reg   [7:0] zext_ln202_reg_1553;
wire   [5:0] i2_fu_1199_p2;
reg   [5:0] i2_reg_1561;
wire    ap_CS_fsm_state13;
wire   [8:0] add_ln203_fu_1217_p2;
reg   [8:0] add_ln203_reg_1566;
wire   [0:0] icmp_ln202_fu_1193_p2;
reg   [6:0] tmpinput_V_address0;
reg    tmpinput_V_ce0;
reg    tmpinput_V_we0;
reg   [15:0] tmpinput_V_d0;
reg   [5:0] i0_0_reg_656;
reg   [1:0] i1_0_reg_668;
wire   [4:0] ap_phi_mux_i2_0_phi_fu_684_p4;
reg   [4:0] i2_0_reg_680;
wire    ap_CS_fsm_state7;
reg   [15:0] ap_phi_mux_phi_ln203_phi_fu_695_p62;
reg   [15:0] phi_ln203_reg_692;
reg   [1:0] i0_0_i_reg_820;
reg   [1:0] i1_0_i_reg_831;
reg   [5:0] i2_0_i_reg_842;
wire    ap_CS_fsm_state11;
reg   [1:0] i11_0_i_reg_853;
reg   [5:0] i22_0_i_reg_864;
wire    ap_CS_fsm_state14;
wire   [63:0] zext_ln248_fu_887_p1;
wire   [63:0] tmp_103_fu_896_p3;
wire   [63:0] zext_ln252_2_fu_934_p1;
wire   [63:0] zext_ln203_12_fu_1003_p1;
wire   [63:0] zext_ln192_2_fu_1138_p1;
wire   [63:0] zext_ln192_fu_1146_p1;
wire   [63:0] zext_ln203_14_fu_1231_p1;
wire   [63:0] zext_ln203_fu_1236_p1;
wire   [1:0] xor_ln252_fu_911_p2;
wire   [6:0] tmp_105_fu_917_p3;
wire   [7:0] zext_ln252_fu_925_p1;
wire   [7:0] add_ln252_fu_929_p2;
wire   [1:0] add_ln255_fu_939_p2;
wire   [6:0] tmp_106_fu_945_p3;
wire   [7:0] zext_ln255_fu_953_p1;
wire   [7:0] add_ln255_2_fu_957_p2;
wire   [1:0] sub_ln265_fu_980_p2;
wire   [6:0] tmp_108_fu_986_p3;
wire   [7:0] zext_ln203_11_fu_994_p1;
wire   [7:0] add_ln203_3_fu_998_p2;
wire   [0:0] trunc_ln192_fu_1026_p1;
wire   [5:0] shl_ln_fu_1030_p3;
wire   [8:0] shl_ln192_3_fu_1060_p3;
wire   [6:0] shl_ln192_4_fu_1072_p3;
wire   [9:0] zext_ln192_8_fu_1068_p1;
wire   [9:0] zext_ln192_9_fu_1080_p1;
wire   [6:0] zext_ln191_fu_1090_p1;
wire   [6:0] add_ln192_6_fu_1106_p2;
wire   [9:0] zext_ln192_10_fu_1111_p1;
wire   [6:0] add_ln192_7_fu_1120_p2;
wire   [9:0] zext_ln192_11_fu_1125_p1;
wire   [9:0] add_ln192_8_fu_1129_p2;
wire  signed [31:0] sext_ln192_2_fu_1134_p1;
wire  signed [31:0] sext_ln192_fu_1143_p1;
wire   [6:0] shl_ln203_2_fu_1171_p3;
wire   [8:0] shl_ln2_fu_1163_p3;
wire   [8:0] zext_ln203_6_fu_1179_p1;
wire   [6:0] or_ln_fu_1205_p3;
wire   [8:0] zext_ln203_9_fu_1213_p1;
wire   [7:0] zext_ln203_13_fu_1222_p1;
wire   [7:0] add_ln203_4_fu_1226_p2;
reg   [13:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 14'd1;
end

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_linebNgs #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linebuffer_V_2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_2_0_address0),
    .ce0(linebuffer_V_2_0_ce0),
    .we0(linebuffer_V_2_0_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_695_p62),
    .q0(linebuffer_V_2_0_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_linebNgs #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linebuffer_V_2_31_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_2_31_address0),
    .ce0(linebuffer_V_2_31_ce0),
    .we0(linebuffer_V_2_31_we0),
    .d0(tmp1_V_reg_1312),
    .q0(linebuffer_V_2_31_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_linebNgs #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linebuffer_V_2_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_2_1_addr_reg_1317),
    .ce0(linebuffer_V_2_1_ce0),
    .we0(linebuffer_V_2_1_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_695_p62),
    .q0(linebuffer_V_2_1_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_linebNgs #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linebuffer_V_2_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_2_2_addr_reg_1372),
    .ce0(linebuffer_V_2_2_ce0),
    .we0(linebuffer_V_2_2_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_695_p62),
    .q0(linebuffer_V_2_2_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_linebNgs #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linebuffer_V_2_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_2_3_addr_reg_1427),
    .ce0(linebuffer_V_2_3_ce0),
    .we0(linebuffer_V_2_3_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_695_p62),
    .q0(linebuffer_V_2_3_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_linebNgs #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linebuffer_V_2_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_2_4_addr_reg_1437),
    .ce0(linebuffer_V_2_4_ce0),
    .we0(linebuffer_V_2_4_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_695_p62),
    .q0(linebuffer_V_2_4_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_linebNgs #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linebuffer_V_2_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_2_5_addr_reg_1442),
    .ce0(linebuffer_V_2_5_ce0),
    .we0(linebuffer_V_2_5_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_695_p62),
    .q0(linebuffer_V_2_5_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_linebNgs #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linebuffer_V_2_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_2_6_addr_reg_1447),
    .ce0(linebuffer_V_2_6_ce0),
    .we0(linebuffer_V_2_6_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_695_p62),
    .q0(linebuffer_V_2_6_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_linebNgs #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linebuffer_V_2_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_2_7_addr_reg_1452),
    .ce0(linebuffer_V_2_7_ce0),
    .we0(linebuffer_V_2_7_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_695_p62),
    .q0(linebuffer_V_2_7_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_linebNgs #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linebuffer_V_2_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_2_8_addr_reg_1457),
    .ce0(linebuffer_V_2_8_ce0),
    .we0(linebuffer_V_2_8_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_695_p62),
    .q0(linebuffer_V_2_8_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_linebNgs #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linebuffer_V_2_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_2_9_addr_reg_1462),
    .ce0(linebuffer_V_2_9_ce0),
    .we0(linebuffer_V_2_9_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_695_p62),
    .q0(linebuffer_V_2_9_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_linebNgs #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linebuffer_V_2_10_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_2_10_addr_reg_1322),
    .ce0(linebuffer_V_2_10_ce0),
    .we0(linebuffer_V_2_10_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_695_p62),
    .q0(linebuffer_V_2_10_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_linebNgs #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linebuffer_V_2_11_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_2_11_addr_reg_1327),
    .ce0(linebuffer_V_2_11_ce0),
    .we0(linebuffer_V_2_11_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_695_p62),
    .q0(linebuffer_V_2_11_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_linebNgs #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linebuffer_V_2_12_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_2_12_addr_reg_1332),
    .ce0(linebuffer_V_2_12_ce0),
    .we0(linebuffer_V_2_12_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_695_p62),
    .q0(linebuffer_V_2_12_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_linebNgs #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linebuffer_V_2_13_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_2_13_addr_reg_1337),
    .ce0(linebuffer_V_2_13_ce0),
    .we0(linebuffer_V_2_13_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_695_p62),
    .q0(linebuffer_V_2_13_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_linebNgs #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linebuffer_V_2_14_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_2_14_addr_reg_1342),
    .ce0(linebuffer_V_2_14_ce0),
    .we0(linebuffer_V_2_14_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_695_p62),
    .q0(linebuffer_V_2_14_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_linebNgs #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linebuffer_V_2_15_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_2_15_addr_reg_1347),
    .ce0(linebuffer_V_2_15_ce0),
    .we0(linebuffer_V_2_15_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_695_p62),
    .q0(linebuffer_V_2_15_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_linebNgs #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linebuffer_V_2_16_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_2_16_addr_reg_1352),
    .ce0(linebuffer_V_2_16_ce0),
    .we0(linebuffer_V_2_16_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_695_p62),
    .q0(linebuffer_V_2_16_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_linebNgs #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linebuffer_V_2_17_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_2_17_addr_reg_1357),
    .ce0(linebuffer_V_2_17_ce0),
    .we0(linebuffer_V_2_17_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_695_p62),
    .q0(linebuffer_V_2_17_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_linebNgs #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linebuffer_V_2_18_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_2_18_addr_reg_1362),
    .ce0(linebuffer_V_2_18_ce0),
    .we0(linebuffer_V_2_18_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_695_p62),
    .q0(linebuffer_V_2_18_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_linebNgs #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linebuffer_V_2_19_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_2_19_addr_reg_1367),
    .ce0(linebuffer_V_2_19_ce0),
    .we0(linebuffer_V_2_19_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_695_p62),
    .q0(linebuffer_V_2_19_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_linebNgs #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linebuffer_V_2_20_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_2_20_addr_reg_1377),
    .ce0(linebuffer_V_2_20_ce0),
    .we0(linebuffer_V_2_20_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_695_p62),
    .q0(linebuffer_V_2_20_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_linebNgs #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linebuffer_V_2_21_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_2_21_addr_reg_1382),
    .ce0(linebuffer_V_2_21_ce0),
    .we0(linebuffer_V_2_21_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_695_p62),
    .q0(linebuffer_V_2_21_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_linebNgs #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linebuffer_V_2_22_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_2_22_addr_reg_1387),
    .ce0(linebuffer_V_2_22_ce0),
    .we0(linebuffer_V_2_22_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_695_p62),
    .q0(linebuffer_V_2_22_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_linebNgs #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linebuffer_V_2_23_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_2_23_addr_reg_1392),
    .ce0(linebuffer_V_2_23_ce0),
    .we0(linebuffer_V_2_23_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_695_p62),
    .q0(linebuffer_V_2_23_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_linebNgs #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linebuffer_V_2_24_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_2_24_addr_reg_1397),
    .ce0(linebuffer_V_2_24_ce0),
    .we0(linebuffer_V_2_24_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_695_p62),
    .q0(linebuffer_V_2_24_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_linebNgs #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linebuffer_V_2_25_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_2_25_addr_reg_1402),
    .ce0(linebuffer_V_2_25_ce0),
    .we0(linebuffer_V_2_25_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_695_p62),
    .q0(linebuffer_V_2_25_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_linebNgs #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linebuffer_V_2_26_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_2_26_addr_reg_1407),
    .ce0(linebuffer_V_2_26_ce0),
    .we0(linebuffer_V_2_26_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_695_p62),
    .q0(linebuffer_V_2_26_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_linebNgs #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linebuffer_V_2_27_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_2_27_addr_reg_1412),
    .ce0(linebuffer_V_2_27_ce0),
    .we0(linebuffer_V_2_27_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_695_p62),
    .q0(linebuffer_V_2_27_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_linebNgs #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linebuffer_V_2_28_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_2_28_addr_reg_1417),
    .ce0(linebuffer_V_2_28_ce0),
    .we0(linebuffer_V_2_28_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_695_p62),
    .q0(linebuffer_V_2_28_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_linebNgs #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linebuffer_V_2_29_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_2_29_addr_reg_1422),
    .ce0(linebuffer_V_2_29_ce0),
    .we0(linebuffer_V_2_29_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_695_p62),
    .q0(linebuffer_V_2_29_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_linebNgs #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linebuffer_V_2_30_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_2_30_addr_reg_1432),
    .ce0(linebuffer_V_2_30_ce0),
    .we0(linebuffer_V_2_30_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_695_p62),
    .q0(linebuffer_V_2_30_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_tmpinbjl #(
    .DataWidth( 16 ),
    .AddressRange( 96 ),
    .AddressWidth( 7 ))
tmpinput_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(tmpinput_V_address0),
    .ce0(tmpinput_V_ce0),
    .we0(tmpinput_V_we0),
    .d0(tmpinput_V_d0),
    .q0(tmpinput_V_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln246_fu_875_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        i0_0_i_reg_820 <= 2'd0;
    end else if (((icmp_ln190_fu_1048_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        i0_0_i_reg_820 <= i0_2_reg_1493;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i0_0_reg_656 <= 6'd0;
    end else if (((icmp_ln250_fu_905_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        i0_0_reg_656 <= i0_reg_1243;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln188_fu_1014_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        i11_0_i_reg_853 <= 2'd0;
    end else if (((icmp_ln202_fu_1193_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
        i11_0_i_reg_853 <= i1_4_reg_1543;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln191_fu_1094_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
        i1_0_i_reg_831 <= i1_3_reg_1511;
    end else if (((icmp_ln188_fu_1014_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        i1_0_i_reg_831 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln258_fu_968_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        i1_0_reg_668 <= i1_fu_1008_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        i1_0_reg_668 <= 2'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        i22_0_i_reg_864 <= i2_reg_1561;
    end else if (((icmp_ln200_fu_1151_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        i22_0_i_reg_864 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln190_fu_1048_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        i2_0_i_reg_842 <= 6'd0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        i2_0_i_reg_842 <= i2_3_reg_1525;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        i2_0_reg_680 <= i2_4_reg_1480;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        i2_0_reg_680 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (((ap_phi_mux_i2_0_phi_fu_684_p4 == 5'd30) & (icmp_ln258_fu_968_p2 == 1'd0)) | ((ap_phi_mux_i2_0_phi_fu_684_p4 == 5'd31) & (icmp_ln258_fu_968_p2 == 1'd0))))) begin
        phi_ln203_reg_692 <= linebuffer_V_2_31_load_reg_1472;
    end else if (((i2_0_reg_680 == 5'd29) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_692 <= linebuffer_V_2_30_q0;
    end else if (((i2_0_reg_680 == 5'd28) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_692 <= linebuffer_V_2_29_q0;
    end else if (((i2_0_reg_680 == 5'd27) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_692 <= linebuffer_V_2_28_q0;
    end else if (((i2_0_reg_680 == 5'd26) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_692 <= linebuffer_V_2_27_q0;
    end else if (((i2_0_reg_680 == 5'd25) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_692 <= linebuffer_V_2_26_q0;
    end else if (((i2_0_reg_680 == 5'd24) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_692 <= linebuffer_V_2_25_q0;
    end else if (((i2_0_reg_680 == 5'd23) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_692 <= linebuffer_V_2_24_q0;
    end else if (((i2_0_reg_680 == 5'd22) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_692 <= linebuffer_V_2_23_q0;
    end else if (((i2_0_reg_680 == 5'd21) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_692 <= linebuffer_V_2_22_q0;
    end else if (((i2_0_reg_680 == 5'd20) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_692 <= linebuffer_V_2_21_q0;
    end else if (((i2_0_reg_680 == 5'd19) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_692 <= linebuffer_V_2_20_q0;
    end else if (((i2_0_reg_680 == 5'd18) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_692 <= linebuffer_V_2_19_q0;
    end else if (((i2_0_reg_680 == 5'd17) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_692 <= linebuffer_V_2_18_q0;
    end else if (((i2_0_reg_680 == 5'd16) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_692 <= linebuffer_V_2_17_q0;
    end else if (((i2_0_reg_680 == 5'd15) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_692 <= linebuffer_V_2_16_q0;
    end else if (((i2_0_reg_680 == 5'd14) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_692 <= linebuffer_V_2_15_q0;
    end else if (((i2_0_reg_680 == 5'd13) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_692 <= linebuffer_V_2_14_q0;
    end else if (((i2_0_reg_680 == 5'd12) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_692 <= linebuffer_V_2_13_q0;
    end else if (((i2_0_reg_680 == 5'd11) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_692 <= linebuffer_V_2_12_q0;
    end else if (((i2_0_reg_680 == 5'd10) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_692 <= linebuffer_V_2_11_q0;
    end else if (((i2_0_reg_680 == 5'd9) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_692 <= linebuffer_V_2_10_q0;
    end else if (((i2_0_reg_680 == 5'd8) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_692 <= linebuffer_V_2_9_q0;
    end else if (((i2_0_reg_680 == 5'd7) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_692 <= linebuffer_V_2_8_q0;
    end else if (((i2_0_reg_680 == 5'd6) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_692 <= linebuffer_V_2_7_q0;
    end else if (((i2_0_reg_680 == 5'd5) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_692 <= linebuffer_V_2_6_q0;
    end else if (((i2_0_reg_680 == 5'd4) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_692 <= linebuffer_V_2_5_q0;
    end else if (((i2_0_reg_680 == 5'd3) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_692 <= linebuffer_V_2_4_q0;
    end else if (((i2_0_reg_680 == 5'd2) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_692 <= linebuffer_V_2_3_q0;
    end else if (((i2_0_reg_680 == 5'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_692 <= linebuffer_V_2_2_q0;
    end else if (((i2_0_reg_680 == 5'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_692 <= linebuffer_V_2_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln191_fu_1094_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        add_ln192_5_reg_1530 <= add_ln192_5_fu_1115_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln188_fu_1014_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        add_ln192_reg_1503[6 : 5] <= add_ln192_fu_1042_p2[6 : 5];
        zext_ln192_7_reg_1498[5] <= zext_ln192_7_fu_1038_p1[5];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln202_fu_1193_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        add_ln203_reg_1566 <= add_ln203_fu_1217_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        i0_2_reg_1493 <= i0_2_fu_1020_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i0_reg_1243 <= i0_fu_881_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        i1_3_reg_1511 <= i1_3_fu_1054_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        i1_4_reg_1543 <= i1_4_fu_1157_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        i2_3_reg_1525 <= i2_3_fu_1100_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        i2_4_reg_1480 <= i2_4_fu_974_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        i2_reg_1561 <= i2_fu_1199_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln250_fu_905_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        linebuffer_V_2_0_addr_reg_1302 <= zext_ln255_2_fu_962_p1;
        linebuffer_V_2_31_addr_reg_1307 <= zext_ln255_2_fu_962_p1;
        zext_ln255_2_reg_1268[7 : 0] <= zext_ln255_2_fu_962_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        linebuffer_V_2_10_addr_reg_1322 <= zext_ln255_2_reg_1268;
        linebuffer_V_2_11_addr_reg_1327 <= zext_ln255_2_reg_1268;
        linebuffer_V_2_12_addr_reg_1332 <= zext_ln255_2_reg_1268;
        linebuffer_V_2_13_addr_reg_1337 <= zext_ln255_2_reg_1268;
        linebuffer_V_2_14_addr_reg_1342 <= zext_ln255_2_reg_1268;
        linebuffer_V_2_15_addr_reg_1347 <= zext_ln255_2_reg_1268;
        linebuffer_V_2_16_addr_reg_1352 <= zext_ln255_2_reg_1268;
        linebuffer_V_2_17_addr_reg_1357 <= zext_ln255_2_reg_1268;
        linebuffer_V_2_18_addr_reg_1362 <= zext_ln255_2_reg_1268;
        linebuffer_V_2_19_addr_reg_1367 <= zext_ln255_2_reg_1268;
        linebuffer_V_2_1_addr_reg_1317 <= zext_ln255_2_reg_1268;
        linebuffer_V_2_20_addr_reg_1377 <= zext_ln255_2_reg_1268;
        linebuffer_V_2_21_addr_reg_1382 <= zext_ln255_2_reg_1268;
        linebuffer_V_2_22_addr_reg_1387 <= zext_ln255_2_reg_1268;
        linebuffer_V_2_23_addr_reg_1392 <= zext_ln255_2_reg_1268;
        linebuffer_V_2_24_addr_reg_1397 <= zext_ln255_2_reg_1268;
        linebuffer_V_2_25_addr_reg_1402 <= zext_ln255_2_reg_1268;
        linebuffer_V_2_26_addr_reg_1407 <= zext_ln255_2_reg_1268;
        linebuffer_V_2_27_addr_reg_1412 <= zext_ln255_2_reg_1268;
        linebuffer_V_2_28_addr_reg_1417 <= zext_ln255_2_reg_1268;
        linebuffer_V_2_29_addr_reg_1422 <= zext_ln255_2_reg_1268;
        linebuffer_V_2_2_addr_reg_1372 <= zext_ln255_2_reg_1268;
        linebuffer_V_2_30_addr_reg_1432 <= zext_ln255_2_reg_1268;
        linebuffer_V_2_31_load_reg_1472 <= linebuffer_V_2_31_q0;
        linebuffer_V_2_3_addr_reg_1427 <= zext_ln255_2_reg_1268;
        linebuffer_V_2_4_addr_reg_1437 <= zext_ln255_2_reg_1268;
        linebuffer_V_2_5_addr_reg_1442 <= zext_ln255_2_reg_1268;
        linebuffer_V_2_6_addr_reg_1447 <= zext_ln255_2_reg_1268;
        linebuffer_V_2_7_addr_reg_1452 <= zext_ln255_2_reg_1268;
        linebuffer_V_2_8_addr_reg_1457 <= zext_ln255_2_reg_1268;
        linebuffer_V_2_9_addr_reg_1462 <= zext_ln255_2_reg_1268;
        tmp1_V_reg_1312 <= tmpinput_V_q0;
        tmp_V_reg_1467 <= linebuffer_V_2_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln190_fu_1048_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        sub_ln192_reg_1516[9 : 5] <= sub_ln192_fu_1084_p2[9 : 5];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln200_fu_1151_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        sub_ln203_reg_1548[8 : 5] <= sub_ln203_fu_1183_p2[8 : 5];
        zext_ln202_reg_1553[6 : 5] <= zext_ln202_fu_1189_p1[6 : 5];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        zext_ln203_10_reg_1253[5 : 0] <= zext_ln203_10_fu_892_p1[5 : 0];
    end
end

always @ (*) begin
    if ((((icmp_ln200_fu_1151_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        if ((i2_0_reg_680 == 5'd29)) begin
            ap_phi_mux_phi_ln203_phi_fu_695_p62 = linebuffer_V_2_30_q0;
        end else if ((i2_0_reg_680 == 5'd28)) begin
            ap_phi_mux_phi_ln203_phi_fu_695_p62 = linebuffer_V_2_29_q0;
        end else if ((i2_0_reg_680 == 5'd27)) begin
            ap_phi_mux_phi_ln203_phi_fu_695_p62 = linebuffer_V_2_28_q0;
        end else if ((i2_0_reg_680 == 5'd26)) begin
            ap_phi_mux_phi_ln203_phi_fu_695_p62 = linebuffer_V_2_27_q0;
        end else if ((i2_0_reg_680 == 5'd25)) begin
            ap_phi_mux_phi_ln203_phi_fu_695_p62 = linebuffer_V_2_26_q0;
        end else if ((i2_0_reg_680 == 5'd24)) begin
            ap_phi_mux_phi_ln203_phi_fu_695_p62 = linebuffer_V_2_25_q0;
        end else if ((i2_0_reg_680 == 5'd23)) begin
            ap_phi_mux_phi_ln203_phi_fu_695_p62 = linebuffer_V_2_24_q0;
        end else if ((i2_0_reg_680 == 5'd22)) begin
            ap_phi_mux_phi_ln203_phi_fu_695_p62 = linebuffer_V_2_23_q0;
        end else if ((i2_0_reg_680 == 5'd21)) begin
            ap_phi_mux_phi_ln203_phi_fu_695_p62 = linebuffer_V_2_22_q0;
        end else if ((i2_0_reg_680 == 5'd20)) begin
            ap_phi_mux_phi_ln203_phi_fu_695_p62 = linebuffer_V_2_21_q0;
        end else if ((i2_0_reg_680 == 5'd19)) begin
            ap_phi_mux_phi_ln203_phi_fu_695_p62 = linebuffer_V_2_20_q0;
        end else if ((i2_0_reg_680 == 5'd18)) begin
            ap_phi_mux_phi_ln203_phi_fu_695_p62 = linebuffer_V_2_19_q0;
        end else if ((i2_0_reg_680 == 5'd17)) begin
            ap_phi_mux_phi_ln203_phi_fu_695_p62 = linebuffer_V_2_18_q0;
        end else if ((i2_0_reg_680 == 5'd16)) begin
            ap_phi_mux_phi_ln203_phi_fu_695_p62 = linebuffer_V_2_17_q0;
        end else if ((i2_0_reg_680 == 5'd15)) begin
            ap_phi_mux_phi_ln203_phi_fu_695_p62 = linebuffer_V_2_16_q0;
        end else if ((i2_0_reg_680 == 5'd14)) begin
            ap_phi_mux_phi_ln203_phi_fu_695_p62 = linebuffer_V_2_15_q0;
        end else if ((i2_0_reg_680 == 5'd13)) begin
            ap_phi_mux_phi_ln203_phi_fu_695_p62 = linebuffer_V_2_14_q0;
        end else if ((i2_0_reg_680 == 5'd12)) begin
            ap_phi_mux_phi_ln203_phi_fu_695_p62 = linebuffer_V_2_13_q0;
        end else if ((i2_0_reg_680 == 5'd11)) begin
            ap_phi_mux_phi_ln203_phi_fu_695_p62 = linebuffer_V_2_12_q0;
        end else if ((i2_0_reg_680 == 5'd10)) begin
            ap_phi_mux_phi_ln203_phi_fu_695_p62 = linebuffer_V_2_11_q0;
        end else if ((i2_0_reg_680 == 5'd9)) begin
            ap_phi_mux_phi_ln203_phi_fu_695_p62 = linebuffer_V_2_10_q0;
        end else if ((i2_0_reg_680 == 5'd8)) begin
            ap_phi_mux_phi_ln203_phi_fu_695_p62 = linebuffer_V_2_9_q0;
        end else if ((i2_0_reg_680 == 5'd7)) begin
            ap_phi_mux_phi_ln203_phi_fu_695_p62 = linebuffer_V_2_8_q0;
        end else if ((i2_0_reg_680 == 5'd6)) begin
            ap_phi_mux_phi_ln203_phi_fu_695_p62 = linebuffer_V_2_7_q0;
        end else if ((i2_0_reg_680 == 5'd5)) begin
            ap_phi_mux_phi_ln203_phi_fu_695_p62 = linebuffer_V_2_6_q0;
        end else if ((i2_0_reg_680 == 5'd4)) begin
            ap_phi_mux_phi_ln203_phi_fu_695_p62 = linebuffer_V_2_5_q0;
        end else if ((i2_0_reg_680 == 5'd3)) begin
            ap_phi_mux_phi_ln203_phi_fu_695_p62 = linebuffer_V_2_4_q0;
        end else if ((i2_0_reg_680 == 5'd2)) begin
            ap_phi_mux_phi_ln203_phi_fu_695_p62 = linebuffer_V_2_3_q0;
        end else if ((i2_0_reg_680 == 5'd1)) begin
            ap_phi_mux_phi_ln203_phi_fu_695_p62 = linebuffer_V_2_2_q0;
        end else if ((i2_0_reg_680 == 5'd0)) begin
            ap_phi_mux_phi_ln203_phi_fu_695_p62 = linebuffer_V_2_1_q0;
        end else begin
            ap_phi_mux_phi_ln203_phi_fu_695_p62 = phi_ln203_reg_692;
        end
    end else begin
        ap_phi_mux_phi_ln203_phi_fu_695_p62 = phi_ln203_reg_692;
    end
end

always @ (*) begin
    if (((icmp_ln200_fu_1151_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        data_V_ce0 = 1'b1;
    end else begin
        data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        linebuffer_V_2_0_address0 = linebuffer_V_2_0_addr_reg_1302;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        linebuffer_V_2_0_address0 = zext_ln255_2_fu_962_p1;
    end else begin
        linebuffer_V_2_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state4))) begin
        linebuffer_V_2_0_ce0 = 1'b1;
    end else begin
        linebuffer_V_2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_680 == 5'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_2_0_we0 = 1'b1;
    end else begin
        linebuffer_V_2_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_2_10_ce0 = 1'b1;
    end else begin
        linebuffer_V_2_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_680 == 5'd10) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_2_10_we0 = 1'b1;
    end else begin
        linebuffer_V_2_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_2_11_ce0 = 1'b1;
    end else begin
        linebuffer_V_2_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_680 == 5'd11) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_2_11_we0 = 1'b1;
    end else begin
        linebuffer_V_2_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_2_12_ce0 = 1'b1;
    end else begin
        linebuffer_V_2_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_680 == 5'd12) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_2_12_we0 = 1'b1;
    end else begin
        linebuffer_V_2_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_2_13_ce0 = 1'b1;
    end else begin
        linebuffer_V_2_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_680 == 5'd13) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_2_13_we0 = 1'b1;
    end else begin
        linebuffer_V_2_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_2_14_ce0 = 1'b1;
    end else begin
        linebuffer_V_2_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_680 == 5'd14) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_2_14_we0 = 1'b1;
    end else begin
        linebuffer_V_2_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_2_15_ce0 = 1'b1;
    end else begin
        linebuffer_V_2_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_680 == 5'd15) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_2_15_we0 = 1'b1;
    end else begin
        linebuffer_V_2_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_2_16_ce0 = 1'b1;
    end else begin
        linebuffer_V_2_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_680 == 5'd16) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_2_16_we0 = 1'b1;
    end else begin
        linebuffer_V_2_16_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_2_17_ce0 = 1'b1;
    end else begin
        linebuffer_V_2_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_680 == 5'd17) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_2_17_we0 = 1'b1;
    end else begin
        linebuffer_V_2_17_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_2_18_ce0 = 1'b1;
    end else begin
        linebuffer_V_2_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_680 == 5'd18) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_2_18_we0 = 1'b1;
    end else begin
        linebuffer_V_2_18_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_2_19_ce0 = 1'b1;
    end else begin
        linebuffer_V_2_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_680 == 5'd19) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_2_19_we0 = 1'b1;
    end else begin
        linebuffer_V_2_19_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_2_1_ce0 = 1'b1;
    end else begin
        linebuffer_V_2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_680 == 5'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_2_1_we0 = 1'b1;
    end else begin
        linebuffer_V_2_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_2_20_ce0 = 1'b1;
    end else begin
        linebuffer_V_2_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_680 == 5'd20) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_2_20_we0 = 1'b1;
    end else begin
        linebuffer_V_2_20_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_2_21_ce0 = 1'b1;
    end else begin
        linebuffer_V_2_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_680 == 5'd21) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_2_21_we0 = 1'b1;
    end else begin
        linebuffer_V_2_21_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_2_22_ce0 = 1'b1;
    end else begin
        linebuffer_V_2_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_680 == 5'd22) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_2_22_we0 = 1'b1;
    end else begin
        linebuffer_V_2_22_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_2_23_ce0 = 1'b1;
    end else begin
        linebuffer_V_2_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_680 == 5'd23) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_2_23_we0 = 1'b1;
    end else begin
        linebuffer_V_2_23_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_2_24_ce0 = 1'b1;
    end else begin
        linebuffer_V_2_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_680 == 5'd24) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_2_24_we0 = 1'b1;
    end else begin
        linebuffer_V_2_24_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_2_25_ce0 = 1'b1;
    end else begin
        linebuffer_V_2_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_680 == 5'd25) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_2_25_we0 = 1'b1;
    end else begin
        linebuffer_V_2_25_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_2_26_ce0 = 1'b1;
    end else begin
        linebuffer_V_2_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_680 == 5'd26) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_2_26_we0 = 1'b1;
    end else begin
        linebuffer_V_2_26_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_2_27_ce0 = 1'b1;
    end else begin
        linebuffer_V_2_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_680 == 5'd27) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_2_27_we0 = 1'b1;
    end else begin
        linebuffer_V_2_27_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_2_28_ce0 = 1'b1;
    end else begin
        linebuffer_V_2_28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_680 == 5'd28) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_2_28_we0 = 1'b1;
    end else begin
        linebuffer_V_2_28_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_2_29_ce0 = 1'b1;
    end else begin
        linebuffer_V_2_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_680 == 5'd29) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_2_29_we0 = 1'b1;
    end else begin
        linebuffer_V_2_29_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_2_2_ce0 = 1'b1;
    end else begin
        linebuffer_V_2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_680 == 5'd2) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_2_2_we0 = 1'b1;
    end else begin
        linebuffer_V_2_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_2_30_ce0 = 1'b1;
    end else begin
        linebuffer_V_2_30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) & ((i2_0_reg_680 == 5'd30) | (i2_0_reg_680 == 5'd31)))) begin
        linebuffer_V_2_30_we0 = 1'b1;
    end else begin
        linebuffer_V_2_30_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        linebuffer_V_2_31_address0 = linebuffer_V_2_31_addr_reg_1307;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        linebuffer_V_2_31_address0 = zext_ln255_2_fu_962_p1;
    end else begin
        linebuffer_V_2_31_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4))) begin
        linebuffer_V_2_31_ce0 = 1'b1;
    end else begin
        linebuffer_V_2_31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln258_fu_968_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_2_31_we0 = 1'b1;
    end else begin
        linebuffer_V_2_31_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_2_3_ce0 = 1'b1;
    end else begin
        linebuffer_V_2_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_680 == 5'd3) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_2_3_we0 = 1'b1;
    end else begin
        linebuffer_V_2_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_2_4_ce0 = 1'b1;
    end else begin
        linebuffer_V_2_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_680 == 5'd4) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_2_4_we0 = 1'b1;
    end else begin
        linebuffer_V_2_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_2_5_ce0 = 1'b1;
    end else begin
        linebuffer_V_2_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_680 == 5'd5) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_2_5_we0 = 1'b1;
    end else begin
        linebuffer_V_2_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_2_6_ce0 = 1'b1;
    end else begin
        linebuffer_V_2_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_680 == 5'd6) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_2_6_we0 = 1'b1;
    end else begin
        linebuffer_V_2_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_2_7_ce0 = 1'b1;
    end else begin
        linebuffer_V_2_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_680 == 5'd7) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_2_7_we0 = 1'b1;
    end else begin
        linebuffer_V_2_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_2_8_ce0 = 1'b1;
    end else begin
        linebuffer_V_2_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_680 == 5'd8) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_2_8_we0 = 1'b1;
    end else begin
        linebuffer_V_2_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_2_9_ce0 = 1'b1;
    end else begin
        linebuffer_V_2_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_680 == 5'd9) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_2_9_we0 = 1'b1;
    end else begin
        linebuffer_V_2_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        output_V_address0 = zext_ln203_fu_1236_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        output_V_address0 = zext_ln192_fu_1146_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        output_V_address0 = zext_ln192_2_fu_1138_p1;
    end else begin
        output_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        output_V_ce0 = 1'b1;
    end else begin
        output_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        output_V_d0 = tmpinput_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        output_V_d0 = output_V_q0;
    end else begin
        output_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state11))) begin
        output_V_we0 = 1'b1;
    end else begin
        output_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        tmpinput_V_address0 = zext_ln203_14_fu_1231_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        tmpinput_V_address0 = zext_ln203_12_fu_1003_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmpinput_V_address0 = zext_ln252_2_fu_934_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        tmpinput_V_address0 = tmp_103_fu_896_p3;
    end else begin
        tmpinput_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        tmpinput_V_ce0 = 1'b1;
    end else begin
        tmpinput_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        tmpinput_V_d0 = tmp_V_reg_1467;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        tmpinput_V_d0 = data_V_q0;
    end else begin
        tmpinput_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((icmp_ln258_fu_968_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6)))) begin
        tmpinput_V_we0 = 1'b1;
    end else begin
        tmpinput_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln246_fu_875_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((icmp_ln250_fu_905_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((icmp_ln258_fu_968_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state8 : begin
            if (((icmp_ln188_fu_1014_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((icmp_ln190_fu_1048_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((icmp_ln191_fu_1094_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state12 : begin
            if (((icmp_ln200_fu_1151_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state13 : begin
            if (((icmp_ln202_fu_1193_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln192_5_fu_1115_p2 = (zext_ln192_10_fu_1111_p1 + sub_ln192_reg_1516);

assign add_ln192_6_fu_1106_p2 = (zext_ln192_7_reg_1498 + zext_ln191_fu_1090_p1);

assign add_ln192_7_fu_1120_p2 = (add_ln192_reg_1503 + zext_ln191_fu_1090_p1);

assign add_ln192_8_fu_1129_p2 = (zext_ln192_11_fu_1125_p1 + sub_ln192_reg_1516);

assign add_ln192_fu_1042_p2 = (7'd32 + zext_ln192_7_fu_1038_p1);

assign add_ln203_3_fu_998_p2 = (zext_ln203_10_reg_1253 + zext_ln203_11_fu_994_p1);

assign add_ln203_4_fu_1226_p2 = (zext_ln202_reg_1553 + zext_ln203_13_fu_1222_p1);

assign add_ln203_fu_1217_p2 = (sub_ln203_reg_1548 + zext_ln203_9_fu_1213_p1);

assign add_ln252_fu_929_p2 = (zext_ln203_10_reg_1253 + zext_ln252_fu_925_p1);

assign add_ln255_2_fu_957_p2 = (zext_ln203_10_reg_1253 + zext_ln255_fu_953_p1);

assign add_ln255_fu_939_p2 = ($signed(i1_0_reg_668) + $signed(2'd3));

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_phi_mux_i2_0_phi_fu_684_p4 = i2_0_reg_680;

assign data_V_address0 = zext_ln248_fu_887_p1;

assign i0_2_fu_1020_p2 = (i0_0_i_reg_820 + 2'd1);

assign i0_fu_881_p2 = (i0_0_reg_656 + 6'd1);

assign i1_3_fu_1054_p2 = (i1_0_i_reg_831 + 2'd1);

assign i1_4_fu_1157_p2 = (i11_0_i_reg_853 + 2'd1);

assign i1_fu_1008_p2 = (i1_0_reg_668 + 2'd1);

assign i2_3_fu_1100_p2 = (i2_0_i_reg_842 + 6'd1);

assign i2_4_fu_974_p2 = (i2_0_reg_680 + 5'd1);

assign i2_fu_1199_p2 = (i22_0_i_reg_864 + 6'd1);

assign icmp_ln188_fu_1014_p2 = ((i0_0_i_reg_820 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln190_fu_1048_p2 = ((i1_0_i_reg_831 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln191_fu_1094_p2 = ((i2_0_i_reg_842 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln200_fu_1151_p2 = ((i11_0_i_reg_853 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln202_fu_1193_p2 = ((i22_0_i_reg_864 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln246_fu_875_p2 = ((i0_0_reg_656 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln250_fu_905_p2 = ((i1_0_reg_668 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln258_fu_968_p2 = ((i2_0_reg_680 == 5'd31) ? 1'b1 : 1'b0);

assign or_ln_fu_1205_p3 = {{1'd1}, {i22_0_i_reg_864}};

assign sext_ln192_2_fu_1134_p1 = $signed(add_ln192_8_fu_1129_p2);

assign sext_ln192_fu_1143_p1 = $signed(add_ln192_5_reg_1530);

assign shl_ln192_3_fu_1060_p3 = {{i1_0_i_reg_831}, {7'd0}};

assign shl_ln192_4_fu_1072_p3 = {{i1_0_i_reg_831}, {5'd0}};

assign shl_ln203_2_fu_1171_p3 = {{i11_0_i_reg_853}, {5'd0}};

assign shl_ln2_fu_1163_p3 = {{i11_0_i_reg_853}, {7'd0}};

assign shl_ln_fu_1030_p3 = {{trunc_ln192_fu_1026_p1}, {5'd0}};

assign sub_ln192_fu_1084_p2 = (zext_ln192_8_fu_1068_p1 - zext_ln192_9_fu_1080_p1);

assign sub_ln203_fu_1183_p2 = (shl_ln2_fu_1163_p3 - zext_ln203_6_fu_1179_p1);

assign sub_ln265_fu_980_p2 = ($signed(2'd2) - $signed(i1_0_reg_668));

assign tmp_103_fu_896_p3 = {{58'd1}, {i0_0_reg_656}};

assign tmp_105_fu_917_p3 = {{xor_ln252_fu_911_p2}, {5'd0}};

assign tmp_106_fu_945_p3 = {{add_ln255_fu_939_p2}, {5'd0}};

assign tmp_108_fu_986_p3 = {{sub_ln265_fu_980_p2}, {5'd0}};

assign trunc_ln192_fu_1026_p1 = i0_0_i_reg_820[0:0];

assign xor_ln252_fu_911_p2 = (i1_0_reg_668 ^ 2'd3);

assign zext_ln191_fu_1090_p1 = i2_0_i_reg_842;

assign zext_ln192_10_fu_1111_p1 = add_ln192_6_fu_1106_p2;

assign zext_ln192_11_fu_1125_p1 = add_ln192_7_fu_1120_p2;

assign zext_ln192_2_fu_1138_p1 = $unsigned(sext_ln192_2_fu_1134_p1);

assign zext_ln192_7_fu_1038_p1 = shl_ln_fu_1030_p3;

assign zext_ln192_8_fu_1068_p1 = shl_ln192_3_fu_1060_p3;

assign zext_ln192_9_fu_1080_p1 = shl_ln192_4_fu_1072_p3;

assign zext_ln192_fu_1146_p1 = $unsigned(sext_ln192_fu_1143_p1);

assign zext_ln202_fu_1189_p1 = shl_ln203_2_fu_1171_p3;

assign zext_ln203_10_fu_892_p1 = i0_0_reg_656;

assign zext_ln203_11_fu_994_p1 = tmp_108_fu_986_p3;

assign zext_ln203_12_fu_1003_p1 = add_ln203_3_fu_998_p2;

assign zext_ln203_13_fu_1222_p1 = i22_0_i_reg_864;

assign zext_ln203_14_fu_1231_p1 = add_ln203_4_fu_1226_p2;

assign zext_ln203_6_fu_1179_p1 = shl_ln203_2_fu_1171_p3;

assign zext_ln203_9_fu_1213_p1 = or_ln_fu_1205_p3;

assign zext_ln203_fu_1236_p1 = add_ln203_reg_1566;

assign zext_ln248_fu_887_p1 = i0_0_reg_656;

assign zext_ln252_2_fu_934_p1 = add_ln252_fu_929_p2;

assign zext_ln252_fu_925_p1 = tmp_105_fu_917_p3;

assign zext_ln255_2_fu_962_p1 = add_ln255_2_fu_957_p2;

assign zext_ln255_fu_953_p1 = tmp_106_fu_945_p3;

always @ (posedge ap_clk) begin
    zext_ln203_10_reg_1253[7:6] <= 2'b00;
    zext_ln255_2_reg_1268[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln192_7_reg_1498[4:0] <= 5'b00000;
    zext_ln192_7_reg_1498[6] <= 1'b0;
    add_ln192_reg_1503[4:0] <= 5'b00000;
    sub_ln192_reg_1516[4:0] <= 5'b00000;
    sub_ln203_reg_1548[4:0] <= 5'b00000;
    zext_ln202_reg_1553[4:0] <= 5'b00000;
    zext_ln202_reg_1553[7] <= 1'b0;
end

endmodule //cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s
