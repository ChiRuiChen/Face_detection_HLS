// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        data_V_address0,
        data_V_ce0,
        data_V_q0,
        output_V_address0,
        output_V_ce0,
        output_V_we0,
        output_V_d0,
        output_V_q0
);

parameter    ap_ST_fsm_state1 = 14'd1;
parameter    ap_ST_fsm_state2 = 14'd2;
parameter    ap_ST_fsm_state3 = 14'd4;
parameter    ap_ST_fsm_state4 = 14'd8;
parameter    ap_ST_fsm_state5 = 14'd16;
parameter    ap_ST_fsm_state6 = 14'd32;
parameter    ap_ST_fsm_state7 = 14'd64;
parameter    ap_ST_fsm_state8 = 14'd128;
parameter    ap_ST_fsm_state9 = 14'd256;
parameter    ap_ST_fsm_state10 = 14'd512;
parameter    ap_ST_fsm_state11 = 14'd1024;
parameter    ap_ST_fsm_state12 = 14'd2048;
parameter    ap_ST_fsm_state13 = 14'd4096;
parameter    ap_ST_fsm_state14 = 14'd8192;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [1:0] data_V_address0;
output   data_V_ce0;
input  [15:0] data_V_q0;
output  [4:0] output_V_address0;
output   output_V_ce0;
output   output_V_we0;
output  [15:0] output_V_d0;
input  [15:0] output_V_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg data_V_ce0;
reg[4:0] output_V_address0;
reg output_V_ce0;
reg output_V_we0;
reg[15:0] output_V_d0;

(* fsm_encoding = "none" *) reg   [13:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [2:0] linebuffer_V_1_0_address0;
reg    linebuffer_V_1_0_ce0;
reg    linebuffer_V_1_0_we0;
wire   [15:0] linebuffer_V_1_0_q0;
reg   [2:0] linebuffer_V_1_33_address0;
reg    linebuffer_V_1_33_ce0;
reg    linebuffer_V_1_33_we0;
wire   [15:0] linebuffer_V_1_33_q0;
reg    linebuffer_V_1_1_ce0;
reg    linebuffer_V_1_1_we0;
wire   [15:0] linebuffer_V_1_1_q0;
reg    linebuffer_V_1_2_ce0;
reg    linebuffer_V_1_2_we0;
wire   [15:0] linebuffer_V_1_2_q0;
reg    linebuffer_V_1_3_ce0;
reg    linebuffer_V_1_3_we0;
wire   [15:0] linebuffer_V_1_3_q0;
reg    linebuffer_V_1_4_ce0;
reg    linebuffer_V_1_4_we0;
wire   [15:0] linebuffer_V_1_4_q0;
reg    linebuffer_V_1_5_ce0;
reg    linebuffer_V_1_5_we0;
wire   [15:0] linebuffer_V_1_5_q0;
reg    linebuffer_V_1_6_ce0;
reg    linebuffer_V_1_6_we0;
wire   [15:0] linebuffer_V_1_6_q0;
reg    linebuffer_V_1_7_ce0;
reg    linebuffer_V_1_7_we0;
wire   [15:0] linebuffer_V_1_7_q0;
reg    linebuffer_V_1_8_ce0;
reg    linebuffer_V_1_8_we0;
wire   [15:0] linebuffer_V_1_8_q0;
reg    linebuffer_V_1_9_ce0;
reg    linebuffer_V_1_9_we0;
wire   [15:0] linebuffer_V_1_9_q0;
reg    linebuffer_V_1_10_ce0;
reg    linebuffer_V_1_10_we0;
wire   [15:0] linebuffer_V_1_10_q0;
reg    linebuffer_V_1_11_ce0;
reg    linebuffer_V_1_11_we0;
wire   [15:0] linebuffer_V_1_11_q0;
reg    linebuffer_V_1_12_ce0;
reg    linebuffer_V_1_12_we0;
wire   [15:0] linebuffer_V_1_12_q0;
reg    linebuffer_V_1_13_ce0;
reg    linebuffer_V_1_13_we0;
wire   [15:0] linebuffer_V_1_13_q0;
reg    linebuffer_V_1_14_ce0;
reg    linebuffer_V_1_14_we0;
wire   [15:0] linebuffer_V_1_14_q0;
reg    linebuffer_V_1_15_ce0;
reg    linebuffer_V_1_15_we0;
wire   [15:0] linebuffer_V_1_15_q0;
reg    linebuffer_V_1_16_ce0;
reg    linebuffer_V_1_16_we0;
wire   [15:0] linebuffer_V_1_16_q0;
reg    linebuffer_V_1_17_ce0;
reg    linebuffer_V_1_17_we0;
wire   [15:0] linebuffer_V_1_17_q0;
reg    linebuffer_V_1_18_ce0;
reg    linebuffer_V_1_18_we0;
wire   [15:0] linebuffer_V_1_18_q0;
reg    linebuffer_V_1_19_ce0;
reg    linebuffer_V_1_19_we0;
wire   [15:0] linebuffer_V_1_19_q0;
reg    linebuffer_V_1_20_ce0;
reg    linebuffer_V_1_20_we0;
wire   [15:0] linebuffer_V_1_20_q0;
reg    linebuffer_V_1_21_ce0;
reg    linebuffer_V_1_21_we0;
wire   [15:0] linebuffer_V_1_21_q0;
reg    linebuffer_V_1_22_ce0;
reg    linebuffer_V_1_22_we0;
wire   [15:0] linebuffer_V_1_22_q0;
reg    linebuffer_V_1_23_ce0;
reg    linebuffer_V_1_23_we0;
wire   [15:0] linebuffer_V_1_23_q0;
reg    linebuffer_V_1_24_ce0;
reg    linebuffer_V_1_24_we0;
wire   [15:0] linebuffer_V_1_24_q0;
reg    linebuffer_V_1_25_ce0;
reg    linebuffer_V_1_25_we0;
wire   [15:0] linebuffer_V_1_25_q0;
reg    linebuffer_V_1_26_ce0;
reg    linebuffer_V_1_26_we0;
wire   [15:0] linebuffer_V_1_26_q0;
reg    linebuffer_V_1_27_ce0;
reg    linebuffer_V_1_27_we0;
wire   [15:0] linebuffer_V_1_27_q0;
reg    linebuffer_V_1_28_ce0;
reg    linebuffer_V_1_28_we0;
wire   [15:0] linebuffer_V_1_28_q0;
reg    linebuffer_V_1_29_ce0;
reg    linebuffer_V_1_29_we0;
wire   [15:0] linebuffer_V_1_29_q0;
reg    linebuffer_V_1_30_ce0;
reg    linebuffer_V_1_30_we0;
wire   [15:0] linebuffer_V_1_30_q0;
reg    linebuffer_V_1_31_ce0;
reg    linebuffer_V_1_31_we0;
wire   [15:0] linebuffer_V_1_31_q0;
reg    linebuffer_V_1_32_ce0;
reg    linebuffer_V_1_32_we0;
wire   [15:0] linebuffer_V_1_32_q0;
wire   [1:0] i0_fu_907_p2;
reg   [1:0] i0_reg_1299;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln246_fu_901_p2;
wire   [4:0] zext_ln203_15_fu_918_p1;
reg   [4:0] zext_ln203_15_reg_1309;
wire    ap_CS_fsm_state3;
wire   [3:0] zext_ln203_16_fu_922_p1;
reg   [3:0] zext_ln203_16_reg_1315;
wire    ap_CS_fsm_state4;
wire   [0:0] icmp_ln250_fu_937_p2;
wire  signed [63:0] sext_ln255_fu_1010_p1;
reg  signed [63:0] sext_ln255_reg_1328;
reg   [2:0] linebuffer_V_1_0_addr_reg_1364;
reg   [2:0] linebuffer_V_1_33_addr_reg_1369;
wire   [15:0] tmpinput_V_q0;
reg   [15:0] tmp1_V_reg_1374;
wire    ap_CS_fsm_state5;
reg   [2:0] linebuffer_V_1_1_addr_reg_1379;
reg   [2:0] linebuffer_V_1_10_addr_reg_1384;
reg   [2:0] linebuffer_V_1_11_addr_reg_1389;
reg   [2:0] linebuffer_V_1_12_addr_reg_1394;
reg   [2:0] linebuffer_V_1_13_addr_reg_1399;
reg   [2:0] linebuffer_V_1_14_addr_reg_1404;
reg   [2:0] linebuffer_V_1_15_addr_reg_1409;
reg   [2:0] linebuffer_V_1_16_addr_reg_1414;
reg   [2:0] linebuffer_V_1_17_addr_reg_1419;
reg   [2:0] linebuffer_V_1_18_addr_reg_1424;
reg   [2:0] linebuffer_V_1_19_addr_reg_1429;
reg   [2:0] linebuffer_V_1_2_addr_reg_1434;
reg   [2:0] linebuffer_V_1_20_addr_reg_1439;
reg   [2:0] linebuffer_V_1_21_addr_reg_1444;
reg   [2:0] linebuffer_V_1_22_addr_reg_1449;
reg   [2:0] linebuffer_V_1_23_addr_reg_1454;
reg   [2:0] linebuffer_V_1_24_addr_reg_1459;
reg   [2:0] linebuffer_V_1_25_addr_reg_1464;
reg   [2:0] linebuffer_V_1_26_addr_reg_1469;
reg   [2:0] linebuffer_V_1_27_addr_reg_1474;
reg   [2:0] linebuffer_V_1_28_addr_reg_1479;
reg   [2:0] linebuffer_V_1_29_addr_reg_1484;
reg   [2:0] linebuffer_V_1_3_addr_reg_1489;
reg   [2:0] linebuffer_V_1_30_addr_reg_1494;
reg   [2:0] linebuffer_V_1_31_addr_reg_1499;
reg   [2:0] linebuffer_V_1_32_addr_reg_1504;
reg   [2:0] linebuffer_V_1_4_addr_reg_1509;
reg   [2:0] linebuffer_V_1_5_addr_reg_1514;
reg   [2:0] linebuffer_V_1_6_addr_reg_1519;
reg   [2:0] linebuffer_V_1_7_addr_reg_1524;
reg   [2:0] linebuffer_V_1_8_addr_reg_1529;
reg   [2:0] linebuffer_V_1_9_addr_reg_1534;
reg   [15:0] tmp_V_reg_1539;
reg   [15:0] linebuffer_V_1_33_load_reg_1544;
wire   [5:0] i2_6_fu_1022_p2;
reg   [5:0] i2_6_reg_1552;
wire    ap_CS_fsm_state6;
wire   [1:0] i1_fu_1066_p2;
wire   [0:0] icmp_ln258_fu_1016_p2;
wire   [1:0] i0_3_fu_1082_p2;
reg   [1:0] i0_3_reg_1565;
wire    ap_CS_fsm_state8;
wire  signed [4:0] sext_ln192_fu_1110_p1;
reg  signed [4:0] sext_ln192_reg_1570;
wire   [0:0] icmp_ln188_fu_1076_p2;
wire   [4:0] zext_ln192_13_fu_1120_p1;
reg   [4:0] zext_ln192_13_reg_1575;
wire   [1:0] i1_5_fu_1130_p2;
reg   [1:0] i1_5_reg_1583;
wire    ap_CS_fsm_state9;
wire   [4:0] or_ln1_fu_1136_p4;
reg   [4:0] or_ln1_reg_1588;
wire   [0:0] icmp_ln190_fu_1124_p2;
wire   [5:0] zext_ln192_14_fu_1146_p1;
reg   [5:0] zext_ln192_14_reg_1593;
wire   [1:0] i2_5_fu_1160_p2;
reg   [1:0] i2_5_reg_1601;
wire    ap_CS_fsm_state10;
wire   [5:0] add_ln192_9_fu_1175_p2;
reg   [5:0] add_ln192_9_reg_1606;
wire   [0:0] icmp_ln191_fu_1154_p2;
wire   [1:0] i1_6_fu_1209_p2;
reg   [1:0] i1_6_reg_1619;
wire    ap_CS_fsm_state12;
wire   [4:0] or_ln_fu_1215_p4;
reg   [4:0] or_ln_reg_1624;
wire   [0:0] icmp_ln200_fu_1203_p2;
wire   [4:0] sub_ln203_fu_1241_p2;
reg   [4:0] sub_ln203_reg_1629;
wire   [1:0] i2_fu_1257_p2;
reg   [1:0] i2_reg_1637;
wire    ap_CS_fsm_state13;
wire   [4:0] add_ln203_1_fu_1273_p2;
reg   [4:0] add_ln203_1_reg_1642;
wire   [0:0] icmp_ln202_fu_1251_p2;
reg   [3:0] tmpinput_V_address0;
reg    tmpinput_V_ce0;
reg    tmpinput_V_we0;
reg   [15:0] tmpinput_V_d0;
reg   [1:0] i0_0_reg_674;
reg   [1:0] i1_0_reg_686;
wire   [5:0] ap_phi_mux_i2_0_phi_fu_702_p4;
reg   [5:0] i2_0_reg_698;
wire    ap_CS_fsm_state7;
reg   [15:0] ap_phi_mux_phi_ln203_phi_fu_713_p66;
reg   [15:0] phi_ln203_reg_710;
reg   [1:0] i0_0_i_reg_846;
reg   [1:0] i1_0_i_reg_857;
reg   [1:0] i2_0_i_reg_868;
wire    ap_CS_fsm_state11;
reg   [1:0] i11_0_i_reg_879;
reg   [1:0] i22_0_i_reg_890;
wire    ap_CS_fsm_state14;
wire   [63:0] zext_ln248_fu_913_p1;
wire   [63:0] zext_ln203_17_fu_932_p1;
wire  signed [63:0] sext_ln252_fu_976_p1;
wire  signed [63:0] sext_ln203_fu_1061_p1;
wire   [63:0] zext_ln192_3_fu_1190_p1;
wire   [63:0] zext_ln192_fu_1198_p1;
wire  signed [63:0] sext_ln203_1_fu_1287_p1;
wire   [63:0] zext_ln203_fu_1292_p1;
wire   [3:0] add_ln203_5_fu_926_p2;
wire   [1:0] xor_ln252_fu_943_p2;
wire   [3:0] tmp_110_fu_953_p3;
wire   [4:0] zext_ln252_3_fu_961_p1;
wire   [4:0] zext_ln252_fu_949_p1;
wire   [4:0] sub_ln252_fu_965_p2;
wire   [4:0] add_ln252_fu_971_p2;
wire   [1:0] add_ln255_fu_981_p2;
wire   [3:0] tmp_111_fu_991_p3;
wire   [3:0] zext_ln255_fu_987_p1;
wire   [3:0] sub_ln255_fu_999_p2;
wire   [3:0] add_ln255_3_fu_1005_p2;
wire   [1:0] sub_ln265_fu_1028_p2;
wire   [3:0] tmp_113_fu_1038_p3;
wire   [4:0] zext_ln203_21_fu_1046_p1;
wire   [4:0] zext_ln203_20_fu_1034_p1;
wire   [4:0] sub_ln203_1_fu_1050_p2;
wire   [4:0] add_ln203_6_fu_1056_p2;
wire   [0:0] trunc_ln192_fu_1088_p1;
wire   [2:0] shl_ln_fu_1092_p3;
wire   [3:0] zext_ln192_12_fu_1100_p1;
wire   [3:0] zext_ln188_fu_1072_p1;
wire  signed [3:0] sub_ln192_fu_1104_p2;
wire   [3:0] add_ln192_fu_1114_p2;
wire   [4:0] zext_ln191_fu_1150_p1;
wire   [4:0] add_ln192_10_fu_1166_p2;
wire  signed [5:0] sext_ln192_4_fu_1171_p1;
wire   [4:0] add_ln192_11_fu_1180_p2;
wire   [4:0] add_ln192_12_fu_1185_p2;
wire  signed [31:0] sext_ln192_3_fu_1195_p1;
wire   [3:0] tmp_112_fu_1229_p3;
wire   [4:0] zext_ln203_19_fu_1237_p1;
wire   [4:0] zext_ln203_18_fu_1225_p1;
wire   [3:0] zext_ln202_fu_1247_p1;
wire   [3:0] add_ln203_fu_1263_p2;
wire   [4:0] zext_ln203_11_fu_1269_p1;
wire   [4:0] zext_ln203_22_fu_1278_p1;
wire   [4:0] add_ln203_7_fu_1282_p2;
reg   [13:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 14'd1;
end

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_linebbkb #(
    .DataWidth( 16 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
linebuffer_V_1_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_1_0_address0),
    .ce0(linebuffer_V_1_0_ce0),
    .we0(linebuffer_V_1_0_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_713_p66),
    .q0(linebuffer_V_1_0_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_linebbkb #(
    .DataWidth( 16 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
linebuffer_V_1_33_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_1_33_address0),
    .ce0(linebuffer_V_1_33_ce0),
    .we0(linebuffer_V_1_33_we0),
    .d0(tmp1_V_reg_1374),
    .q0(linebuffer_V_1_33_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_linebbkb #(
    .DataWidth( 16 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
linebuffer_V_1_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_1_1_addr_reg_1379),
    .ce0(linebuffer_V_1_1_ce0),
    .we0(linebuffer_V_1_1_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_713_p66),
    .q0(linebuffer_V_1_1_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_linebbkb #(
    .DataWidth( 16 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
linebuffer_V_1_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_1_2_addr_reg_1434),
    .ce0(linebuffer_V_1_2_ce0),
    .we0(linebuffer_V_1_2_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_713_p66),
    .q0(linebuffer_V_1_2_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_linebbkb #(
    .DataWidth( 16 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
linebuffer_V_1_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_1_3_addr_reg_1489),
    .ce0(linebuffer_V_1_3_ce0),
    .we0(linebuffer_V_1_3_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_713_p66),
    .q0(linebuffer_V_1_3_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_linebbkb #(
    .DataWidth( 16 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
linebuffer_V_1_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_1_4_addr_reg_1509),
    .ce0(linebuffer_V_1_4_ce0),
    .we0(linebuffer_V_1_4_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_713_p66),
    .q0(linebuffer_V_1_4_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_linebbkb #(
    .DataWidth( 16 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
linebuffer_V_1_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_1_5_addr_reg_1514),
    .ce0(linebuffer_V_1_5_ce0),
    .we0(linebuffer_V_1_5_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_713_p66),
    .q0(linebuffer_V_1_5_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_linebbkb #(
    .DataWidth( 16 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
linebuffer_V_1_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_1_6_addr_reg_1519),
    .ce0(linebuffer_V_1_6_ce0),
    .we0(linebuffer_V_1_6_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_713_p66),
    .q0(linebuffer_V_1_6_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_linebbkb #(
    .DataWidth( 16 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
linebuffer_V_1_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_1_7_addr_reg_1524),
    .ce0(linebuffer_V_1_7_ce0),
    .we0(linebuffer_V_1_7_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_713_p66),
    .q0(linebuffer_V_1_7_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_linebbkb #(
    .DataWidth( 16 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
linebuffer_V_1_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_1_8_addr_reg_1529),
    .ce0(linebuffer_V_1_8_ce0),
    .we0(linebuffer_V_1_8_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_713_p66),
    .q0(linebuffer_V_1_8_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_linebbkb #(
    .DataWidth( 16 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
linebuffer_V_1_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_1_9_addr_reg_1534),
    .ce0(linebuffer_V_1_9_ce0),
    .we0(linebuffer_V_1_9_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_713_p66),
    .q0(linebuffer_V_1_9_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_linebbkb #(
    .DataWidth( 16 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
linebuffer_V_1_10_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_1_10_addr_reg_1384),
    .ce0(linebuffer_V_1_10_ce0),
    .we0(linebuffer_V_1_10_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_713_p66),
    .q0(linebuffer_V_1_10_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_linebbkb #(
    .DataWidth( 16 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
linebuffer_V_1_11_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_1_11_addr_reg_1389),
    .ce0(linebuffer_V_1_11_ce0),
    .we0(linebuffer_V_1_11_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_713_p66),
    .q0(linebuffer_V_1_11_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_linebbkb #(
    .DataWidth( 16 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
linebuffer_V_1_12_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_1_12_addr_reg_1394),
    .ce0(linebuffer_V_1_12_ce0),
    .we0(linebuffer_V_1_12_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_713_p66),
    .q0(linebuffer_V_1_12_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_linebbkb #(
    .DataWidth( 16 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
linebuffer_V_1_13_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_1_13_addr_reg_1399),
    .ce0(linebuffer_V_1_13_ce0),
    .we0(linebuffer_V_1_13_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_713_p66),
    .q0(linebuffer_V_1_13_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_linebbkb #(
    .DataWidth( 16 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
linebuffer_V_1_14_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_1_14_addr_reg_1404),
    .ce0(linebuffer_V_1_14_ce0),
    .we0(linebuffer_V_1_14_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_713_p66),
    .q0(linebuffer_V_1_14_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_linebbkb #(
    .DataWidth( 16 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
linebuffer_V_1_15_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_1_15_addr_reg_1409),
    .ce0(linebuffer_V_1_15_ce0),
    .we0(linebuffer_V_1_15_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_713_p66),
    .q0(linebuffer_V_1_15_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_linebbkb #(
    .DataWidth( 16 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
linebuffer_V_1_16_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_1_16_addr_reg_1414),
    .ce0(linebuffer_V_1_16_ce0),
    .we0(linebuffer_V_1_16_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_713_p66),
    .q0(linebuffer_V_1_16_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_linebbkb #(
    .DataWidth( 16 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
linebuffer_V_1_17_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_1_17_addr_reg_1419),
    .ce0(linebuffer_V_1_17_ce0),
    .we0(linebuffer_V_1_17_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_713_p66),
    .q0(linebuffer_V_1_17_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_linebbkb #(
    .DataWidth( 16 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
linebuffer_V_1_18_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_1_18_addr_reg_1424),
    .ce0(linebuffer_V_1_18_ce0),
    .we0(linebuffer_V_1_18_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_713_p66),
    .q0(linebuffer_V_1_18_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_linebbkb #(
    .DataWidth( 16 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
linebuffer_V_1_19_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_1_19_addr_reg_1429),
    .ce0(linebuffer_V_1_19_ce0),
    .we0(linebuffer_V_1_19_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_713_p66),
    .q0(linebuffer_V_1_19_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_linebbkb #(
    .DataWidth( 16 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
linebuffer_V_1_20_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_1_20_addr_reg_1439),
    .ce0(linebuffer_V_1_20_ce0),
    .we0(linebuffer_V_1_20_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_713_p66),
    .q0(linebuffer_V_1_20_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_linebbkb #(
    .DataWidth( 16 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
linebuffer_V_1_21_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_1_21_addr_reg_1444),
    .ce0(linebuffer_V_1_21_ce0),
    .we0(linebuffer_V_1_21_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_713_p66),
    .q0(linebuffer_V_1_21_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_linebbkb #(
    .DataWidth( 16 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
linebuffer_V_1_22_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_1_22_addr_reg_1449),
    .ce0(linebuffer_V_1_22_ce0),
    .we0(linebuffer_V_1_22_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_713_p66),
    .q0(linebuffer_V_1_22_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_linebbkb #(
    .DataWidth( 16 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
linebuffer_V_1_23_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_1_23_addr_reg_1454),
    .ce0(linebuffer_V_1_23_ce0),
    .we0(linebuffer_V_1_23_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_713_p66),
    .q0(linebuffer_V_1_23_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_linebbkb #(
    .DataWidth( 16 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
linebuffer_V_1_24_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_1_24_addr_reg_1459),
    .ce0(linebuffer_V_1_24_ce0),
    .we0(linebuffer_V_1_24_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_713_p66),
    .q0(linebuffer_V_1_24_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_linebbkb #(
    .DataWidth( 16 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
linebuffer_V_1_25_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_1_25_addr_reg_1464),
    .ce0(linebuffer_V_1_25_ce0),
    .we0(linebuffer_V_1_25_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_713_p66),
    .q0(linebuffer_V_1_25_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_linebbkb #(
    .DataWidth( 16 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
linebuffer_V_1_26_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_1_26_addr_reg_1469),
    .ce0(linebuffer_V_1_26_ce0),
    .we0(linebuffer_V_1_26_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_713_p66),
    .q0(linebuffer_V_1_26_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_linebbkb #(
    .DataWidth( 16 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
linebuffer_V_1_27_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_1_27_addr_reg_1474),
    .ce0(linebuffer_V_1_27_ce0),
    .we0(linebuffer_V_1_27_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_713_p66),
    .q0(linebuffer_V_1_27_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_linebbkb #(
    .DataWidth( 16 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
linebuffer_V_1_28_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_1_28_addr_reg_1479),
    .ce0(linebuffer_V_1_28_ce0),
    .we0(linebuffer_V_1_28_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_713_p66),
    .q0(linebuffer_V_1_28_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_linebbkb #(
    .DataWidth( 16 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
linebuffer_V_1_29_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_1_29_addr_reg_1484),
    .ce0(linebuffer_V_1_29_ce0),
    .we0(linebuffer_V_1_29_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_713_p66),
    .q0(linebuffer_V_1_29_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_linebbkb #(
    .DataWidth( 16 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
linebuffer_V_1_30_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_1_30_addr_reg_1494),
    .ce0(linebuffer_V_1_30_ce0),
    .we0(linebuffer_V_1_30_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_713_p66),
    .q0(linebuffer_V_1_30_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_linebbkb #(
    .DataWidth( 16 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
linebuffer_V_1_31_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_1_31_addr_reg_1499),
    .ce0(linebuffer_V_1_31_ce0),
    .we0(linebuffer_V_1_31_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_713_p66),
    .q0(linebuffer_V_1_31_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_linebbkb #(
    .DataWidth( 16 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
linebuffer_V_1_32_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_1_32_addr_reg_1504),
    .ce0(linebuffer_V_1_32_ce0),
    .we0(linebuffer_V_1_32_we0),
    .d0(ap_phi_mux_phi_ln203_phi_fu_713_p66),
    .q0(linebuffer_V_1_32_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_tmpinJfO #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
tmpinput_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(tmpinput_V_address0),
    .ce0(tmpinput_V_ce0),
    .we0(tmpinput_V_we0),
    .d0(tmpinput_V_d0),
    .q0(tmpinput_V_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln246_fu_901_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        i0_0_i_reg_846 <= 2'd0;
    end else if (((icmp_ln190_fu_1124_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        i0_0_i_reg_846 <= i0_3_reg_1565;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i0_0_reg_674 <= 2'd0;
    end else if (((icmp_ln250_fu_937_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        i0_0_reg_674 <= i0_reg_1299;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln188_fu_1076_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        i11_0_i_reg_879 <= 2'd0;
    end else if (((icmp_ln202_fu_1251_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
        i11_0_i_reg_879 <= i1_6_reg_1619;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln191_fu_1154_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
        i1_0_i_reg_857 <= i1_5_reg_1583;
    end else if (((icmp_ln188_fu_1076_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        i1_0_i_reg_857 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln258_fu_1016_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        i1_0_reg_686 <= i1_fu_1066_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        i1_0_reg_686 <= 2'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        i22_0_i_reg_890 <= i2_reg_1637;
    end else if (((icmp_ln200_fu_1203_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        i22_0_i_reg_890 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln190_fu_1124_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        i2_0_i_reg_868 <= 2'd0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        i2_0_i_reg_868 <= i2_5_reg_1601;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        i2_0_reg_698 <= i2_6_reg_1552;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        i2_0_reg_698 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~(ap_phi_mux_i2_0_phi_fu_702_p4 == 6'd31) & ~(ap_phi_mux_i2_0_phi_fu_702_p4 == 6'd30) & ~(ap_phi_mux_i2_0_phi_fu_702_p4 == 6'd29) & ~(ap_phi_mux_i2_0_phi_fu_702_p4 == 6'd28) & ~(ap_phi_mux_i2_0_phi_fu_702_p4 == 6'd27) & ~(ap_phi_mux_i2_0_phi_fu_702_p4 == 6'd26) & ~(ap_phi_mux_i2_0_phi_fu_702_p4 == 6'd25) & ~(ap_phi_mux_i2_0_phi_fu_702_p4 == 6'd24) & ~(ap_phi_mux_i2_0_phi_fu_702_p4 == 6'd23) & ~(ap_phi_mux_i2_0_phi_fu_702_p4 == 6'd22) & ~(ap_phi_mux_i2_0_phi_fu_702_p4 == 6'd21) & ~(ap_phi_mux_i2_0_phi_fu_702_p4 == 6'd20) & ~(ap_phi_mux_i2_0_phi_fu_702_p4 == 6'd19) & ~(ap_phi_mux_i2_0_phi_fu_702_p4 == 6'd18) & ~(ap_phi_mux_i2_0_phi_fu_702_p4 == 6'd17) & ~(ap_phi_mux_i2_0_phi_fu_702_p4 == 6'd16) & ~(ap_phi_mux_i2_0_phi_fu_702_p4 == 6'd15) & ~(ap_phi_mux_i2_0_phi_fu_702_p4 == 6'd14) & ~(ap_phi_mux_i2_0_phi_fu_702_p4 == 6'd13) & ~(ap_phi_mux_i2_0_phi_fu_702_p4 == 6'd12) & ~(ap_phi_mux_i2_0_phi_fu_702_p4 == 6'd11) & ~(ap_phi_mux_i2_0_phi_fu_702_p4 == 6'd10) & ~(ap_phi_mux_i2_0_phi_fu_702_p4 == 6'd9) & ~(ap_phi_mux_i2_0_phi_fu_702_p4 == 6'd8) & ~(ap_phi_mux_i2_0_phi_fu_702_p4 == 6'd7) & ~(ap_phi_mux_i2_0_phi_fu_702_p4 == 6'd6) & ~(ap_phi_mux_i2_0_phi_fu_702_p4 == 6'd5) & ~(ap_phi_mux_i2_0_phi_fu_702_p4 == 6'd4) & ~(ap_phi_mux_i2_0_phi_fu_702_p4 == 6'd3) & ~(ap_phi_mux_i2_0_phi_fu_702_p4 == 6'd2) & ~(ap_phi_mux_i2_0_phi_fu_702_p4 == 6'd1) & ~(ap_phi_mux_i2_0_phi_fu_702_p4 == 6'd0) & (icmp_ln258_fu_1016_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        phi_ln203_reg_710 <= linebuffer_V_1_33_load_reg_1544;
    end else if (((i2_0_reg_698 == 6'd31) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_710 <= linebuffer_V_1_32_q0;
    end else if (((i2_0_reg_698 == 6'd30) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_710 <= linebuffer_V_1_31_q0;
    end else if (((i2_0_reg_698 == 6'd29) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_710 <= linebuffer_V_1_30_q0;
    end else if (((i2_0_reg_698 == 6'd28) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_710 <= linebuffer_V_1_29_q0;
    end else if (((i2_0_reg_698 == 6'd27) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_710 <= linebuffer_V_1_28_q0;
    end else if (((i2_0_reg_698 == 6'd26) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_710 <= linebuffer_V_1_27_q0;
    end else if (((i2_0_reg_698 == 6'd25) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_710 <= linebuffer_V_1_26_q0;
    end else if (((i2_0_reg_698 == 6'd24) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_710 <= linebuffer_V_1_25_q0;
    end else if (((i2_0_reg_698 == 6'd23) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_710 <= linebuffer_V_1_24_q0;
    end else if (((i2_0_reg_698 == 6'd22) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_710 <= linebuffer_V_1_23_q0;
    end else if (((i2_0_reg_698 == 6'd21) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_710 <= linebuffer_V_1_22_q0;
    end else if (((i2_0_reg_698 == 6'd20) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_710 <= linebuffer_V_1_21_q0;
    end else if (((i2_0_reg_698 == 6'd19) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_710 <= linebuffer_V_1_20_q0;
    end else if (((i2_0_reg_698 == 6'd18) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_710 <= linebuffer_V_1_19_q0;
    end else if (((i2_0_reg_698 == 6'd17) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_710 <= linebuffer_V_1_18_q0;
    end else if (((i2_0_reg_698 == 6'd16) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_710 <= linebuffer_V_1_17_q0;
    end else if (((i2_0_reg_698 == 6'd15) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_710 <= linebuffer_V_1_16_q0;
    end else if (((i2_0_reg_698 == 6'd14) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_710 <= linebuffer_V_1_15_q0;
    end else if (((i2_0_reg_698 == 6'd13) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_710 <= linebuffer_V_1_14_q0;
    end else if (((i2_0_reg_698 == 6'd12) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_710 <= linebuffer_V_1_13_q0;
    end else if (((i2_0_reg_698 == 6'd11) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_710 <= linebuffer_V_1_12_q0;
    end else if (((i2_0_reg_698 == 6'd10) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_710 <= linebuffer_V_1_11_q0;
    end else if (((i2_0_reg_698 == 6'd9) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_710 <= linebuffer_V_1_10_q0;
    end else if (((i2_0_reg_698 == 6'd8) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_710 <= linebuffer_V_1_9_q0;
    end else if (((i2_0_reg_698 == 6'd7) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_710 <= linebuffer_V_1_8_q0;
    end else if (((i2_0_reg_698 == 6'd6) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_710 <= linebuffer_V_1_7_q0;
    end else if (((i2_0_reg_698 == 6'd5) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_710 <= linebuffer_V_1_6_q0;
    end else if (((i2_0_reg_698 == 6'd4) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_710 <= linebuffer_V_1_5_q0;
    end else if (((i2_0_reg_698 == 6'd3) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_710 <= linebuffer_V_1_4_q0;
    end else if (((i2_0_reg_698 == 6'd2) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_710 <= linebuffer_V_1_3_q0;
    end else if (((i2_0_reg_698 == 6'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_710 <= linebuffer_V_1_2_q0;
    end else if (((i2_0_reg_698 == 6'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln203_reg_710 <= linebuffer_V_1_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln191_fu_1154_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        add_ln192_9_reg_1606 <= add_ln192_9_fu_1175_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln202_fu_1251_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        add_ln203_1_reg_1642 <= add_ln203_1_fu_1273_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        i0_3_reg_1565 <= i0_3_fu_1082_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i0_reg_1299 <= i0_fu_907_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        i1_5_reg_1583 <= i1_5_fu_1130_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        i1_6_reg_1619 <= i1_6_fu_1209_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        i2_5_reg_1601 <= i2_5_fu_1160_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        i2_6_reg_1552 <= i2_6_fu_1022_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        i2_reg_1637 <= i2_fu_1257_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln250_fu_937_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        linebuffer_V_1_0_addr_reg_1364 <= sext_ln255_fu_1010_p1;
        linebuffer_V_1_33_addr_reg_1369 <= sext_ln255_fu_1010_p1;
        sext_ln255_reg_1328 <= sext_ln255_fu_1010_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        linebuffer_V_1_10_addr_reg_1384 <= sext_ln255_reg_1328;
        linebuffer_V_1_11_addr_reg_1389 <= sext_ln255_reg_1328;
        linebuffer_V_1_12_addr_reg_1394 <= sext_ln255_reg_1328;
        linebuffer_V_1_13_addr_reg_1399 <= sext_ln255_reg_1328;
        linebuffer_V_1_14_addr_reg_1404 <= sext_ln255_reg_1328;
        linebuffer_V_1_15_addr_reg_1409 <= sext_ln255_reg_1328;
        linebuffer_V_1_16_addr_reg_1414 <= sext_ln255_reg_1328;
        linebuffer_V_1_17_addr_reg_1419 <= sext_ln255_reg_1328;
        linebuffer_V_1_18_addr_reg_1424 <= sext_ln255_reg_1328;
        linebuffer_V_1_19_addr_reg_1429 <= sext_ln255_reg_1328;
        linebuffer_V_1_1_addr_reg_1379 <= sext_ln255_reg_1328;
        linebuffer_V_1_20_addr_reg_1439 <= sext_ln255_reg_1328;
        linebuffer_V_1_21_addr_reg_1444 <= sext_ln255_reg_1328;
        linebuffer_V_1_22_addr_reg_1449 <= sext_ln255_reg_1328;
        linebuffer_V_1_23_addr_reg_1454 <= sext_ln255_reg_1328;
        linebuffer_V_1_24_addr_reg_1459 <= sext_ln255_reg_1328;
        linebuffer_V_1_25_addr_reg_1464 <= sext_ln255_reg_1328;
        linebuffer_V_1_26_addr_reg_1469 <= sext_ln255_reg_1328;
        linebuffer_V_1_27_addr_reg_1474 <= sext_ln255_reg_1328;
        linebuffer_V_1_28_addr_reg_1479 <= sext_ln255_reg_1328;
        linebuffer_V_1_29_addr_reg_1484 <= sext_ln255_reg_1328;
        linebuffer_V_1_2_addr_reg_1434 <= sext_ln255_reg_1328;
        linebuffer_V_1_30_addr_reg_1494 <= sext_ln255_reg_1328;
        linebuffer_V_1_31_addr_reg_1499 <= sext_ln255_reg_1328;
        linebuffer_V_1_32_addr_reg_1504 <= sext_ln255_reg_1328;
        linebuffer_V_1_33_load_reg_1544 <= linebuffer_V_1_33_q0;
        linebuffer_V_1_3_addr_reg_1489 <= sext_ln255_reg_1328;
        linebuffer_V_1_4_addr_reg_1509 <= sext_ln255_reg_1328;
        linebuffer_V_1_5_addr_reg_1514 <= sext_ln255_reg_1328;
        linebuffer_V_1_6_addr_reg_1519 <= sext_ln255_reg_1328;
        linebuffer_V_1_7_addr_reg_1524 <= sext_ln255_reg_1328;
        linebuffer_V_1_8_addr_reg_1529 <= sext_ln255_reg_1328;
        linebuffer_V_1_9_addr_reg_1534 <= sext_ln255_reg_1328;
        tmp1_V_reg_1374 <= tmpinput_V_q0;
        tmp_V_reg_1539 <= linebuffer_V_1_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln190_fu_1124_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        or_ln1_reg_1588[1 : 0] <= or_ln1_fu_1136_p4[1 : 0];
or_ln1_reg_1588[4 : 3] <= or_ln1_fu_1136_p4[4 : 3];
        zext_ln192_14_reg_1593[1 : 0] <= zext_ln192_14_fu_1146_p1[1 : 0];
zext_ln192_14_reg_1593[4 : 3] <= zext_ln192_14_fu_1146_p1[4 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln200_fu_1203_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        or_ln_reg_1624[1 : 0] <= or_ln_fu_1215_p4[1 : 0];
or_ln_reg_1624[4 : 3] <= or_ln_fu_1215_p4[4 : 3];
        sub_ln203_reg_1629 <= sub_ln203_fu_1241_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln188_fu_1076_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        sext_ln192_reg_1570 <= sext_ln192_fu_1110_p1;
        zext_ln192_13_reg_1575[3 : 0] <= zext_ln192_13_fu_1120_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        zext_ln203_15_reg_1309[1 : 0] <= zext_ln203_15_fu_918_p1[1 : 0];
        zext_ln203_16_reg_1315[1 : 0] <= zext_ln203_16_fu_922_p1[1 : 0];
    end
end

always @ (*) begin
    if ((((icmp_ln200_fu_1203_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        if ((i2_0_reg_698 == 6'd31)) begin
            ap_phi_mux_phi_ln203_phi_fu_713_p66 = linebuffer_V_1_32_q0;
        end else if ((i2_0_reg_698 == 6'd30)) begin
            ap_phi_mux_phi_ln203_phi_fu_713_p66 = linebuffer_V_1_31_q0;
        end else if ((i2_0_reg_698 == 6'd29)) begin
            ap_phi_mux_phi_ln203_phi_fu_713_p66 = linebuffer_V_1_30_q0;
        end else if ((i2_0_reg_698 == 6'd28)) begin
            ap_phi_mux_phi_ln203_phi_fu_713_p66 = linebuffer_V_1_29_q0;
        end else if ((i2_0_reg_698 == 6'd27)) begin
            ap_phi_mux_phi_ln203_phi_fu_713_p66 = linebuffer_V_1_28_q0;
        end else if ((i2_0_reg_698 == 6'd26)) begin
            ap_phi_mux_phi_ln203_phi_fu_713_p66 = linebuffer_V_1_27_q0;
        end else if ((i2_0_reg_698 == 6'd25)) begin
            ap_phi_mux_phi_ln203_phi_fu_713_p66 = linebuffer_V_1_26_q0;
        end else if ((i2_0_reg_698 == 6'd24)) begin
            ap_phi_mux_phi_ln203_phi_fu_713_p66 = linebuffer_V_1_25_q0;
        end else if ((i2_0_reg_698 == 6'd23)) begin
            ap_phi_mux_phi_ln203_phi_fu_713_p66 = linebuffer_V_1_24_q0;
        end else if ((i2_0_reg_698 == 6'd22)) begin
            ap_phi_mux_phi_ln203_phi_fu_713_p66 = linebuffer_V_1_23_q0;
        end else if ((i2_0_reg_698 == 6'd21)) begin
            ap_phi_mux_phi_ln203_phi_fu_713_p66 = linebuffer_V_1_22_q0;
        end else if ((i2_0_reg_698 == 6'd20)) begin
            ap_phi_mux_phi_ln203_phi_fu_713_p66 = linebuffer_V_1_21_q0;
        end else if ((i2_0_reg_698 == 6'd19)) begin
            ap_phi_mux_phi_ln203_phi_fu_713_p66 = linebuffer_V_1_20_q0;
        end else if ((i2_0_reg_698 == 6'd18)) begin
            ap_phi_mux_phi_ln203_phi_fu_713_p66 = linebuffer_V_1_19_q0;
        end else if ((i2_0_reg_698 == 6'd17)) begin
            ap_phi_mux_phi_ln203_phi_fu_713_p66 = linebuffer_V_1_18_q0;
        end else if ((i2_0_reg_698 == 6'd16)) begin
            ap_phi_mux_phi_ln203_phi_fu_713_p66 = linebuffer_V_1_17_q0;
        end else if ((i2_0_reg_698 == 6'd15)) begin
            ap_phi_mux_phi_ln203_phi_fu_713_p66 = linebuffer_V_1_16_q0;
        end else if ((i2_0_reg_698 == 6'd14)) begin
            ap_phi_mux_phi_ln203_phi_fu_713_p66 = linebuffer_V_1_15_q0;
        end else if ((i2_0_reg_698 == 6'd13)) begin
            ap_phi_mux_phi_ln203_phi_fu_713_p66 = linebuffer_V_1_14_q0;
        end else if ((i2_0_reg_698 == 6'd12)) begin
            ap_phi_mux_phi_ln203_phi_fu_713_p66 = linebuffer_V_1_13_q0;
        end else if ((i2_0_reg_698 == 6'd11)) begin
            ap_phi_mux_phi_ln203_phi_fu_713_p66 = linebuffer_V_1_12_q0;
        end else if ((i2_0_reg_698 == 6'd10)) begin
            ap_phi_mux_phi_ln203_phi_fu_713_p66 = linebuffer_V_1_11_q0;
        end else if ((i2_0_reg_698 == 6'd9)) begin
            ap_phi_mux_phi_ln203_phi_fu_713_p66 = linebuffer_V_1_10_q0;
        end else if ((i2_0_reg_698 == 6'd8)) begin
            ap_phi_mux_phi_ln203_phi_fu_713_p66 = linebuffer_V_1_9_q0;
        end else if ((i2_0_reg_698 == 6'd7)) begin
            ap_phi_mux_phi_ln203_phi_fu_713_p66 = linebuffer_V_1_8_q0;
        end else if ((i2_0_reg_698 == 6'd6)) begin
            ap_phi_mux_phi_ln203_phi_fu_713_p66 = linebuffer_V_1_7_q0;
        end else if ((i2_0_reg_698 == 6'd5)) begin
            ap_phi_mux_phi_ln203_phi_fu_713_p66 = linebuffer_V_1_6_q0;
        end else if ((i2_0_reg_698 == 6'd4)) begin
            ap_phi_mux_phi_ln203_phi_fu_713_p66 = linebuffer_V_1_5_q0;
        end else if ((i2_0_reg_698 == 6'd3)) begin
            ap_phi_mux_phi_ln203_phi_fu_713_p66 = linebuffer_V_1_4_q0;
        end else if ((i2_0_reg_698 == 6'd2)) begin
            ap_phi_mux_phi_ln203_phi_fu_713_p66 = linebuffer_V_1_3_q0;
        end else if ((i2_0_reg_698 == 6'd1)) begin
            ap_phi_mux_phi_ln203_phi_fu_713_p66 = linebuffer_V_1_2_q0;
        end else if ((i2_0_reg_698 == 6'd0)) begin
            ap_phi_mux_phi_ln203_phi_fu_713_p66 = linebuffer_V_1_1_q0;
        end else begin
            ap_phi_mux_phi_ln203_phi_fu_713_p66 = phi_ln203_reg_710;
        end
    end else begin
        ap_phi_mux_phi_ln203_phi_fu_713_p66 = phi_ln203_reg_710;
    end
end

always @ (*) begin
    if (((icmp_ln200_fu_1203_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        data_V_ce0 = 1'b1;
    end else begin
        data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        linebuffer_V_1_0_address0 = linebuffer_V_1_0_addr_reg_1364;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        linebuffer_V_1_0_address0 = sext_ln255_fu_1010_p1;
    end else begin
        linebuffer_V_1_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state4))) begin
        linebuffer_V_1_0_ce0 = 1'b1;
    end else begin
        linebuffer_V_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_698 == 6'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_1_0_we0 = 1'b1;
    end else begin
        linebuffer_V_1_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_1_10_ce0 = 1'b1;
    end else begin
        linebuffer_V_1_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_698 == 6'd10) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_1_10_we0 = 1'b1;
    end else begin
        linebuffer_V_1_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_1_11_ce0 = 1'b1;
    end else begin
        linebuffer_V_1_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_698 == 6'd11) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_1_11_we0 = 1'b1;
    end else begin
        linebuffer_V_1_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_1_12_ce0 = 1'b1;
    end else begin
        linebuffer_V_1_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_698 == 6'd12) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_1_12_we0 = 1'b1;
    end else begin
        linebuffer_V_1_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_1_13_ce0 = 1'b1;
    end else begin
        linebuffer_V_1_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_698 == 6'd13) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_1_13_we0 = 1'b1;
    end else begin
        linebuffer_V_1_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_1_14_ce0 = 1'b1;
    end else begin
        linebuffer_V_1_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_698 == 6'd14) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_1_14_we0 = 1'b1;
    end else begin
        linebuffer_V_1_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_1_15_ce0 = 1'b1;
    end else begin
        linebuffer_V_1_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_698 == 6'd15) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_1_15_we0 = 1'b1;
    end else begin
        linebuffer_V_1_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_1_16_ce0 = 1'b1;
    end else begin
        linebuffer_V_1_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_698 == 6'd16) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_1_16_we0 = 1'b1;
    end else begin
        linebuffer_V_1_16_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_1_17_ce0 = 1'b1;
    end else begin
        linebuffer_V_1_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_698 == 6'd17) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_1_17_we0 = 1'b1;
    end else begin
        linebuffer_V_1_17_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_1_18_ce0 = 1'b1;
    end else begin
        linebuffer_V_1_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_698 == 6'd18) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_1_18_we0 = 1'b1;
    end else begin
        linebuffer_V_1_18_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_1_19_ce0 = 1'b1;
    end else begin
        linebuffer_V_1_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_698 == 6'd19) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_1_19_we0 = 1'b1;
    end else begin
        linebuffer_V_1_19_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_1_1_ce0 = 1'b1;
    end else begin
        linebuffer_V_1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_698 == 6'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_1_1_we0 = 1'b1;
    end else begin
        linebuffer_V_1_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_1_20_ce0 = 1'b1;
    end else begin
        linebuffer_V_1_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_698 == 6'd20) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_1_20_we0 = 1'b1;
    end else begin
        linebuffer_V_1_20_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_1_21_ce0 = 1'b1;
    end else begin
        linebuffer_V_1_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_698 == 6'd21) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_1_21_we0 = 1'b1;
    end else begin
        linebuffer_V_1_21_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_1_22_ce0 = 1'b1;
    end else begin
        linebuffer_V_1_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_698 == 6'd22) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_1_22_we0 = 1'b1;
    end else begin
        linebuffer_V_1_22_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_1_23_ce0 = 1'b1;
    end else begin
        linebuffer_V_1_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_698 == 6'd23) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_1_23_we0 = 1'b1;
    end else begin
        linebuffer_V_1_23_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_1_24_ce0 = 1'b1;
    end else begin
        linebuffer_V_1_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_698 == 6'd24) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_1_24_we0 = 1'b1;
    end else begin
        linebuffer_V_1_24_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_1_25_ce0 = 1'b1;
    end else begin
        linebuffer_V_1_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_698 == 6'd25) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_1_25_we0 = 1'b1;
    end else begin
        linebuffer_V_1_25_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_1_26_ce0 = 1'b1;
    end else begin
        linebuffer_V_1_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_698 == 6'd26) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_1_26_we0 = 1'b1;
    end else begin
        linebuffer_V_1_26_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_1_27_ce0 = 1'b1;
    end else begin
        linebuffer_V_1_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_698 == 6'd27) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_1_27_we0 = 1'b1;
    end else begin
        linebuffer_V_1_27_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_1_28_ce0 = 1'b1;
    end else begin
        linebuffer_V_1_28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_698 == 6'd28) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_1_28_we0 = 1'b1;
    end else begin
        linebuffer_V_1_28_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_1_29_ce0 = 1'b1;
    end else begin
        linebuffer_V_1_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_698 == 6'd29) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_1_29_we0 = 1'b1;
    end else begin
        linebuffer_V_1_29_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_1_2_ce0 = 1'b1;
    end else begin
        linebuffer_V_1_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_698 == 6'd2) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_1_2_we0 = 1'b1;
    end else begin
        linebuffer_V_1_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_1_30_ce0 = 1'b1;
    end else begin
        linebuffer_V_1_30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_698 == 6'd30) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_1_30_we0 = 1'b1;
    end else begin
        linebuffer_V_1_30_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_1_31_ce0 = 1'b1;
    end else begin
        linebuffer_V_1_31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_698 == 6'd31) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_1_31_we0 = 1'b1;
    end else begin
        linebuffer_V_1_31_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_1_32_ce0 = 1'b1;
    end else begin
        linebuffer_V_1_32_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(i2_0_reg_698 == 6'd31) & ~(i2_0_reg_698 == 6'd30) & ~(i2_0_reg_698 == 6'd29) & ~(i2_0_reg_698 == 6'd28) & ~(i2_0_reg_698 == 6'd27) & ~(i2_0_reg_698 == 6'd26) & ~(i2_0_reg_698 == 6'd25) & ~(i2_0_reg_698 == 6'd24) & ~(i2_0_reg_698 == 6'd23) & ~(i2_0_reg_698 == 6'd22) & ~(i2_0_reg_698 == 6'd21) & ~(i2_0_reg_698 == 6'd20) & ~(i2_0_reg_698 == 6'd19) & ~(i2_0_reg_698 == 6'd18) & ~(i2_0_reg_698 == 6'd17) & ~(i2_0_reg_698 == 6'd16) & ~(i2_0_reg_698 == 6'd15) & ~(i2_0_reg_698 == 6'd14) & ~(i2_0_reg_698 == 6'd13) & ~(i2_0_reg_698 == 6'd12) & ~(i2_0_reg_698 == 6'd11) & ~(i2_0_reg_698 == 6'd10) & ~(i2_0_reg_698 == 6'd9) & ~(i2_0_reg_698 == 6'd8) & ~(i2_0_reg_698 == 6'd7) & ~(i2_0_reg_698 == 6'd6) & ~(i2_0_reg_698 == 6'd5) & ~(i2_0_reg_698 == 6'd4) & ~(i2_0_reg_698 == 6'd3) & ~(i2_0_reg_698 == 6'd2) & ~(i2_0_reg_698 == 6'd1) & ~(i2_0_reg_698 == 6'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_1_32_we0 = 1'b1;
    end else begin
        linebuffer_V_1_32_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        linebuffer_V_1_33_address0 = linebuffer_V_1_33_addr_reg_1369;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        linebuffer_V_1_33_address0 = sext_ln255_fu_1010_p1;
    end else begin
        linebuffer_V_1_33_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4))) begin
        linebuffer_V_1_33_ce0 = 1'b1;
    end else begin
        linebuffer_V_1_33_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln258_fu_1016_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_1_33_we0 = 1'b1;
    end else begin
        linebuffer_V_1_33_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_1_3_ce0 = 1'b1;
    end else begin
        linebuffer_V_1_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_698 == 6'd3) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_1_3_we0 = 1'b1;
    end else begin
        linebuffer_V_1_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_1_4_ce0 = 1'b1;
    end else begin
        linebuffer_V_1_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_698 == 6'd4) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_1_4_we0 = 1'b1;
    end else begin
        linebuffer_V_1_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_1_5_ce0 = 1'b1;
    end else begin
        linebuffer_V_1_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_698 == 6'd5) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_1_5_we0 = 1'b1;
    end else begin
        linebuffer_V_1_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_1_6_ce0 = 1'b1;
    end else begin
        linebuffer_V_1_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_698 == 6'd6) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_1_6_we0 = 1'b1;
    end else begin
        linebuffer_V_1_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_1_7_ce0 = 1'b1;
    end else begin
        linebuffer_V_1_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_698 == 6'd7) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_1_7_we0 = 1'b1;
    end else begin
        linebuffer_V_1_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_1_8_ce0 = 1'b1;
    end else begin
        linebuffer_V_1_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_698 == 6'd8) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_1_8_we0 = 1'b1;
    end else begin
        linebuffer_V_1_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_1_9_ce0 = 1'b1;
    end else begin
        linebuffer_V_1_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i2_0_reg_698 == 6'd9) & (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_1_9_we0 = 1'b1;
    end else begin
        linebuffer_V_1_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        output_V_address0 = zext_ln203_fu_1292_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        output_V_address0 = zext_ln192_fu_1198_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        output_V_address0 = zext_ln192_3_fu_1190_p1;
    end else begin
        output_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        output_V_ce0 = 1'b1;
    end else begin
        output_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        output_V_d0 = tmpinput_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        output_V_d0 = output_V_q0;
    end else begin
        output_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state11))) begin
        output_V_we0 = 1'b1;
    end else begin
        output_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        tmpinput_V_address0 = sext_ln203_1_fu_1287_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        tmpinput_V_address0 = sext_ln203_fu_1061_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmpinput_V_address0 = sext_ln252_fu_976_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        tmpinput_V_address0 = zext_ln203_17_fu_932_p1;
    end else begin
        tmpinput_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        tmpinput_V_ce0 = 1'b1;
    end else begin
        tmpinput_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        tmpinput_V_d0 = tmp_V_reg_1539;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        tmpinput_V_d0 = data_V_q0;
    end else begin
        tmpinput_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((icmp_ln258_fu_1016_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6)))) begin
        tmpinput_V_we0 = 1'b1;
    end else begin
        tmpinput_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln246_fu_901_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((icmp_ln250_fu_937_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((icmp_ln258_fu_1016_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state8 : begin
            if (((icmp_ln188_fu_1076_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((icmp_ln190_fu_1124_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((icmp_ln191_fu_1154_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state12 : begin
            if (((icmp_ln200_fu_1203_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state13 : begin
            if (((icmp_ln202_fu_1251_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln192_10_fu_1166_p2 = ($signed(sext_ln192_reg_1570) + $signed(zext_ln191_fu_1150_p1));

assign add_ln192_11_fu_1180_p2 = (zext_ln192_13_reg_1575 + zext_ln191_fu_1150_p1);

assign add_ln192_12_fu_1185_p2 = (add_ln192_11_fu_1180_p2 + or_ln1_reg_1588);

assign add_ln192_9_fu_1175_p2 = ($signed(sext_ln192_4_fu_1171_p1) + $signed(zext_ln192_14_reg_1593));

assign add_ln192_fu_1114_p2 = ($signed(4'd3) + $signed(sub_ln192_fu_1104_p2));

assign add_ln203_1_fu_1273_p2 = (or_ln_reg_1624 + zext_ln203_11_fu_1269_p1);

assign add_ln203_5_fu_926_p2 = (zext_ln203_16_fu_922_p1 + 4'd6);

assign add_ln203_6_fu_1056_p2 = (sub_ln203_1_fu_1050_p2 + zext_ln203_15_reg_1309);

assign add_ln203_7_fu_1282_p2 = (sub_ln203_reg_1629 + zext_ln203_22_fu_1278_p1);

assign add_ln203_fu_1263_p2 = (zext_ln202_fu_1247_p1 + 4'd6);

assign add_ln252_fu_971_p2 = (sub_ln252_fu_965_p2 + zext_ln203_15_reg_1309);

assign add_ln255_3_fu_1005_p2 = (sub_ln255_fu_999_p2 + zext_ln203_16_reg_1315);

assign add_ln255_fu_981_p2 = ($signed(i1_0_reg_686) + $signed(2'd3));

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_phi_mux_i2_0_phi_fu_702_p4 = i2_0_reg_698;

assign data_V_address0 = zext_ln248_fu_913_p1;

assign i0_3_fu_1082_p2 = (i0_0_i_reg_846 + 2'd1);

assign i0_fu_907_p2 = (i0_0_reg_674 + 2'd1);

assign i1_5_fu_1130_p2 = (i1_0_i_reg_857 + 2'd1);

assign i1_6_fu_1209_p2 = (i11_0_i_reg_879 + 2'd1);

assign i1_fu_1066_p2 = (i1_0_reg_686 + 2'd1);

assign i2_5_fu_1160_p2 = (i2_0_i_reg_868 + 2'd1);

assign i2_6_fu_1022_p2 = (i2_0_reg_698 + 6'd1);

assign i2_fu_1257_p2 = (i22_0_i_reg_890 + 2'd1);

assign icmp_ln188_fu_1076_p2 = ((i0_0_i_reg_846 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln190_fu_1124_p2 = ((i1_0_i_reg_857 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln191_fu_1154_p2 = ((i2_0_i_reg_868 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln200_fu_1203_p2 = ((i11_0_i_reg_879 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln202_fu_1251_p2 = ((i22_0_i_reg_890 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln246_fu_901_p2 = ((i0_0_reg_674 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln250_fu_937_p2 = ((i1_0_reg_686 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln258_fu_1016_p2 = ((i2_0_reg_698 == 6'd33) ? 1'b1 : 1'b0);

assign or_ln1_fu_1136_p4 = {{{i1_0_i_reg_857}, {1'd0}}, {i1_0_i_reg_857}};

assign or_ln_fu_1215_p4 = {{{i11_0_i_reg_879}, {1'd0}}, {i11_0_i_reg_879}};

assign sext_ln192_3_fu_1195_p1 = $signed(add_ln192_9_reg_1606);

assign sext_ln192_4_fu_1171_p1 = $signed(add_ln192_10_fu_1166_p2);

assign sext_ln192_fu_1110_p1 = sub_ln192_fu_1104_p2;

assign sext_ln203_1_fu_1287_p1 = $signed(add_ln203_7_fu_1282_p2);

assign sext_ln203_fu_1061_p1 = $signed(add_ln203_6_fu_1056_p2);

assign sext_ln252_fu_976_p1 = $signed(add_ln252_fu_971_p2);

assign sext_ln255_fu_1010_p1 = $signed(add_ln255_3_fu_1005_p2);

assign shl_ln_fu_1092_p3 = {{trunc_ln192_fu_1088_p1}, {2'd0}};

assign sub_ln192_fu_1104_p2 = (zext_ln192_12_fu_1100_p1 - zext_ln188_fu_1072_p1);

assign sub_ln203_1_fu_1050_p2 = (zext_ln203_21_fu_1046_p1 - zext_ln203_20_fu_1034_p1);

assign sub_ln203_fu_1241_p2 = (zext_ln203_19_fu_1237_p1 - zext_ln203_18_fu_1225_p1);

assign sub_ln252_fu_965_p2 = (zext_ln252_3_fu_961_p1 - zext_ln252_fu_949_p1);

assign sub_ln255_fu_999_p2 = (tmp_111_fu_991_p3 - zext_ln255_fu_987_p1);

assign sub_ln265_fu_1028_p2 = ($signed(2'd2) - $signed(i1_0_reg_686));

assign tmp_110_fu_953_p3 = {{xor_ln252_fu_943_p2}, {2'd0}};

assign tmp_111_fu_991_p3 = {{add_ln255_fu_981_p2}, {2'd0}};

assign tmp_112_fu_1229_p3 = {{i11_0_i_reg_879}, {2'd0}};

assign tmp_113_fu_1038_p3 = {{sub_ln265_fu_1028_p2}, {2'd0}};

assign trunc_ln192_fu_1088_p1 = i0_0_i_reg_846[0:0];

assign xor_ln252_fu_943_p2 = (i1_0_reg_686 ^ 2'd3);

assign zext_ln188_fu_1072_p1 = i0_0_i_reg_846;

assign zext_ln191_fu_1150_p1 = i2_0_i_reg_868;

assign zext_ln192_12_fu_1100_p1 = shl_ln_fu_1092_p3;

assign zext_ln192_13_fu_1120_p1 = add_ln192_fu_1114_p2;

assign zext_ln192_14_fu_1146_p1 = or_ln1_fu_1136_p4;

assign zext_ln192_3_fu_1190_p1 = add_ln192_12_fu_1185_p2;

assign zext_ln192_fu_1198_p1 = $unsigned(sext_ln192_3_fu_1195_p1);

assign zext_ln202_fu_1247_p1 = i22_0_i_reg_890;

assign zext_ln203_11_fu_1269_p1 = add_ln203_fu_1263_p2;

assign zext_ln203_15_fu_918_p1 = i0_0_reg_674;

assign zext_ln203_16_fu_922_p1 = i0_0_reg_674;

assign zext_ln203_17_fu_932_p1 = add_ln203_5_fu_926_p2;

assign zext_ln203_18_fu_1225_p1 = i11_0_i_reg_879;

assign zext_ln203_19_fu_1237_p1 = tmp_112_fu_1229_p3;

assign zext_ln203_20_fu_1034_p1 = sub_ln265_fu_1028_p2;

assign zext_ln203_21_fu_1046_p1 = tmp_113_fu_1038_p3;

assign zext_ln203_22_fu_1278_p1 = i22_0_i_reg_890;

assign zext_ln203_fu_1292_p1 = add_ln203_1_reg_1642;

assign zext_ln248_fu_913_p1 = i0_0_reg_674;

assign zext_ln252_3_fu_961_p1 = tmp_110_fu_953_p3;

assign zext_ln252_fu_949_p1 = xor_ln252_fu_943_p2;

assign zext_ln255_fu_987_p1 = add_ln255_fu_981_p2;

always @ (posedge ap_clk) begin
    zext_ln203_15_reg_1309[4:2] <= 3'b000;
    zext_ln203_16_reg_1315[3:2] <= 2'b00;
    zext_ln192_13_reg_1575[4] <= 1'b0;
    or_ln1_reg_1588[2] <= 1'b0;
    zext_ln192_14_reg_1593[2] <= 1'b0;
    zext_ln192_14_reg_1593[5] <= 1'b0;
    or_ln_reg_1624[2] <= 1'b0;
end

endmodule //cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s
